/* Generated by the Nim Compiler v1.2.6 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI13987019 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12661064 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12661058 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12661074 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12661066 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12661048 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12661056 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12245011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1163008 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI12134003 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13086296 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12661062 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12996151 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13075331 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13075338 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13055003 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12661052 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12661050 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI13035806 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13030566 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1169045 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI13017430 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12661068 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1169021 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1169043 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI5365232 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI5620011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1163010 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI12661187 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12661054 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11426084 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1163065 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1163006 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI1163081 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI11426041 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11426045 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11426043 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11426073 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11426070 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11426067 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1169051 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1169049 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1169037 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1169033 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1169035 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10836030 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12006078 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12006075 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12006072 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1169053 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1163045 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1325043 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1168808 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1169086 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1163016 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI1169081 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1169017 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1169019 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1169041 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1163014 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI1169041 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1169041.node = NNI1169041;
var NNI1169019 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1169019.node = NNI1169019;
NTI1169081.base = NTI1169017;
NTI1169086.base = NTI1169017;
var NNI1169017 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI1169081, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1163016, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI1163014, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI1163014, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI1169086, name: "up", sons: null}]};
NTI1169017.node = NNI1169017;
var NNI1168808 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1168808.node = NNI1168808;
NTI1169017.base = NTI1168808;
NTI1169019.base = NTI1169017;
NTI1169041.base = NTI1169019;
var NNI1325043 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1163016, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1163045, name: "Field1", sons: null}]};
NTI1325043.node = NNI1325043;
var NNI1169053 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1169053.node = NNI1169053;
NTI1169053.base = NTI1169019;
var NNI12006078 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10836030, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1163014, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1163014, name: "Field2", sons: null}]};
NTI12006078.node = NNI12006078;
NTI12006075.base = NTI12006078;
var NNI12006072 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI12006075, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI1163045, name: "counter", sons: null}]};
NTI12006072.node = NNI12006072;
var NNI1169035 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1169035.node = NNI1169035;
var NNI1169033 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1169033.node = NNI1169033;
NTI1169033.base = NTI1169019;
NTI1169035.base = NTI1169033;
var NNI1169037 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1169037.node = NNI1169037;
NTI1169037.base = NTI1169033;
var NNI1169049 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1169049.node = NNI1169049;
NTI1169049.base = NTI1169019;
var NNI1169051 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1169051.node = NNI1169051;
NTI1169051.base = NTI1169019;
var NNI11426041 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI11426041, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI11426041, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11426041, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI11426041, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI11426041, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI11426041, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI11426041, name: "JArray", len: 0, sons: null}}};
NTI11426041.node = NNI11426041;
NTI11426084.base = NTI11426043;
var NNI11426045 = {kind: 3, offset: "kind", len: 7, typ: NTI11426041, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI1163014, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI1163081, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI1163006, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI1163065, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI11426067, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI11426084, name: "elems", sons: null}]]};
NTI11426045.node = NNI11426045;
NTI11426043.base = NTI11426045;
var NNI11426073 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10836030, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1163045, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1163014, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI11426043, name: "Field3", sons: null}]};
NTI11426073.node = NNI11426073;
NTI11426070.base = NTI11426073;
var NNI11426067 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI11426070, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI1163045, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI1163045, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI1163045, name: "last", sons: null}]};
NTI11426067.node = NNI11426067;
var NNI12661054 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI12661054, name: "", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12661054, name: "tonexty", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12661054, name: "tozeroy", len: 0, sons: null}}};
NTI12661054.node = NNI12661054;
var NNI12661187 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1163010, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1163010, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1163010, name: "Field2", sons: null}]};
NTI12661187.node = NNI12661187;
var NNI5620011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI5365232, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1163045, name: "b", sons: null}]};
NTI5620011.node = NNI5620011;
var NNI1169043 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1169043.node = NNI1169043;
var NNI1169021 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1169021.node = NNI1169021;
NTI1169021.base = NTI1169017;
NTI1169043.base = NTI1169021;
var NNI12661068 = {kind: 2, offset: 0, typ: null, name: null, len: 20, sons: {"0": {kind: 1, offset: 0, typ: NTI12661068, name: "", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12661068, name: "Custom", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12661068, name: "Greys", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12661068, name: "YlGnBu", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12661068, name: "Greens", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI12661068, name: "YlOrRd", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI12661068, name: "Bluered", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI12661068, name: "RdBu", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI12661068, name: "Reds", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI12661068, name: "Blues", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI12661068, name: "Picnic", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI12661068, name: "Rainbow", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI12661068, name: "Portland", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI12661068, name: "Jet", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI12661068, name: "Hot", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI12661068, name: "Blackbody", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI12661068, name: "Earth", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI12661068, name: "Electric", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI12661068, name: "Viridis", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI12661068, name: "Cividis", len: 0, sons: null}}};
NTI12661068.node = NNI12661068;
var NNI13017430 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1163014, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI11426043, name: "Field1", sons: null}]};
NTI13017430.node = NNI13017430;
var NNI1169045 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1169045.node = NNI1169045;
NTI1169045.base = NTI1169043;
var NNI13030566 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1163014, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI11426043, name: "Field1", sons: null}]};
NTI13030566.node = NNI13030566;
var NNI13035806 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1163014, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI11426043, name: "Field1", sons: null}]};
NTI13035806.node = NNI13035806;
var NNI12661050 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI12661050, name: "count", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12661050, name: "sum", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12661050, name: "avg", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12661050, name: "min", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12661050, name: "max", len: 0, sons: null}}};
NTI12661050.node = NNI12661050;
var NNI12661052 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI12661052, name: "", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12661052, name: "percent", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12661052, name: "probability", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12661052, name: "density", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12661052, name: "probability density", len: 0, sons: null}}};
NTI12661052.node = NNI12661052;
var NNI13055003 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1163014, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI11426043, name: "Field1", sons: null}]};
NTI13055003.node = NNI13055003;
NTI13075338.base = NTI1163006;
NTI13075331.base = NTI1163006;
NTI12996151.base = NTI1163010;
var NNI12661062 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI12661062, name: "", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12661062, name: "v", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12661062, name: "h", len: 0, sons: null}}};
NTI12661062.node = NNI12661062;
var NNI13086296 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1163014, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI11426043, name: "Field1", sons: null}]};
NTI13086296.node = NNI13086296;
var NNI12134003 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI1163008, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI1163008, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1163008, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI1163008, name: "a", sons: null}]};
NTI12134003.node = NNI12134003;
var NNI12245011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1163045, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1163045, name: "b", sons: null}]};
NTI12245011.node = NNI12245011;
var NNI12661056 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI12661056, name: "lines", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12661056, name: "markers", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12661056, name: "lines+markers", len: 0, sons: null}}};
NTI12661056.node = NNI12661056;
var NNI12661048 = {kind: 2, offset: 0, typ: null, name: null, len: 9, sons: {"0": {kind: 1, offset: 0, typ: NTI12661048, name: "scatter", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12661048, name: "scattergl", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12661048, name: "bar", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12661048, name: "histogram", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12661048, name: "box", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI12661048, name: "heatmap", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI12661048, name: "heatmapgl", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI12661048, name: "candlestick", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI12661048, name: "contour", len: 0, sons: null}}};
NTI12661048.node = NNI12661048;
var NNI12661066 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI12661066, name: "", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12661066, name: "left", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12661066, name: "right", len: 0, sons: null}}};
NTI12661066.node = NNI12661066;
var NNI12661074 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI12661074, name: "-", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12661074, name: "log", len: 0, sons: null}}};
NTI12661074.node = NNI12661074;
var NNI12661058 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI12661058, name: "", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12661058, name: "stack", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12661058, name: "overlay", len: 0, sons: null}}};
NTI12661058.node = NNI12661058;
var NNI12661064 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI12661064, name: "closest", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12661064, name: "x", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12661064, name: "y", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12661064, name: "false", len: 0, sons: null}}};
NTI12661064.node = NNI12661064;
var NNI13987019 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI1163006, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI1163006, name: "y", sons: null}, 
{kind: 1, offset: "z", len: 0, typ: NTI1163006, name: "z", sons: null}]};
NTI13987019.node = NNI13987019;
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_1405023, src_1405024, ti_1405025) {
  var result_1410219 = null;

    switch (ti_1405025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(is_fat_pointer_1400401(ti_1405025))) {
      result_1410219 = src_1405024;
      }
      else {
        result_1410219 = [src_1405024[0], src_1405024[1]];
      }
      
      break;
    case 19:
            if (dest_1405023 === null || dest_1405023 === undefined) {
        dest_1405023 = {};
      }
      else {
        for (var key in dest_1405023) { delete dest_1405023[key]; }
      }
      for (var key in src_1405024) { dest_1405023[key] = src_1405024[key]; }
      result_1410219 = dest_1405023;
    
      break;
    case 18:
    case 17:
      if (!((ti_1405025.base == null))) {
      result_1410219 = nimCopy(dest_1405023, src_1405024, ti_1405025.base);
      }
      else {
      if ((ti_1405025.kind == 17)) {
      result_1410219 = (dest_1405023 === null || dest_1405023 === undefined) ? {m_type: ti_1405025} : dest_1405023;
      }
      else {
        result_1410219 = (dest_1405023 === null || dest_1405023 === undefined) ? {} : dest_1405023;
      }
      }
      nimCopyAux(result_1410219, src_1405024, ti_1405025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_1405024 === null) {
        result_1410219 = null;
      }
      else {
        if (dest_1405023 === null || dest_1405023 === undefined) {
          dest_1405023 = new Array(src_1405024.length);
        }
        else {
          dest_1405023.length = src_1405024.length;
        }
        result_1410219 = dest_1405023;
        for (var i = 0; i < src_1405024.length; ++i) {
          result_1410219[i] = nimCopy(result_1410219[i], src_1405024[i], ti_1405025.base);
        }
      }
    
      break;
    case 28:
            if (src_1405024 !== null) {
        result_1410219 = src_1405024.slice(0);
      }
    
      break;
    default: 
      result_1410219 = src_1405024;
      break;
    }

  return result_1410219;

}
function makeNimstrLit(c_1390062) {
      var ln = c_1390062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_1390062.charCodeAt(i);
  }
  return result;
  

  
}
function arrayConstr(len_1415067, value_1415068, typ_1415069) {
        var result = new Array(len_1415067);
    for (var i = 0; i < len_1415067; ++i) result[i] = nimCopy(null, value_1415068, typ_1415069);
    return result;
  

  
}
function cstrToNimstr(c_1390079) {
      var ln = c_1390079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_1390079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_1390079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function toJSStr(s_1390096) {
                    var Tmp5;
            var Tmp7;

  var result_1390097 = null;

    var res_1390170 = new_seq_1390128((s_1390096 != null ? s_1390096.length : 0));
    var i_1390172 = 0;
    var j_1390174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_1390172 < (s_1390096 != null ? s_1390096.length : 0))) break L2;
          var c_1390175 = s_1390096[i_1390172];
          if ((c_1390175 < 128)) {
          res_1390170[j_1390174] = String.fromCharCode(c_1390175);
          i_1390172 += 1;
          }
          else {
            var helper_1390198 = new_seq_1390128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_1390199 = c_1390175.toString(16);
                  if (((code_1390199 != null ? code_1390199.length : 0) == 1)) {
                  if (helper_1390198 != null) { helper_1390198.push("%0"); } else { helper_1390198 = ["%0"]; };
                  }
                  else {
                  if (helper_1390198 != null) { helper_1390198.push("%"); } else { helper_1390198 = ["%"]; };
                  }
                  
                  if (helper_1390198 != null) { helper_1390198.push(code_1390199); } else { helper_1390198 = [code_1390199]; };
                  i_1390172 += 1;
                    if (((s_1390096 != null ? s_1390096.length : 0) <= i_1390172)) Tmp5 = true; else {                      Tmp5 = (s_1390096[i_1390172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_1390175 = s_1390096[i_1390172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_1390170[j_1390174] = decodeURIComponent(helper_1390198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_1390170[j_1390174] = helper_1390198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_1390174 += 1;
        }
    } while(false);
    if (res_1390170 === null) res_1390170 = [];
               if (res_1390170.length < j_1390174) { for (var i=res_1390170.length;i<j_1390174;++i) res_1390170.push(null); }
               else { res_1390170.length = j_1390174; };
    result_1390097 = res_1390170.join("");

  return result_1390097;

}
function raiseException(e_1355218, ename_1355219) {
    e_1355218.name = ename_1355219;
    if ((excHandler == 0)) {
    unhandledException(e_1355218);
    }
    
    e_1355218.trace = nimCopy(null, raw_write_stack_trace_1345059(), NTI1163014);
    throw e_1355218;

  
}
function chckRange(i_1420016, a_1420017, b_1420018) {
      var Tmp1;

  var result_1420019 = 0;

  BeforeRet: do {
      if (!(a_1420017 <= i_1420016)) Tmp1 = false; else {        Tmp1 = (i_1420016 <= b_1420018);      }    if (Tmp1) {
    result_1420019 = i_1420016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_1420019;

}
function divInt(a_1395457, b_1395458) {
        if (b_1395458 == 0) raiseDivByZero();
    if (b_1395458 == -1 && a_1395457 == 2147483647) raiseOverflow();
    return Math.trunc(a_1395457 / b_1395458);
  

  
}
function mulInt(a_1395439, b_1395440) {
        var result = a_1395439 * b_1395440;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function subInt(a_1395421, b_1395422) {
        var result = a_1395421 - b_1395422;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function addInt(a_1395403, b_1395404) {
        var result = a_1395403 + b_1395404;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function chckIndx(i_1415086, a_1415087, b_1415088) {
      var Tmp1;

  var result_1415089 = 0;

  BeforeRet: do {
      if (!(a_1415087 <= i_1415086)) Tmp1 = false; else {        Tmp1 = (i_1415086 <= b_1415088);      }    if (Tmp1) {
    result_1415089 = i_1415086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_1415086, a_1415087, b_1415088);
    }
    
  } while (false);

  return result_1415089;

}
function modInt(a_1395475, b_1395476) {
        if (b_1395476 == 0) raiseDivByZero();
    if (b_1395476 == -1 && a_1395475 == 2147483647) raiseOverflow();
    return Math.trunc(a_1395475 % b_1395476);
  

  
}
function eqStrings(a_1395222, b_1395223) {
        if (a_1395222 == b_1395223) return true;
    if (a_1395222 === null && b_1395223.length == 0) return true;
    if (b_1395223 === null && a_1395222.length == 0) return true;
    if ((!a_1395222) || (!b_1395223)) return false;
    var alen = a_1395222.length;
    if (alen != b_1395223.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_1395222[i] != b_1395223[i]) return false;
    return true;
  

  
}
var ConstSet2 = setConstr(6);
function raiseFieldError(f_1385047) {
    raiseException({message: nimCopy(null, f_1385047, NTI1163014), parent: null, m_type: NTI1169051, name: null, trace: null, up: null}, "FieldError");

  
}
var ConstSet3 = setConstr(5);
function mnewString(len_1395044) {
        return new Array(len_1395044);
  

  
}
function addChar(x_1440031, c_1440032) {
    x_1440031.push(c_1440032);

  
}
var ConstSet4 = setConstr(4);
var ConstSet5 = setConstr(2);
var ConstSet6 = setConstr(3);
var ConstSet7 = setConstr(1);
var ConstSet8 = setConstr(6);
function genericReset(x_1415044, ti_1415045) {
  var result_1415046 = null;

    result_1415046 = null;
    switch (ti_1415045.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (is_fat_pointer_1400401(ti_1415045)) {
              result_1415046 = [null, 0];
      
      }
      
      break;
    case 19:
            result_1415046 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_1415045.kind == 17)) {
      result_1415046 = {m_type: ti_1415045};
      }
      else {
        result_1415046 = {};
      }
      
      break;
    case 24:
    case 27:
            result_1415046 = [];
    
      break;
    case 4:
    case 16:
            result_1415046 = new Array(x_1415044.length);
      for (var i = 0; i < x_1415044.length; ++i) {
        result_1415046[i] = genericReset(x_1415044[i], ti_1415045.base);
      }
    
      break;
    default: 
      break;
    }

  return result_1415046;

}
function reprEnum(e_1480480, typ_1480481) {
  var result_1480482 = null;

  var F={procname:"system.reprEnum",prev:framePtr,filename:"reprjs.nim",line:0};
  framePtr = F;
    if (!(is_undefined_1480483(typ_1480481.node.sons[e_1480480]))) {
    F.line = 38;
    result_1480482 = nimCopy(null, makeNimstrLit(typ_1480481.node.sons[e_1480480].name), NTI1163014);
    }
    else {
      F.line = 40;
      result_1480482 = nimCopy(null, (cstrToNimstr((e_1480480)+"") || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI1163014);
    }
    
  framePtr = F.prev;

  return result_1480482;

}
var ConstSet9 = setConstr(60, 62, 94);
var ConstSet10 = setConstr(60, 62, 94);
var ConstSet11 = setConstr(45, 43, 32);
var ConstSet12 = setConstr([48, 57]);
var ConstSet13 = setConstr([48, 57]);
var ConstSet14 = setConstr([48, 57]);
var ConstSet15 = setConstr([65, 90], [97, 122]);
var ConstSet16 = setConstr(46, 44);
function nimCharToStr(x_1321052) {
  var result_1321053 = null;

    result_1321053 = nimCopy(null, mnewString(1), NTI1163014);
    result_1321053[0] = x_1321052;

  return result_1321053;

}
var ConstSet17 = setConstr([65, 90]);
var ConstSet18 = setConstr([97, 122]);
var ConstSet19 = setConstr(5, 6);
var ConstSet20 = setConstr(5, 6);
var ConstSet21 = setConstr(5, 6);
var ConstSet22 = setConstr(5, 6);
var ConstSet23 = setConstr(5, 6);
var ConstSet24 = setConstr(5, 6);
var ConstSet25 = setConstr(8);
var ConstSet26 = setConstr(8);
var ConstSet27 = setConstr(8);
var ConstSet28 = setConstr(8);
var ConstSet29 = setConstr(5);
var ConstSet30 = setConstr(8);
var ConstSet31 = setConstr(8);
var ConstSet32 = setConstr(8);
var ConstSet33 = setConstr(8);
var ConstSet34 = setConstr(5);
var ConstSet35 = setConstr(8);
var ConstSet36 = setConstr(8);
var ConstSet37 = setConstr(7);
var ConstSet38 = setConstr(7);
var ConstSet39 = setConstr(7);
var ConstSet40 = setConstr(7);
var ConstSet41 = setConstr(3);
var ConstSet42 = setConstr(3);
var ConstSet43 = setConstr(3);
var ConstSet44 = setConstr(3);
var ConstSet45 = setConstr(3);
var ConstSet46 = setConstr(3);
var ConstSet47 = setConstr(3);
var ConstSet48 = setConstr(3);
var ConstSet49 = setConstr(3);
var ConstSet50 = setConstr(3);
var ConstSet51 = setConstr(2);
var ConstSet52 = setConstr(2);
var ConstSet53 = setConstr(2);
var ConstSet54 = setConstr(2);
var ConstSet55 = setConstr(2);
var ConstSet56 = setConstr(2);
var ConstSet57 = setConstr(2);
var ConstSet58 = setConstr(2);
var ConstSet59 = setConstr(2);
var ConstSet60 = setConstr(2);
var ConstSet61 = setConstr(2);
var ConstSet62 = setConstr(2);
var ConstSet63 = setConstr(2);
var ConstSet64 = setConstr(2);
var ConstSet65 = setConstr(0, 1);
var ConstSet66 = setConstr(0, 1);
var ConstSet67 = setConstr(0);
var ConstSet68 = setConstr(1);
var ConstSet69 = setConstr(1);
var ConstSet70 = setConstr(2);
var ConstSet71 = setConstr(3);
var ConstSet72 = setConstr(3);
var ConstSet73 = setConstr(5);
var ConstSet74 = setConstr(6);
var ConstSet75 = setConstr(6);
var ConstSet76 = setConstr(6);
var ConstSet77 = setConstr(5);
var nim_program_result = 0;
var global_raise_hook_1307018 = [null];
var local_raise_hook_1307023 = [null];
var out_of_mem_hook_1307026 = [null];
var unhandled_exception_hook_1307031 = [null];
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var object_id_10840031 = [0];
function is_power_of_two_2245029(x_2245031) {
    var Tmp1;

  var result_2245032 = false;

  BeforeRet: do {
    if (!(0 < x_2245031)) Tmp1 = false; else {      Tmp1 = ((x_2245031 & (x_2245031 - 1)) == 0);    }    result_2245032 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_2245032;

}
function is_fat_pointer_1400401(ti_1400403) {
  var result_1400404 = false;

  BeforeRet: do {
    result_1400404 = !((ConstSet1[ti_1400403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_1400404;

}
function nimCopyAux(dest_1405028, src_1405029, n_1405031) {
    switch (n_1405031.kind) {
    case 0:
      break;
    case 1:
            dest_1405028[n_1405031.offset] = nimCopy(dest_1405028[n_1405031.offset], src_1405029[n_1405031.offset], n_1405031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_1405031.sons.length; i++) {
      nimCopyAux(dest_1405028, src_1405029, n_1405031.sons[i]);
    }
    
      break;
    case 3:
            dest_1405028[n_1405031.offset] = nimCopy(dest_1405028[n_1405031.offset], src_1405029[n_1405031.offset], n_1405031.typ);
      for (var i = 0; i < n_1405031.sons.length; ++i) {
        nimCopyAux(dest_1405028, src_1405029, n_1405031.sons[i][1]);
      }
    
      break;
    }

  
}
function add_1307042(x_1307045, x_1307045_Idx, y_1307046) {
          if (x_1307045[x_1307045_Idx] === null) { x_1307045[x_1307045_Idx] = []; }
      var off = x_1307045[x_1307045_Idx].length;
      x_1307045[x_1307045_Idx].length += y_1307046.length;
      for (var i = 0; i < y_1307046.length; ++i) {
        x_1307045[x_1307045_Idx][off+i] = y_1307046.charCodeAt(i);
      }
    

  
}
function aux_write_stack_trace_1325038(f_1325040) {
          var Tmp3;

  var result_1325041 = [null];

    var it_1325049 = f_1325040;
    var i_1325051 = 0;
    var total_1325053 = 0;
    var temp_frames_1325060 = arrayConstr(64, {Field0: null, Field1: 0}, NTI1325043);
    L1: do {
        L2: while (true) {
          if (!!((it_1325049 == null))) Tmp3 = false; else {            Tmp3 = (i_1325051 <= 63);          }        if (!Tmp3) break L2;
          temp_frames_1325060[i_1325051].Field0 = it_1325049.procname;
          temp_frames_1325060[i_1325051].Field1 = it_1325049.line;
          i_1325051 += 1;
          total_1325053 += 1;
          it_1325049 = it_1325049.prev;
        }
    } while(false);
    L4: do {
        L5: while (true) {
        if (!!((it_1325049 == null))) break L5;
          total_1325053 += 1;
          it_1325049 = it_1325049.prev;
        }
    } while(false);
    result_1325041[0] = nimCopy(null, [], NTI1163014);
    if (!((total_1325053 == i_1325051))) {
    if (result_1325041[0] != null) { result_1325041[0] = (result_1325041[0]).concat(makeNimstrLit("(")); } else { result_1325041[0] = makeNimstrLit("("); };
    if (result_1325041[0] != null) { result_1325041[0] = (result_1325041[0]).concat(cstrToNimstr(((total_1325053 - i_1325051))+"")); } else { result_1325041[0] = cstrToNimstr(((total_1325053 - i_1325051))+"").slice(); };
    if (result_1325041[0] != null) { result_1325041[0] = (result_1325041[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_1325041[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
    }
    
    L6: do {
      var j_1340236 = 0;
      var colontmp__12133503 = 0;
      colontmp__12133503 = (i_1325051 - 1);
      var res_12133508 = colontmp__12133503;
      L7: do {
          L8: while (true) {
          if (!(0 <= res_12133508)) break L8;
            j_1340236 = res_12133508;
            add_1307042(result_1325041, 0, temp_frames_1325060[j_1340236].Field0);
            if ((0 < temp_frames_1325060[j_1340236].Field1)) {
            if (result_1325041[0] != null) { result_1325041[0] = (result_1325041[0]).concat(makeNimstrLit(", line: ")); } else { result_1325041[0] = makeNimstrLit(", line: "); };
            if (result_1325041[0] != null) { result_1325041[0] = (result_1325041[0]).concat(cstrToNimstr((temp_frames_1325060[j_1340236].Field1)+"")); } else { result_1325041[0] = cstrToNimstr((temp_frames_1325060[j_1340236].Field1)+"").slice(); };
            }
            
            if (result_1325041[0] != null) { result_1325041[0] = (result_1325041[0]).concat(makeNimstrLit("\x0A")); } else { result_1325041[0] = makeNimstrLit("\x0A"); };
            res_12133508 -= 1;
          }
      } while(false);
    } while(false);

  return result_1325041[0];

}
function raw_write_stack_trace_1345059() {
  var result_1345061 = null;

    if (!((framePtr == null))) {
    result_1345061 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_1325038(framePtr) || []), NTI1163014);
    }
    else {
      result_1345061 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI1163014);
    }
    

  return result_1345061;

}
function new_seq_1390128(len_1390131) {
  var result_1390133 = null;

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 643;
    result_1390133 = new Array(len_1390131); for (var i=0;i<len_1390131;++i) {result_1390133[i]=null;}  framePtr = F.prev;

  return result_1390133;

}
function unhandledException(e_1350059) {
    var buf_1350060 = [[]];
    if (!(((e_1350059.message != null ? e_1350059.message.length : 0) == 0))) {
    if (buf_1350060[0] != null) { buf_1350060[0] = (buf_1350060[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_1350060[0] = makeNimstrLit("Error: unhandled exception: "); };
    if (buf_1350060[0] != null) { buf_1350060[0] = (buf_1350060[0]).concat(e_1350059.message); } else { buf_1350060[0] = e_1350059.message.slice(); };
    }
    else {
    if (buf_1350060[0] != null) { buf_1350060[0] = (buf_1350060[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_1350060[0] = makeNimstrLit("Error: unhandled exception"); };
    }
    
    if (buf_1350060[0] != null) { buf_1350060[0] = (buf_1350060[0]).concat(makeNimstrLit(" [")); } else { buf_1350060[0] = makeNimstrLit(" ["); };
    add_1307042(buf_1350060, 0, e_1350059.name);
    if (buf_1350060[0] != null) { buf_1350060[0] = (buf_1350060[0]).concat(makeNimstrLit("]\x0A")); } else { buf_1350060[0] = makeNimstrLit("]\x0A"); };
    if (buf_1350060[0] != null) { buf_1350060[0] = (buf_1350060[0]).concat(raw_write_stack_trace_1345059()); } else { buf_1350060[0] = raw_write_stack_trace_1345059().slice(); };
    var cbuf_1355201 = toJSStr(buf_1350060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_1355201);
  }
  else {
    throw cbuf_1355201;
  }
  

  
}
function sys_fatal_1267618(message_1267622) {
  var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
  framePtr = F;
    F.line = 49;
    raiseException({message: nimCopy(null, message_1267622, NTI1163014), m_type: NTI1169041, parent: null, name: null, trace: null, up: null}, "AssertionError");
  framePtr = F.prev;

  
}
function raise_assert_1267614(msg_1267616) {
  var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"assertions.nim",line:0};
  framePtr = F;
    F.line = 22;
    sys_fatal_1267618(msg_1267616);
  framePtr = F.prev;

  
}
function failed_assert_impl_1267680(msg_1267682) {
  var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"assertions.nim",line:0};
  framePtr = F;
    F.line = 29;
    raise_assert_1267614(msg_1267682);
  framePtr = F.prev;

  
}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI1169053, name: null, trace: null, up: null}, "RangeError");

  
}
function init_table_12006173(initial_size_12006177) {
  var result_12006179 = ({data: null, counter: 0});

  var F={procname:"initTable.initTable",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (!(is_power_of_two_2245029(initial_size_12006177))) {
    F.line = 166;
    failed_assert_impl_1267680(makeNimstrLit("/usr/lib/nim/pure/collections/tableimpl.nim(166, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    F.line = 167;
    result_12006179.counter = 0;
    F.line = 168;
    result_12006179.data = new Array(chckRange(initial_size_12006177, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_12006177, 0, 2147483647);++i) {result_12006179.data[i]={Field0: 0, Field1: null, Field2: null};}  framePtr = F.prev;

  return result_12006179;

}
function new_table_12115747(initial_size_12115751) {
  var result_12115753 = null;

  var F={procname:"newTable.newTable",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 802;
    result_12115753 = ({data: null, counter: 0});
    F.line = 803;
    nimCopy(result_12115753, init_table_12006173(initial_size_12115751), NTI12006072);
  framePtr = F.prev;

  return result_12115753;

}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI1169035, name: null, trace: null, up: null}, "DivByZeroError");

  
}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI1169037, name: null, trace: null, up: null}, "OverflowError");

  
}
function raiseIndexError(i_1375047, a_1375048, b_1375049) {
    var Tmp1;

    if ((b_1375049 < a_1375048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_1375047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_1375048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_1375049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI1163014), parent: null, m_type: NTI1169049, name: null, trace: null, up: null}, "IndexError");

  
}
function imul_10840517(a_10840519, b_10840520) {
  var result_10840521 = 0;

  var F={procname:"hashes.imul",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 133;
    var mask_10840522 = 65535;
    F.line = 135;
    var a_hi_10840531 = (((a_10840519 >>> 0) >>> 16) & mask_10840522);
    F.line = 136;
    var a_lo_10840532 = (a_10840519 & mask_10840522);
    F.line = 137;
    var b_hi_10840541 = (((b_10840520 >>> 0) >>> 16) & mask_10840522);
    F.line = 138;
    var b_lo_10840542 = (b_10840520 & mask_10840522);
    F.line = 139;
    result_10840521 = ((((a_lo_10840532 * b_lo_10840542) >>> 0) + (((((a_hi_10840531 * b_lo_10840542) >>> 0) + ((a_lo_10840532 * b_hi_10840541) >>> 0)) >>> 0) << 16)) >>> 0);
  framePtr = F.prev;

  return result_10840521;

}
function rotl32_10840601(x_10840603, r_10840604) {
  var result_10840605 = 0;

  var F={procname:"hashes.rotl32",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 144;
    result_10840605 = ((x_10840603 << r_10840604) | ((x_10840603 >>> 0) >>> subInt(32, r_10840604)));
  framePtr = F.prev;

  return result_10840605;

}
function murmur_hash_10840629(x_10840632) {
  var result_10840633 = 0;

  var F={procname:"hashes.murmurHash",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 155;
    var size_10840643 = (x_10840632 != null ? x_10840632.length : 0);
    F.line = 156;
    var step_size_10840645 = 4;
    F.line = 157;
    var n_10840646 = divInt(size_10840643, step_size_10840645);
    F.line = 159;
    var h1_10840647 = 0;
    F.line = 160;
    var i_10840649 = 0;
    L1: do {
      F.line = 163;
        L2: while (true) {
        if (!(i_10840649 < mulInt(n_10840646, step_size_10840645))) break L2;
          F.line = 164;
          var k1_10840650 = 0;
          F.line = 166;
          var j_10840651 = step_size_10840645;
          L3: do {
            F.line = 167;
              L4: while (true) {
              if (!(0 < j_10840651)) break L4;
                F.line = 168;
                j_10840651 = subInt(j_10840651, 1);
                F.line = 169;
                k1_10840650 = ((k1_10840650 << 8) | x_10840632[chckIndx(addInt(i_10840649, j_10840651), 0, (x_10840632 != null ? x_10840632.length : 0)+0-1)-0]);
              }
          } while(false);
          F.line = 172;
          i_10840649 = addInt(i_10840649, step_size_10840645);
          F.line = 174;
          k1_10840650 = imul_10840517(k1_10840650, 3432918353);
          F.line = 175;
          k1_10840650 = rotl32_10840601(k1_10840650, 15);
          F.line = 176;
          k1_10840650 = imul_10840517(k1_10840650, 461845907);
          F.line = 178;
          h1_10840647 = (h1_10840647 ^ k1_10840650);
          F.line = 179;
          h1_10840647 = rotl32_10840601(h1_10840647, 13);
          F.line = 180;
          h1_10840647 = ((((h1_10840647 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while(false);
    F.line = 183;
    var k1_10845207 = 0;
    F.line = 184;
    var rem_10845208 = modInt(size_10840643, step_size_10840645);
    L5: do {
      F.line = 185;
        L6: while (true) {
        if (!(0 < rem_10845208)) break L6;
          F.line = 186;
          rem_10845208 = subInt(rem_10845208, 1);
          F.line = 187;
          k1_10845207 = ((k1_10845207 << 8) | x_10840632[chckIndx(addInt(i_10840649, rem_10845208), 0, (x_10840632 != null ? x_10840632.length : 0)+0-1)-0]);
        }
    } while(false);
    F.line = 188;
    k1_10845207 = imul_10840517(k1_10845207, 3432918353);
    F.line = 189;
    k1_10845207 = rotl32_10840601(k1_10845207, 15);
    F.line = 190;
    k1_10845207 = imul_10840517(k1_10845207, 461845907);
    F.line = 191;
    h1_10840647 = (h1_10840647 ^ k1_10845207);
    F.line = 194;
    h1_10840647 = (h1_10840647 ^ size_10840643);
    F.line = 195;
    h1_10840647 = (h1_10840647 ^ ((h1_10840647 >>> 0) >>> 16));
    F.line = 196;
    h1_10840647 = imul_10840517(h1_10840647, 2246822507);
    F.line = 197;
    h1_10840647 = (h1_10840647 ^ ((h1_10840647 >>> 0) >>> 13));
    F.line = 198;
    h1_10840647 = imul_10840517(h1_10840647, 3266489909);
    F.line = 199;
    h1_10840647 = (h1_10840647 ^ ((h1_10840647 >>> 0) >>> 16));
    F.line = 200;
    result_10840633 = (h1_10840647|0);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_10840633;

}
function hash_10880214(x_10880216) {
  var result_10880217 = 0;

  var F={procname:"hashes.hash",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 229;
    result_10880217 = murmur_hash_10840629((x_10880216.slice(0, (x_10880216 != null ? (x_10880216.length-1) : -1)+1)));
  framePtr = F.prev;

  return result_10880217;

}
function is_filled_10902018(hcode_10902020) {
  var result_10902021 = false;

  var F={procname:"tables.isFilled",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    F.line = 27;
    result_10902021 = !((hcode_10902020 == 0));
  framePtr = F.prev;

  return result_10902021;

}
function next_try_10905014(h_10905016, max_hash_10905017) {
  var result_10905018 = 0;

  var F={procname:"tables.nextTry",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    F.line = 30;
    result_10905018 = (addInt(h_10905016, 1) & max_hash_10905017);
  framePtr = F.prev;

  return result_10905018;

}
function raw_get_12050602(t_12050606, key_12050607, hc_12050608, hc_12050608_Idx) {
            var Tmp3;

  var result_12050609 = 0;

  var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 63;
    hc_12050608[hc_12050608_Idx] = hash_10880214(key_12050607);
    if ((hc_12050608[hc_12050608_Idx] == 0)) {
    F.line = 65;
    hc_12050608[hc_12050608_Idx] = 314159265;
    }
    
    if (((t_12050606.data != null ? t_12050606.data.length : 0) == 0)) {
    F.line = 47;
    result_12050609 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_12060138 = (hc_12050608[hc_12050608_Idx] & (t_12050606.data != null ? (t_12050606.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_10902018(t_12050606.data[chckIndx(h_12060138, 0, (t_12050606.data != null ? t_12050606.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_12050606.data[chckIndx(h_12060138, 0, (t_12050606.data != null ? t_12050606.data.length : 0)+0-1)-0].Field0 == hc_12050608[hc_12050608_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_12050606.data[chckIndx(h_12060138, 0, (t_12050606.data != null ? t_12050606.data.length : 0)+0-1)-0].Field1, key_12050607);            }          if (Tmp3) {
          F.line = 55;
          result_12050609 = h_12060138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_12060138 = next_try_10905014(h_12060138, (t_12050606.data != null ? (t_12050606.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_12050609 = subInt(-1, h_12060138);
  } while (false);
  framePtr = F.prev;

  return result_12050609;

}
function must_rehash_12085601(t_12085604) {
  var result_12085605 = false;

  var F={procname:"mustRehash.mustRehash",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    if (!((t_12085604.counter < (t_12085604.data != null ? t_12085604.data.length : 0)))) {
    F.line = 33;
    failed_assert_impl_1267680(makeNimstrLit("/usr/lib/nim/pure/collections/hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 34;
    result_12085605 = ((mulInt((t_12085604.data != null ? t_12085604.data.length : 0), 2) < mulInt(t_12085604.counter, 3)) || (subInt((t_12085604.data != null ? t_12085604.data.length : 0), t_12085604.counter) < 4));
  framePtr = F.prev;

  return result_12085605;

}
function raw_insert_12111108(t_12111114, data_12111117, data_12111117_Idx, key_12111118, val_12111119, hc_12111120, h_12111121) {
  var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tableimpl.nim",line:0};
  framePtr = F;
    F.line = 22;
    data_12111117[data_12111117_Idx][chckIndx(h_12111121, 0, (data_12111117[data_12111117_Idx] != null ? data_12111117[data_12111117_Idx].length : 0)+0-1)-0].Field1 = nimCopy(null, key_12111118, NTI1163014);
    F.line = 23;
    data_12111117[data_12111117_Idx][chckIndx(h_12111121, 0, (data_12111117[data_12111117_Idx] != null ? data_12111117[data_12111117_Idx].length : 0)+0-1)-0].Field2 = nimCopy(null, val_12111119, NTI1163014);
    F.line = 24;
    data_12111117[data_12111117_Idx][chckIndx(h_12111121, 0, (data_12111117[data_12111117_Idx] != null ? data_12111117[data_12111117_Idx].length : 0)+0-1)-0].Field0 = hc_12111120;
  framePtr = F.prev;

  
}
function enlarge_12110161(t_12110167) {
  var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 267;
    var n_12110175 = null;
    F.line = 268;
    n_12110175 = new Array(chckRange(mulInt((t_12110167.data != null ? t_12110167.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_12110167.data != null ? t_12110167.data.length : 0), 2), 0, 2147483647);++i) {n_12110175[i]={Field0: 0, Field1: null, Field2: null};}    F.line = 269;
    var Tmp1 = t_12110167.data; t_12110167.data = n_12110175; n_12110175 = Tmp1;    L2: do {
      F.line = 270;
      var i_12110334 = 0;
      F.line = 39;
      var colontmp__12133534 = 0;
      F.line = 270;
      colontmp__12133534 = (n_12110175 != null ? (n_12110175.length-1) : -1);
      F.line = 56;
      var res_12133539 = 0;
      L3: do {
        F.line = 57;
          L4: while (true) {
          if (!(res_12133539 <= colontmp__12133534)) break L4;
            F.line = 270;
            i_12110334 = res_12133539;
            F.line = 271;
            var eh_12110483 = n_12110175[chckIndx(i_12110334, 0, (n_12110175 != null ? n_12110175.length : 0)+0-1)-0].Field0;
            if (is_filled_10902018(eh_12110483)) {
            F.line = 273;
            var j_12110490 = (eh_12110483 & (t_12110167.data != null ? (t_12110167.data.length-1) : -1));
            L5: do {
              F.line = 274;
                L6: while (true) {
                if (!is_filled_10902018(t_12110167.data[chckIndx(j_12110490, 0, (t_12110167.data != null ? t_12110167.data.length : 0)+0-1)-0].Field0)) break L6;
                  F.line = 275;
                  j_12110490 = next_try_10905014(j_12110490, (t_12110167.data != null ? (t_12110167.data.length-1) : -1));
                }
            } while(false);
            F.line = 277;
            raw_insert_12111108(t_12110167, t_12110167, "data", n_12110175[chckIndx(i_12110334, 0, (n_12110175 != null ? n_12110175.length : 0)+0-1)-0].Field1, n_12110175[chckIndx(i_12110334, 0, (n_12110175 != null ? n_12110175.length : 0)+0-1)-0].Field2, eh_12110483, j_12110490);
            }
            
            F.line = 59;
            res_12133539 = addInt(res_12133539, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function raw_get_known_hc_12111593(t_12111597, key_12111598, hc_12111599) {
  var result_12111600 = 0;

  var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((t_12111597.data != null ? t_12111597.data.length : 0) == 0)) {
    F.line = 47;
    result_12111600 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_12115138 = (hc_12111599 & (t_12111597.data != null ? (t_12111597.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_10902018(t_12111597.data[chckIndx(h_12115138, 0, (t_12111597.data != null ? t_12111597.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_12111597.data[chckIndx(h_12115138, 0, (t_12111597.data != null ? t_12111597.data.length : 0)+0-1)-0].Field0 == hc_12111599) && eqStrings(t_12111597.data[chckIndx(h_12115138, 0, (t_12111597.data != null ? t_12111597.data.length : 0)+0-1)-0].Field1, key_12111598))) {
          F.line = 55;
          result_12111600 = h_12115138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_12115138 = next_try_10905014(h_12115138, (t_12111597.data != null ? (t_12111597.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_12111600 = subInt(-1, h_12115138);
  } while (false);
  framePtr = F.prev;

  return result_12111600;

}
function HEX5BHEX5DHEX3D_12025749(t_12025755, key_12025756, val_12025757) {
  var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (((t_12025755.data != null ? t_12025755.data.length : 0) == 0)) {
    if (!(is_power_of_two_2245029(64))) {
    F.line = 166;
    failed_assert_impl_1267680(makeNimstrLit("/usr/lib/nim/pure/collections/tableimpl.nim(166, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    F.line = 167;
    t_12025755.counter = 0;
    F.line = 168;
    t_12025755.data = new Array(64); for (var i=0;i<64;++i) {t_12025755.data[i]={Field0: 0, Field1: null, Field2: null};}    }
    
    F.line = 57;
    var hc_12050601 = [0];
    F.line = 58;
    var index_12060620 = raw_get_12050602(t_12025755, key_12025756, hc_12050601, 0);
    if ((0 <= index_12060620)) {
    F.line = 59;
    t_12025755.data[chckIndx(index_12060620, 0, (t_12025755.data != null ? t_12025755.data.length : 0)+0-1)-0].Field2 = nimCopy(null, val_12025757, NTI1163014);
    }
    else {
      if (((t_12025755.data != null ? t_12025755.data.length : 0) == 0)) {
      if (!(is_power_of_two_2245029(64))) {
      F.line = 166;
      failed_assert_impl_1267680(makeNimstrLit("/usr/lib/nim/pure/collections/tableimpl.nim(166, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      F.line = 167;
      t_12025755.counter = 0;
      F.line = 168;
      t_12025755.data = new Array(64); for (var i=0;i<64;++i) {t_12025755.data[i]={Field0: 0, Field1: null, Field2: null};}      }
      
      if (must_rehash_12085601(t_12025755)) {
      F.line = 49;
      enlarge_12110161(t_12025755);
      F.line = 50;
      index_12060620 = raw_get_known_hc_12111593(t_12025755, key_12025756, hc_12050601[0]);
      }
      
      F.line = 51;
      index_12060620 = subInt(-1, index_12060620);
      F.line = 52;
      raw_insert_12111108(t_12025755, t_12025755, "data", key_12025756, val_12025757, hc_12050601[0], index_12060620);
      F.line = 60;
      t_12025755.counter = addInt(t_12025755.counter, 1);
    }
    
  framePtr = F.prev;

  
}
function HEX5BHEX5DHEX3D_12116002(t_12116007, key_12116008, val_12116009) {
  var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 866;
    HEX5BHEX5DHEX3D_12025749(t_12116007, key_12116008, val_12116009);
  framePtr = F.prev;

  
}
var color_names_12115892 = [new_table_12115747(64)];
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("aliceblue"), makeNimstrLit("F0F8FF"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("antiquewhite"), makeNimstrLit("FAEBD7"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("aqua"), makeNimstrLit("00FFFF"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("aquamarine"), makeNimstrLit("7FFFD4"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("azure"), makeNimstrLit("F0FFFF"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("beige"), makeNimstrLit("F5F5DC"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("bisque"), makeNimstrLit("FFE4C4"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("black"), makeNimstrLit("000000"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("blanchedalmond"), makeNimstrLit("FFEBCD"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("blue"), makeNimstrLit("0000FF"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("blueviolet"), makeNimstrLit("8A2BE2"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("brown"), makeNimstrLit("A52A2A"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("burlywood"), makeNimstrLit("DEB887"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("cadetblue"), makeNimstrLit("5F9EA0"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("chartreuse"), makeNimstrLit("7FFF00"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("chocolate"), makeNimstrLit("D2691E"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("coral"), makeNimstrLit("FF7F50"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("cornflowerblue"), makeNimstrLit("6495ED"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("cornsilk"), makeNimstrLit("FFF8DC"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("crimson"), makeNimstrLit("DC143C"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("cyan"), makeNimstrLit("00FFFF"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkblue"), makeNimstrLit("00008B"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkcyan"), makeNimstrLit("008B8B"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkgoldenrod"), makeNimstrLit("B8860B"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkgray"), makeNimstrLit("A9A9A9"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkgrey"), makeNimstrLit("A9A9A9"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkgreen"), makeNimstrLit("006400"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkkhaki"), makeNimstrLit("BDB76B"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkmagenta"), makeNimstrLit("8B008B"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkolivegreen"), makeNimstrLit("556B2F"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkorange"), makeNimstrLit("FF8C00"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkorchid"), makeNimstrLit("9932CC"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkred"), makeNimstrLit("8B0000"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darksalmon"), makeNimstrLit("E9967A"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkseagreen"), makeNimstrLit("8FBC8F"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkslateblue"), makeNimstrLit("483D8B"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkslategray"), makeNimstrLit("2F4F4F"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkslategrey"), makeNimstrLit("2F4F4F"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkturquoise"), makeNimstrLit("00CED1"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("darkviolet"), makeNimstrLit("9400D3"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("deeppink"), makeNimstrLit("FF1493"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("deepskyblue"), makeNimstrLit("00BFFF"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("dimgray"), makeNimstrLit("696969"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("dimgrey"), makeNimstrLit("696969"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("dodgerblue"), makeNimstrLit("1E90FF"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("firebrick"), makeNimstrLit("B22222"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("floralwhite"), makeNimstrLit("FFFAF0"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("forestgreen"), makeNimstrLit("228B22"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("fuchsia"), makeNimstrLit("FF00FF"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("gainsboro"), makeNimstrLit("DCDCDC"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("ghostwhite"), makeNimstrLit("F8F8FF"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("gold"), makeNimstrLit("FFD700"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("goldenrod"), makeNimstrLit("DAA520"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("gray"), makeNimstrLit("808080"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("grey"), makeNimstrLit("808080"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("green"), makeNimstrLit("008000"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("greenyellow"), makeNimstrLit("ADFF2F"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("honeydew"), makeNimstrLit("F0FFF0"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("hotpink"), makeNimstrLit("FF69B4"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("indianred"), makeNimstrLit("CD5C5C"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("indigo"), makeNimstrLit("4B0082"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("ivory"), makeNimstrLit("FFFFF0"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("khaki"), makeNimstrLit("F0E68C"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lavender"), makeNimstrLit("E6E6FA"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lavenderblush"), makeNimstrLit("FFF0F5"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lawngreen"), makeNimstrLit("7CFC00"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lemonchiffon"), makeNimstrLit("FFFACD"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lightblue"), makeNimstrLit("ADD8E6"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lightcoral"), makeNimstrLit("F08080"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lightcyan"), makeNimstrLit("E0FFFF"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lightgoldenrodyellow"), makeNimstrLit("FAFAD2"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lightgray"), makeNimstrLit("D3D3D3"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lightgrey"), makeNimstrLit("D3D3D3"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lightgreen"), makeNimstrLit("90EE90"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lightpink"), makeNimstrLit("FFB6C1"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lightsalmon"), makeNimstrLit("FFA07A"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lightseagreen"), makeNimstrLit("20B2AA"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lightskyblue"), makeNimstrLit("87CEFA"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lightslategray"), makeNimstrLit("778899"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lightslategrey"), makeNimstrLit("778899"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lightsteelblue"), makeNimstrLit("B0C4DE"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lightyellow"), makeNimstrLit("FFFFE0"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("lime"), makeNimstrLit("00FF00"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("limegreen"), makeNimstrLit("32CD32"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("linen"), makeNimstrLit("FAF0E6"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("magenta"), makeNimstrLit("FF00FF"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("maroon"), makeNimstrLit("800000"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("mediumaquamarine"), makeNimstrLit("66CDAA"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("mediumblue"), makeNimstrLit("0000CD"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("mediumorchid"), makeNimstrLit("BA55D3"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("mediumpurple"), makeNimstrLit("9370DB"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("mediumseagreen"), makeNimstrLit("3CB371"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("mediumslateblue"), makeNimstrLit("7B68EE"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("mediumspringgreen"), makeNimstrLit("00FA9A"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("mediumturquoise"), makeNimstrLit("48D1CC"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("mediumvioletred"), makeNimstrLit("C71585"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("midnightblue"), makeNimstrLit("191970"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("mintcream"), makeNimstrLit("F5FFFA"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("mistyrose"), makeNimstrLit("FFE4E1"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("moccasin"), makeNimstrLit("FFE4B5"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("navajowhite"), makeNimstrLit("FFDEAD"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("navy"), makeNimstrLit("000080"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("oldlace"), makeNimstrLit("FDF5E6"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("olive"), makeNimstrLit("808000"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("olivedrab"), makeNimstrLit("6B8E23"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("orange"), makeNimstrLit("FFA500"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("orangered"), makeNimstrLit("FF4500"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("orchid"), makeNimstrLit("DA70D6"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("palegoldenrod"), makeNimstrLit("EEE8AA"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("palegreen"), makeNimstrLit("98FB98"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("paleturquoise"), makeNimstrLit("AFEEEE"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("palevioletred"), makeNimstrLit("DB7093"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("papayawhip"), makeNimstrLit("FFEFD5"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("peachpuff"), makeNimstrLit("FFDAB9"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("peru"), makeNimstrLit("CD853F"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("pink"), makeNimstrLit("FFC0CB"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("plum"), makeNimstrLit("DDA0DD"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("powderblue"), makeNimstrLit("B0E0E6"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("purple"), makeNimstrLit("800080"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("rebeccapurple"), makeNimstrLit("663399"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("red"), makeNimstrLit("FF0000"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("rosybrown"), makeNimstrLit("BC8F8F"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("royalblue"), makeNimstrLit("4169E1"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("saddlebrown"), makeNimstrLit("8B4513"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("salmon"), makeNimstrLit("FA8072"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("sandybrown"), makeNimstrLit("F4A460"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("seagreen"), makeNimstrLit("2E8B57"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("seashell"), makeNimstrLit("FFF5EE"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("sienna"), makeNimstrLit("A0522D"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("silver"), makeNimstrLit("C0C0C0"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("skyblue"), makeNimstrLit("87CEEB"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("slateblue"), makeNimstrLit("6A5ACD"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("slategray"), makeNimstrLit("708090"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("slategrey"), makeNimstrLit("708090"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("snow"), makeNimstrLit("FFFAFA"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("springgreen"), makeNimstrLit("00FF7F"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("steelblue"), makeNimstrLit("4682B4"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("tan"), makeNimstrLit("D2B48C"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("teal"), makeNimstrLit("008080"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("thistle"), makeNimstrLit("D8BFD8"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("tomato"), makeNimstrLit("FF6347"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("turquoise"), makeNimstrLit("40E0D0"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("violet"), makeNimstrLit("EE82EE"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("wheat"), makeNimstrLit("F5DEB3"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("white"), makeNimstrLit("FFFFFF"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("whitesmoke"), makeNimstrLit("F5F5F5"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("yellow"), makeNimstrLit("FFFF00"));
HEX5BHEX5DHEX3D_12116002(color_names_12115892[0], makeNimstrLit("yellowgreen"), makeNimstrLit("9ACD32"));
var magma_raw_12663090 = [{Field0: 1.4615909600000001e-03, Field1: 4.6612776600000002e-04, Field2: 1.3865519999999999e-02}, {Field0: 2.2576400700000001e-03, Field1: 1.2949543099999999e-03, Field2: 1.8331146100000001e-02}, {Field0: 3.2794322200000001e-03, Field1: 2.3045299099999999e-03, Field2: 2.3708329100000002e-02}, {Field0: 4.5123022200000001e-03, Field1: 3.4903766599999999e-03, Field2: 2.9964705899999999e-02}, {Field0: 5.9497698699999997e-03, Field1: 4.8428500000000001e-03, Field2: 3.7129669499999997e-02}, {Field0: 7.5879855000000000e-03, Field1: 6.3561362200000001e-03, Field2: 4.4973077399999999e-02}, {Field0: 9.4260439000000001e-03, Field1: 8.0218500600000003e-03, Field2: 5.2844356100000003e-02}, {Field0: 1.1465433700000000e-02, Field1: 9.8283148599999995e-03, Field2: 6.0749638000000002e-02}, {Field0: 1.3707570600000000e-02, Field1: 1.1770591299999999e-02, Field2: 6.8666584300000000e-02}, {Field0: 1.6155756600000001e-02, Field1: 1.3840496600000000e-02, Field2: 7.6602666000000000e-02}, {Field0: 1.8815367000000000e-02, Field1: 1.6026275300000000e-02, Field2: 8.4584489700000001e-02}, {Field0: 2.1691934000000000e-02, Field1: 1.8320125400000001e-02, Field2: 9.2610104999999998e-02}, {Field0: 2.4791781400000001e-02, Field1: 2.0714787500000002e-02, Field2: 1.0067555500000000e-01}, {Field0: 2.8122815400000001e-02, Field1: 2.3200928400000001e-02, Field2: 1.0878695400000001e-01}, {Field0: 3.1695530399999998e-02, Field1: 2.5765116099999999e-02, Field2: 1.1696472199999999e-01}, {Field0: 3.5520446800000001e-02, Field1: 2.8397457000000001e-02, Field2: 1.2520939600000000e-01}, {Field0: 3.9608487200000000e-02, Field1: 3.1089565199999999e-02, Field2: 1.3351508500000001e-01}, {Field0: 4.3829535000000003e-02, Field1: 3.3829988499999998e-02, Field2: 1.4188624899999999e-01}, {Field0: 4.8061639099999998e-02, Field1: 3.6606610099999999e-02, Field2: 1.5032698899999999e-01}, {Field0: 5.2320438800000001e-02, Field1: 3.9406601999999999e-02, Field2: 1.5884102500000000e-01}, {Field0: 5.6614897800000001e-02, Field1: 4.2159892499999997e-02, Field2: 1.6744559200000000e-01}, {Field0: 6.0949392999999998e-02, Field1: 4.4794492399999997e-02, Field2: 1.7612883400000001e-01}, {Field0: 6.5330180099999996e-02, Field1: 4.7317779599999998e-02, Field2: 1.8489150600000001e-01}, {Field0: 6.9763729600000005e-02, Field1: 4.9726466599999998e-02, Field2: 1.9373508800000000e-01}, {Field0: 7.4256515199999998e-02, Field1: 5.2016776600000002e-02, Field2: 2.0266037400000000e-01}, {Field0: 7.8815003400000000e-02, Field1: 5.4184480100000001e-02, Field2: 2.1166735500000000e-01}, {Field0: 8.3445631300000003e-02, Field1: 5.6224936500000003e-02, Field2: 2.2075509900000001e-01}, {Field0: 8.8154773000000006e-02, Field1: 5.8133146500000003e-02, Field2: 2.2992161100000000e-01}, {Field0: 9.2948691400000005e-02, Field1: 5.9903816700000001e-02, Field2: 2.3916366900000000e-01}, {Field0: 9.7833477000000002e-02, Field1: 6.1531441399999998e-02, Field2: 2.4847666199999999e-01}, {Field0: 1.0281497200000000e-01, Field1: 6.3010405300000003e-02, Field2: 2.5785439999999998e-01}, {Field0: 1.0789867900000000e-01, Field1: 6.4335110200000004e-02, Field2: 2.6728893300000001e-01}, {Field0: 1.1309445100000000e-01, Field1: 6.5492035800000001e-02, Field2: 2.7678397799999999e-01}, {Field0: 1.1840503500000001e-01, Field1: 6.6479159299999993e-02, Field2: 2.8632065600000001e-01}, {Field0: 1.2383265100000000e-01, Field1: 6.7294644900000006e-02, Field2: 2.9587943100000003e-01}, {Field0: 1.2938019200000000e-01, Field1: 6.7934926399999998e-02, Field2: 3.0544293099999997e-01}, {Field0: 1.3505332200000000e-01, Field1: 6.8391279799999996e-02, Field2: 3.1499989000000000e-01}, {Field0: 1.4085795200000001e-01, Field1: 6.8654070999999997e-02, Field2: 3.2453764000000002e-01}, {Field0: 1.4678523399999999e-01, Field1: 6.8738232299999993e-02, Field2: 3.3401110899999997e-01}, {Field0: 1.5283921700000000e-01, Field1: 6.8636859900000000e-02, Field2: 3.4340445000000003e-01}, {Field0: 1.5901751100000000e-01, Field1: 6.8354022500000000e-02, Field2: 3.5268802799999999e-01}, {Field0: 1.6530813100000000e-01, Field1: 6.7910868900000004e-02, Field2: 3.6181642600000002e-01}, {Field0: 1.7171303299999999e-01, Field1: 6.7305325999999999e-02, Field2: 3.7077082700000003e-01}, {Field0: 1.7821173000000001e-01, Field1: 6.6575807299999998e-02, Field2: 3.7949716100000003e-01}, {Field0: 1.8480087700000000e-01, Field1: 6.5732438099999999e-02, Field2: 3.8797250700000002e-01}, {Field0: 1.9145974499999999e-01, Field1: 6.4818331199999996e-02, Field2: 3.9615196899999999e-01}, {Field0: 1.9817687700000000e-01, Field1: 6.3862416599999999e-02, Field2: 4.0400895300000000e-01}, {Field0: 2.0493488200000001e-01, Field1: 6.2906619200000000e-02, Field2: 4.1151427299999999e-01}, {Field0: 2.1171806100000001e-01, Field1: 6.1991787600000001e-02, Field2: 4.1864674099999999e-01}, {Field0: 2.1851159000000001e-01, Field1: 6.1158491799999999e-02, Field2: 4.2539181599999998e-01}, {Field0: 2.2530203200000001e-01, Field1: 6.0445184300000003e-02, Field2: 4.3174176700000000e-01}, {Field0: 2.3207651500000001e-01, Field1: 5.9888685499999997e-02, Field2: 4.3769466499999998e-01}, {Field0: 2.3882599099999999e-01, Field1: 5.9517038400000000e-02, Field2: 4.4325599900000001e-01}, {Field0: 2.4554317500000000e-01, Field1: 5.9352438399999999e-02, Field2: 4.4843593799999998e-01}, {Field0: 2.5222025199999998e-01, Field1: 5.9414711900000000e-02, Field2: 4.5324772899999999e-01}, {Field0: 2.5885730400000001e-01, Field1: 5.9705599800000002e-02, Field2: 4.5770992399999999e-01}, {Field0: 2.6544674400000001e-01, Field1: 6.0236875400000001e-02, Field2: 4.6184029700000001e-01}, {Field0: 2.7199408899999999e-01, Field1: 6.0993555200000001e-02, Field2: 4.6566037500000002e-01}, {Field0: 2.7849330000000000e-01, Field1: 6.1977813600000001e-02, Field2: 4.6919032799999999e-01}, {Field0: 2.8495109699999999e-01, Field1: 6.3167626099999999e-02, Field2: 4.7245087899999999e-01}, {Field0: 2.9136581700000003e-01, Field1: 6.4553448599999994e-02, Field2: 4.7546219299999998e-01}, {Field0: 2.9774041299999998e-01, Field1: 6.6117043200000003e-02, Field2: 4.7824348200000000e-01}, {Field0: 3.0408094099999999e-01, Field1: 6.7835345199999994e-02, Field2: 4.8081157200000002e-01}, {Field0: 3.1038202700000000e-01, Field1: 6.9702476700000002e-02, Field2: 4.8318633999999999e-01}, {Field0: 3.1665423500000001e-01, Field1: 7.1689527200000006e-02, Field2: 4.8538042900000000e-01}, {Field0: 3.2289912599999998e-01, Field1: 7.3781950400000004e-02, Field2: 4.8740839899999999e-01}, {Field0: 3.2911403800000000e-01, Field1: 7.5971508100000001e-02, Field2: 4.8928679600000002e-01}, {Field0: 3.3530750300000001e-01, Field1: 7.8236104500000000e-02, Field2: 4.9102414400000000e-01}, {Field0: 3.4148172500000001e-01, Field1: 8.0563507899999998e-02, Field2: 4.9263132100000001e-01}, {Field0: 3.4763574200000003e-01, Field1: 8.2946351200000004e-02, Field2: 4.9412092299999999e-01}, {Field0: 3.5377316100000000e-01, Field1: 8.5372632899999995e-02, Field2: 4.9550109599999997e-01}, {Field0: 3.5989794100000000e-01, Field1: 8.7831177199999999e-02, Field2: 4.9677833100000002e-01}, {Field0: 3.6601192799999999e-01, Field1: 9.0314303100000007e-02, Field2: 4.9795996300000001e-01}, {Field0: 3.7211620499999998e-01, Field1: 9.2815991700000003e-02, Field2: 4.9905332600000002e-01}, {Field0: 3.7821054700000001e-01, Field1: 9.5332294700000000e-02, Field2: 5.0006656800000004e-01}, {Field0: 3.8429944500000002e-01, Field1: 9.7854910599999997e-02, Field2: 5.0100196399999997e-01}, {Field0: 3.9038436100000001e-01, Field1: 1.0037946600000000e-01, Field2: 5.0186423599999996e-01}, {Field0: 3.9646667000000002e-01, Field1: 1.0290219400000000e-01, Field2: 5.0265758999999999e-01}, {Field0: 4.0254766300000000e-01, Field1: 1.0541986500000000e-01, Field2: 5.0338576099999999e-01}, {Field0: 4.0862850499999998e-01, Field1: 1.0792977099999999e-01, Field2: 5.0405211800000005e-01}, {Field0: 4.1470866400000000e-01, Field1: 1.1043117700000001e-01, Field2: 5.0466184300000005e-01}, {Field0: 4.2079115700000003e-01, Field1: 1.1292020999999999e-01, Field2: 5.0521493500000003e-01}, {Field0: 4.2687696500000000e-01, Field1: 1.1539525800000000e-01, Field2: 5.0571360200000004e-01}, {Field0: 4.3296700100000002e-01, Field1: 1.1785498699999999e-01, Field2: 5.0615975400000002e-01}, {Field0: 4.3906211400000000e-01, Field1: 1.2029831400000000e-01, Field2: 5.0655502600000002e-01}, {Field0: 4.4516309599999998e-01, Field1: 1.2272437100000000e-01, Field2: 5.0690080599999998e-01}, {Field0: 4.5127067799999998e-01, Field1: 1.2513248399999999e-01, Field2: 5.0719825799999996e-01}, {Field0: 4.5738553500000001e-01, Field1: 1.2752214500000000e-01, Field2: 5.0744833600000006e-01}, {Field0: 4.6350829100000002e-01, Field1: 1.2989299800000001e-01, Field2: 5.0765181199999998e-01}, {Field0: 4.6963951399999998e-01, Field1: 1.3224481900000001e-01, Field2: 5.0780928199999997e-01}, {Field0: 4.7577972299999999e-01, Field1: 1.3457749999999999e-01, Field2: 5.0792119300000005e-01}, {Field0: 4.8192899700000003e-01, Field1: 1.3689139000000000e-01, Field2: 5.0798850900000003e-01}, {Field0: 4.8808816900000002e-01, Field1: 1.3918621700000000e-01, Field2: 5.0801073699999999e-01}, {Field0: 4.9425767300000001e-01, Field1: 1.4146210600000000e-01, Field2: 5.0798783599999997e-01}, {Field0: 5.0043783399999997e-01, Field1: 1.4371932300000001e-01, Field2: 5.0791977200000005e-01}, {Field0: 5.0662892900000001e-01, Field1: 1.4595820200000001e-01, Field2: 5.0780641999999998e-01}, {Field0: 5.1283119499999996e-01, Field1: 1.4817914400000001e-01, Field2: 5.0764757000000005e-01}, {Field0: 5.1904482500000004e-01, Field1: 1.5038261100000000e-01, Field2: 5.0744293799999995e-01}, {Field0: 5.2526996800000003e-01, Field1: 1.5256912100000000e-01, Field2: 5.0719217200000000e-01}, {Field0: 5.3150673500000001e-01, Field1: 1.5473924700000000e-01, Field2: 5.0689485999999995e-01}, {Field0: 5.3775519400000005e-01, Field1: 1.5689361299999999e-01, Field2: 5.0655053800000005e-01}, {Field0: 5.4401537099999997e-01, Field1: 1.5903289500000001e-01, Field2: 5.0615869599999996e-01}, {Field0: 5.5028725199999995e-01, Field1: 1.6115781600000001e-01, Field2: 5.0571878199999998e-01}, {Field0: 5.5657078299999996e-01, Field1: 1.6326914900000000e-01, Field2: 5.0523021000000001e-01}, {Field0: 5.6286586699999996e-01, Field1: 1.6536771400000000e-01, Field2: 5.0469236500000003e-01}, {Field0: 5.6917236800000004e-01, Field1: 1.6745437899999999e-01, Field2: 5.0410460599999996e-01}, {Field0: 5.7549010700000003e-01, Field1: 1.6953006200000001e-01, Field2: 5.0346627300000002e-01}, {Field0: 5.8181886400000005e-01, Field1: 1.7159572800000000e-01, Field2: 5.0277669000000003e-01}, {Field0: 5.8815837500000001e-01, Field1: 1.7365239199999999e-01, Field2: 5.0203516699999995e-01}, {Field0: 5.9450833700000005e-01, Field1: 1.7570112199999999e-01, Field2: 5.0124101099999996e-01}, {Field0: 6.0086839900000000e-01, Field1: 1.7774303599999999e-01, Field2: 5.0039352199999998e-01}, {Field0: 6.0723816900000005e-01, Field1: 1.7977930900000000e-01, Field2: 4.9949199900000002e-01}, {Field0: 6.1361720900000005e-01, Field1: 1.8181116999999999e-01, Field2: 4.9853574600000000e-01}, {Field0: 6.2000503200000001e-01, Field1: 1.8383990700000000e-01, Field2: 4.9752407500000001e-01}, {Field0: 6.2640110800000004e-01, Field1: 1.8586686899999999e-01, Field2: 4.9645630400000001e-01}, {Field0: 6.3280485399999997e-01, Field1: 1.8789346800000001e-01, Field2: 4.9533176899999998e-01}, {Field0: 6.3921563800000003e-01, Field1: 1.8992118199999999e-01, Field2: 4.9414982099999999e-01}, {Field0: 6.4563277799999996e-01, Field1: 1.9195155600000000e-01, Field2: 4.9290983199999999e-01}, {Field0: 6.5205553500000002e-01, Field1: 1.9398620999999999e-01, Field2: 4.9161119599999997e-01}, {Field0: 6.5848311599999998e-01, Field1: 1.9602683500000001e-01, Field2: 4.9025333799999998e-01}, {Field0: 6.6491466799999999e-01, Field1: 1.9807520200000001e-01, Field2: 4.8883571199999998e-01}, {Field0: 6.7134927899999997e-01, Field1: 2.0013316600000000e-01, Field2: 4.8735780699999998e-01}, {Field0: 6.7778597500000004e-01, Field1: 2.0220266300000000e-01, Field2: 4.8581915399999998e-01}, {Field0: 6.8422371199999998e-01, Field1: 2.0428572100000000e-01, Field2: 4.8421932499999998e-01}, {Field0: 6.9066137999999999e-01, Field1: 2.0638446099999999e-01, Field2: 4.8255794099999999e-01}, {Field0: 6.9709779599999999e-01, Field1: 2.0850109999999999e-01, Field2: 4.8083467800000002e-01}, {Field0: 7.0353169999999998e-01, Field1: 2.1063795599999999e-01, Field2: 4.7904927000000003e-01}, {Field0: 7.0996188800000004e-01, Field1: 2.1279733700000000e-01, Field2: 4.7720112100000001e-01}, {Field0: 7.1638703800000003e-01, Field1: 2.1498169300000000e-01, Field2: 4.7528978000000000e-01}, {Field0: 7.2280545100000004e-01, Field1: 2.1719383100000000e-01, Field2: 4.7331570800000000e-01}, {Field0: 7.2921552099999998e-01, Field1: 2.1943651600000000e-01, Field2: 4.7127892399999999e-01}, {Field0: 7.3561554500000004e-01, Field1: 2.2171263399999999e-01, Field2: 4.6917954099999998e-01}, {Field0: 7.4200371300000001e-01, Field1: 2.2402519600000001e-01, Field2: 4.6701777400000000e-01}, {Field0: 7.4837810699999996e-01, Field1: 2.2637734500000001e-01, Field2: 4.6479395400000001e-01}, {Field0: 7.5473669200000004e-01, Field1: 2.2877235200000001e-01, Field2: 4.6250853400000003e-01}, {Field0: 7.6107731199999995e-01, Field1: 2.3121362500000001e-01, Field2: 4.6016210600000002e-01}, {Field0: 7.6739768100000005e-01, Field1: 2.3370470800000001e-01, Field2: 4.5775541100000000e-01}, {Field0: 7.7369538000000004e-01, Field1: 2.3624928300000000e-01, Field2: 4.5528935399999998e-01}, {Field0: 7.7996784699999999e-01, Field1: 2.3885117000000000e-01, Field2: 4.5276502200000002e-01}, {Field0: 7.8621237200000005e-01, Field1: 2.4151432500000000e-01, Field2: 4.5018369499999999e-01}, {Field0: 7.9242697200000001e-01, Field1: 2.4424224999999999e-01, Field2: 4.4754315500000003e-01}, {Field0: 7.9860776000000000e-01, Field1: 2.4703979800000000e-01, Field2: 4.4484844099999998e-01}, {Field0: 8.0475151099999997e-01, Field1: 2.4991135000000000e-01, Field2: 4.4210161500000000e-01}, {Field0: 8.1085484100000005e-01, Field1: 2.5286139899999999e-01, Field2: 4.3930496299999999e-01}, {Field0: 8.1691418599999999e-01, Field1: 2.5589455000000000e-01, Field2: 4.3646107400000000e-01}, {Field0: 8.2292579700000001e-01, Field1: 2.5901550499999998e-01, Field2: 4.3357287400000000e-01}, {Field0: 8.2888574000000004e-01, Field1: 2.6222904899999999e-01, Field2: 4.3064364700000002e-01}, {Field0: 8.3479081799999999e-01, Field1: 2.6553970300000002e-01, Field2: 4.2767135200000000e-01}, {Field0: 8.4063568000000000e-01, Field1: 2.6895287400000001e-01, Field2: 4.2466562000000002e-01}, {Field0: 8.4641580400000005e-01, Field1: 2.7247349100000001e-01, Field2: 4.2163106400000000e-01}, {Field0: 8.5212648999999996e-01, Field1: 2.7610646900000002e-01, Field2: 4.1857276700000001e-01}, {Field0: 8.5776286999999996e-01, Field1: 2.7985666599999998e-01, Field2: 4.1549631900000000e-01}, {Field0: 8.6332039699999996e-01, Field1: 2.8372900299999998e-01, Field2: 4.1240288899999999e-01}, {Field0: 8.6879336799999995e-01, Field1: 2.8772820500000001e-01, Field2: 4.0930300200000003e-01}, {Field0: 8.7417634200000005e-01, Field1: 2.9185867900000001e-01, Field2: 4.0620539700000002e-01}, {Field0: 8.7946394400000005e-01, Field1: 2.9612459600000002e-01, Field2: 4.0311803400000001e-01}, {Field0: 8.8465082399999995e-01, Field1: 3.0053009000000003e-01, Field2: 4.0004706000000001e-01}, {Field0: 8.8973141800000000e-01, Field1: 3.0507881700000000e-01, Field2: 3.9700155900000000e-01}, {Field0: 8.9470019400000000e-01, Field1: 3.0977344499999998e-01, Field2: 3.9399463400000001e-01}, {Field0: 8.9955188399999997e-01, Field1: 3.1461642499999998e-01, Field2: 3.9103667399999997e-01}, {Field0: 9.0428129700000004e-01, Field1: 3.1960998099999999e-01, Field2: 3.8813688899999998e-01}, {Field0: 9.0888352400000005e-01, Field1: 3.2475512600000001e-01, Field2: 3.8530800799999998e-01}, {Field0: 9.1335409099999998e-01, Field1: 3.3005194700000001e-01, Field2: 3.8256341399999999e-01}, {Field0: 9.1768885200000005e-01, Field1: 3.3550006799999998e-01, Field2: 3.7991513799999999e-01}, {Field0: 9.2188418699999997e-01, Field1: 3.4109811200000001e-01, Field2: 3.7737597699999997e-01}, {Field0: 9.2593710200000001e-01, Field1: 3.4684368500000001e-01, Field2: 3.7495907699999997e-01}, {Field0: 9.2984509000000004e-01, Field1: 3.5273381700000001e-01, Field2: 3.7267651299999999e-01}, {Field0: 9.3360645399999997e-01, Field1: 3.5876437700000002e-01, Field2: 3.7054088299999999e-01}, {Field0: 9.3722087399999998e-01, Field1: 3.6492931200000001e-01, Field2: 3.6856652499999998e-01}, {Field0: 9.4068744299999996e-01, Field1: 3.7122416800000002e-01, Field2: 3.6676169900000000e-01}, {Field0: 9.4400644800000000e-01, Field1: 3.7764288899999998e-01, Field2: 3.6513632800000001e-01}, {Field0: 9.4717952800000005e-01, Field1: 3.8417787399999997e-01, Field2: 3.6370112999999998e-01}, {Field0: 9.5021014999999998e-01, Field1: 3.9081954600000002e-01, Field2: 3.6246769400000001e-01}, {Field0: 9.5309907699999996e-01, Field1: 3.9756289400000000e-01, Field2: 3.6143843100000000e-01}, {Field0: 9.5584923700000002e-01, Field1: 4.0440021300000001e-01, Field2: 3.6061907599999998e-01}, {Field0: 9.5846407899999997e-01, Field1: 4.1132366599999998e-01, Field2: 3.6001423199999999e-01}, {Field0: 9.6094922100000002e-01, Field1: 4.1832324500000001e-01, Field2: 3.5962978899999998e-01}, {Field0: 9.6331028100000005e-01, Field1: 4.2538972400000002e-01, Field2: 3.5946901999999997e-01}, {Field0: 9.6554935099999994e-01, Field1: 4.3251870700000000e-01, Field2: 3.5952915099999999e-01}, {Field0: 9.6767112799999999e-01, Field1: 4.3970297600000002e-01, Field2: 3.5981017199999998e-01}, {Field0: 9.6968044099999995e-01, Field1: 4.4693563500000000e-01, Field2: 3.6031111999999998e-01}, {Field0: 9.7158218100000004e-01, Field1: 4.5421017000000002e-01, Field2: 3.6103015599999999e-01}, {Field0: 9.7338123799999998e-01, Field1: 4.6152048400000001e-01, Field2: 3.6196465200000000e-01}, {Field0: 9.7508243900000002e-01, Field1: 4.6886093600000001e-01, Field2: 3.6311129199999997e-01}, {Field0: 9.7669049399999996e-01, Field1: 4.7622635000000002e-01, Field2: 3.6446616199999998e-01}, {Field0: 9.7820995700000002e-01, Field1: 4.8361203100000000e-01, Field2: 3.6602485400000001e-01}, {Field0: 9.7964518099999998e-01, Field1: 4.9101376400000002e-01, Field2: 3.6778255900000001e-01}, {Field0: 9.8100029099999997e-01, Field1: 4.9842779999999998e-01, Field2: 3.6973415700000001e-01}, {Field0: 9.8227915899999996e-01, Field1: 5.0585084800000002e-01, Field2: 3.7187430100000002e-01}, {Field0: 9.8348538699999999e-01, Field1: 5.1328005399999999e-01, Field2: 3.7419750099999999e-01}, {Field0: 9.8462229800000001e-01, Field1: 5.2071297200000000e-01, Field2: 3.7669818599999999e-01}, {Field0: 9.8569292500000005e-01, Field1: 5.2814754500000005e-01, Field2: 3.7937077400000002e-01}, {Field0: 9.8670001699999998e-01, Field1: 5.3558207000000002e-01, Field2: 3.8220972399999997e-01}, {Field0: 9.8764603799999995e-01, Field1: 5.4301517300000002e-01, Field2: 3.8520957800000000e-01}, {Field0: 9.8853317299999999e-01, Field1: 5.5044577800000005e-01, Field2: 3.8836500899999998e-01}, {Field0: 9.8936334100000001e-01, Field1: 5.5787307500000005e-01, Field2: 3.9167084600000002e-01}, {Field0: 9.9013820100000005e-01, Field1: 5.6529649500000001e-01, Field2: 3.9512209900000000e-01}, {Field0: 9.9087120799999995e-01, Field1: 5.7270625900000005e-01, Field2: 3.9871397100000000e-01}, {Field0: 9.9155816500000005e-01, Field1: 5.8010682800000002e-01, Field2: 4.0244105800000002e-01}, {Field0: 9.9219572800000000e-01, Field1: 5.8750170599999996e-01, Field2: 4.0629879200000002e-01}, {Field0: 9.9278466899999995e-01, Field1: 5.9489108800000001e-01, Field2: 4.1028297600000002e-01}, {Field0: 9.9332556100000002e-01, Field1: 6.0227529700000004e-01, Field2: 4.1438965799999999e-01}, {Field0: 9.9383441200000000e-01, Field1: 6.0964353999999998e-01, Field2: 4.1861322099999998e-01}, {Field0: 9.9430851399999998e-01, Field1: 6.1699895299999996e-01, Field2: 4.2294967200000000e-01}, {Field0: 9.9473769800000000e-01, Field1: 6.2434965700000000e-01, Field2: 4.2739677100000001e-01}, {Field0: 9.9512185399999997e-01, Field1: 6.3169637599999995e-01, Field2: 4.3195149199999999e-01}, {Field0: 9.9548046899999998e-01, Field1: 6.3902659600000000e-01, Field2: 4.3660715900000002e-01}, {Field0: 9.9580992400000001e-01, Field1: 6.4634389699999995e-01, Field2: 4.4136095100000000e-01}, {Field0: 9.9609570300000005e-01, Field1: 6.5365875600000001e-01, Field2: 4.4621302099999999e-01}, {Field0: 9.9634140599999998e-01, Field1: 6.6096937899999997e-01, Field2: 4.5116020099999998e-01}, {Field0: 9.9657980300000004e-01, Field1: 6.6825562100000002e-01, Field2: 4.5619181399999997e-01}, {Field0: 9.9677478399999997e-01, Field1: 6.7554148400000003e-01, Field2: 4.6131415799999997e-01}, {Field0: 9.9692542699999998e-01, Field1: 6.8282795299999999e-01, Field2: 4.6652568900000002e-01}, {Field0: 9.9707718499999998e-01, Field1: 6.9008789699999995e-01, Field2: 4.7181146099999999e-01}, {Field0: 9.9718625299999997e-01, Field1: 6.9734899100000003e-01, Field2: 4.7718172700000000e-01}, {Field0: 9.9725398200000004e-01, Field1: 7.0461079100000001e-01, Field2: 4.8263465100000003e-01}, {Field0: 9.9732518000000003e-01, Field1: 7.1184771400000002e-01, Field2: 4.8815437499999997e-01}, {Field0: 9.9735098300000002e-01, Field1: 7.1908911900000005e-01, Field2: 4.9375466499999998e-01}, {Field0: 9.9735058300000001e-01, Field1: 7.2632441500000000e-01, Field2: 4.9942797200000000e-01}, {Field0: 9.9734125900000004e-01, Field1: 7.3354467099999998e-01, Field2: 5.0516683900000003e-01}, {Field0: 9.9728468900000000e-01, Field1: 7.4077189300000001e-01, Field2: 5.1098333100000004e-01}, {Field0: 9.9722836699999995e-01, Field1: 7.4798056300000004e-01, Field2: 5.1685937800000004e-01}, {Field0: 9.9713848000000005e-01, Field1: 7.5518985199999999e-01, Field2: 5.2280599600000000e-01}, {Field0: 9.9701934199999998e-01, Field1: 7.6239788300000000e-01, Field2: 5.2882077500000002e-01}, {Field0: 9.9689825399999998e-01, Field1: 7.6959097499999995e-01, Field2: 5.3489234100000005e-01}, {Field0: 9.9672686200000005e-01, Field1: 7.7679485999999998e-01, Field2: 5.4103857099999997e-01}, {Field0: 9.9657064500000003e-01, Field1: 7.8397650799999996e-01, Field2: 5.4723299199999997e-01}, {Field0: 9.9636906500000000e-01, Field1: 7.9116734600000005e-01, Field2: 5.5349893900000002e-01}, {Field0: 9.9616230900000002e-01, Field1: 7.9834770899999996e-01, Field2: 5.5981964299999998e-01}, {Field0: 9.9593244800000003e-01, Field1: 8.0552712599999998e-01, Field2: 5.6620182399999996e-01}, {Field0: 9.9568010699999998e-01, Field1: 8.1270577300000002e-01, Field2: 5.7264479499999998e-01}, {Field0: 9.9542397299999996e-01, Field1: 8.1987530200000003e-01, Field2: 5.7914012999999998e-01}, {Field0: 9.9513128799999995e-01, Field1: 8.2705177299999999e-01, Field2: 5.8570146300000003e-01}, {Field0: 9.9485108899999997e-01, Field1: 8.3421282600000002e-01, Field2: 5.9230709299999995e-01}, {Field0: 9.9452366599999997e-01, Field1: 8.4138661800000003e-01, Field2: 5.9898281799999997e-01}, {Field0: 9.9422189999999999e-01, Field1: 8.4854047399999999e-01, Field2: 6.0569590299999998e-01}, {Field0: 9.9386576699999996e-01, Field1: 8.5571103800000003e-01, Field2: 6.1248179800000002e-01}, {Field0: 9.9354528499999994e-01, Field1: 8.6285884599999996e-01, Field2: 6.1929930000000000e-01}, {Field0: 9.9316955799999995e-01, Field1: 8.7002446700000002e-01, Field2: 6.2618946300000000e-01}, {Field0: 9.9283096299999996e-01, Field1: 8.7716840399999996e-01, Field2: 6.3310914799999995e-01}, {Field0: 9.9243988100000002e-01, Field1: 8.8432969400000005e-01, Field2: 6.4009946500000003e-01}, {Field0: 9.9208945400000004e-01, Field1: 8.9146954899999997e-01, Field2: 6.4711602099999999e-01}, {Field0: 9.9168774400000004e-01, Field1: 8.9862704999999998e-01, Field2: 6.5420154399999997e-01}, {Field0: 9.9133192900000000e-01, Field1: 9.0576274800000001e-01, Field2: 6.6130883900000004e-01}, {Field0: 9.9092968500000000e-01, Field1: 9.1291500999999997e-01, Field2: 6.6848120099999997e-01}, {Field0: 9.9056991400000005e-01, Field1: 9.2004869899999997e-01, Field2: 6.7567459200000002e-01}, {Field0: 9.9017463699999997e-01, Field1: 9.2719561200000000e-01, Field2: 6.8292560199999996e-01}, {Field0: 9.8981483900000000e-01, Field1: 9.3432853999999999e-01, Field2: 6.9019819400000004e-01}, {Field0: 9.8943373599999995e-01, Field1: 9.4147035400000001e-01, Field2: 6.9751862799999997e-01}, {Field0: 9.8907743800000003e-01, Field1: 9.4860407700000005e-01, Field2: 7.0486251899999997e-01}, {Field0: 9.8871706400000003e-01, Field1: 9.5574152000000001e-01, Field2: 7.1224223200000003e-01}, {Field0: 9.8836702799999998e-01, Field1: 9.6287802600000005e-01, Field2: 7.1964862699999999e-01}, {Field0: 9.8803288499999997e-01, Field1: 9.7001241299999996e-01, Field2: 7.2707677299999995e-01}, {Field0: 9.8769070199999998e-01, Field1: 9.7715423099999998e-01, Field2: 7.3453620500000005e-01}, {Field0: 9.8738682700000002e-01, Field1: 9.8428756100000003e-01, Field2: 7.4200154699999998e-01}, {Field0: 9.8705250899999997e-01, Field1: 9.9143785299999998e-01, Field2: 7.4950418799999996e-01}];
var inferno_raw_12664126 = [{Field0: 1.4615909600000001e-03, Field1: 4.6612776600000002e-04, Field2: 1.3865519999999999e-02}, {Field0: 2.2672636800000001e-03, Field1: 1.2699255299999999e-03, Field2: 1.8570351999999998e-02}, {Field0: 3.2989909200000001e-03, Field1: 2.2493486300000001e-03, Field2: 2.4239050799999998e-02}, {Field0: 4.5469061500000001e-03, Field1: 3.3918015600000002e-03, Field2: 3.0909247500000001e-02}, {Field0: 6.0055256500000003e-03, Field1: 4.6919456099999996e-03, Field2: 3.8557898000000000e-02}, {Field0: 7.6757885599999997e-03, Field1: 6.1361162600000003e-03, Field2: 4.6836033600000000e-02}, {Field0: 9.5605109399999992e-03, Field1: 7.7134413100000002e-03, Field2: 5.5143075600000001e-02}, {Field0: 1.1663476900000001e-02, Field1: 9.4167540300000002e-03, Field2: 6.3459808000000006e-02}, {Field0: 1.3995038800000000e-02, Field1: 1.1224713799999999e-02, Field2: 7.1861689000000006e-02}, {Field0: 1.6560559499999999e-02, Field1: 1.3136226200000000e-02, Field2: 8.0281795099999997e-02}, {Field0: 1.9373229499999998e-02, Field1: 1.5132578900000001e-02, Field2: 8.8766809399999994e-02}, {Field0: 2.2446886499999999e-02, Field1: 1.7199148399999999e-02, Field2: 9.7327438299999999e-02}, {Field0: 2.5792737300000000e-02, Field1: 1.9330629799999999e-02, Field2: 1.0592983500000000e-01}, {Field0: 2.9432425100000000e-02, Field1: 2.1503077100000000e-02, Field2: 1.1462132799999999e-01}, {Field0: 3.3385223499999998e-02, Field1: 2.3702427099999999e-02, Field2: 1.2339728599999999e-01}, {Field0: 3.7668421100000002e-02, Field1: 2.5920786400000000e-02, Field2: 1.3223210799999999e-01}, {Field0: 4.2252555400000003e-02, Field1: 2.8138501500000000e-02, Field2: 1.4114051899999999e-01}, {Field0: 4.6914628700000002e-02, Field1: 3.0323612900000001e-02, Field2: 1.5016386700000001e-01}, {Field0: 5.1643762400000001e-02, Field1: 3.2473617199999999e-02, Field2: 1.5925427700000000e-01}, {Field0: 5.6449100900000000e-02, Field1: 3.4569186699999997e-02, Field2: 1.6841353900000000e-01}, {Field0: 6.1339720000000000e-02, Field1: 3.6590021299999997e-02, Field2: 1.7764217199999999e-01}, {Field0: 6.6331262000000002e-02, Field1: 3.8503626800000003e-02, Field2: 1.8696158800000001e-01}, {Field0: 7.1428918100000002e-02, Field1: 4.0293909500000002e-02, Field2: 1.9635355800000001e-01}, {Field0: 7.6636756000000000e-02, Field1: 4.1905332900000002e-02, Field2: 2.0579878800000001e-01}, {Field0: 8.1962077300000005e-02, Field1: 4.3327866600000001e-02, Field2: 2.1528911300000000e-01}, {Field0: 8.7411389699999995e-02, Field1: 4.4556166199999997e-02, Field2: 2.2481347900000001e-01}, {Field0: 9.2990152600000001e-02, Field1: 4.5582950300000001e-02, Field2: 2.3435760400000000e-01}, {Field0: 9.8702497200000003e-02, Field1: 4.6401873099999998e-02, Field2: 2.4390370000000000e-01}, {Field0: 1.0455093600000000e-01, Field1: 4.7008054100000002e-02, Field2: 2.5343030000000000e-01}, {Field0: 1.1053608400000001e-01, Field1: 4.7398670800000001e-02, Field2: 2.6291223499999999e-01}, {Field0: 1.1665642300000000e-01, Field1: 4.7573591999999998e-02, Field2: 2.7232080300000000e-01}, {Field0: 1.2290812600000001e-01, Field1: 4.7536018300000003e-02, Field2: 2.8162417000000001e-01}, {Field0: 1.2928498399999999e-01, Field1: 4.7293083800000003e-02, Field2: 2.9078801199999998e-01}, {Field0: 1.3577844999999999e-01, Field1: 4.6856367800000000e-02, Field2: 2.9977640400000000e-01}, {Field0: 1.4237781899999999e-01, Field1: 4.6242256599999997e-02, Field2: 3.0855291000000001e-01}, {Field0: 1.4907295700000001e-01, Field1: 4.5467644400000000e-02, Field2: 3.1708513900000002e-01}, {Field0: 1.5584971100000000e-01, Field1: 4.4558805600000001e-02, Field2: 3.2533841400000002e-01}, {Field0: 1.6268893900000000e-01, Field1: 4.3554288099999998e-02, Field2: 3.3327667799999999e-01}, {Field0: 1.6957514800000001e-01, Field1: 4.2489314899999998e-02, Field2: 3.4087418800000002e-01}, {Field0: 1.7649320199999999e-01, Field1: 4.1401708900000000e-02, Field2: 3.4811060599999999e-01}, {Field0: 1.8342877499999999e-01, Field1: 4.0328885799999999e-02, Field2: 3.5497139100000002e-01}, {Field0: 1.9036745299999999e-01, Field1: 3.9308888799999997e-02, Field2: 3.6144694500000002e-01}, {Field0: 1.9729742500000000e-01, Field1: 3.8400182499999998e-02, Field2: 3.6753462900000000e-01}, {Field0: 2.0420929800000001e-01, Field1: 3.7632260899999999e-02, Field2: 3.7323755700000000e-01}, {Field0: 2.1109546300000001e-01, Field1: 3.7029648800000002e-02, Field2: 3.7856326400000001e-01}, {Field0: 2.1794864799999999e-01, Field1: 3.6614604900000000e-02, Field2: 3.8352241500000001e-01}, {Field0: 2.2476290800000001e-01, Field1: 3.6404990100000000e-02, Field2: 3.8812894399999998e-01}, {Field0: 2.3153814800000000e-01, Field1: 3.6405251100000001e-02, Field2: 3.9240015000000000e-01}, {Field0: 2.3827296100000001e-01, Field1: 3.6620994900000002e-02, Field2: 3.9635338799999997e-01}, {Field0: 2.4496691100000001e-01, Field1: 3.7054501699999999e-02, Field2: 4.0000661500000001e-01}, {Field0: 2.5162035399999999e-01, Field1: 3.7705283200000002e-02, Field2: 4.0337789699999999e-01}, {Field0: 2.5823426500000002e-01, Field1: 3.8570615300000000e-02, Field2: 4.0648503100000000e-01}, {Field0: 2.6480964899999998e-01, Field1: 3.9646866599999997e-02, Field2: 4.0934537300000001e-01}, {Field0: 2.7134666400000002e-01, Field1: 4.0921582099999999e-02, Field2: 4.1197608600000002e-01}, {Field0: 2.7784982899999999e-01, Field1: 4.2352874100000000e-02, Field2: 4.1439210599999998e-01}, {Field0: 2.8432131799999999e-01, Field1: 4.3932578700000002e-02, Field2: 4.1660786100000002e-01}, {Field0: 2.9076337299999999e-01, Field1: 4.5643759800000003e-02, Field2: 4.1863675600000000e-01}, {Field0: 2.9717825100000000e-01, Field1: 4.7470029300000001e-02, Field2: 4.2049116399999997e-01}, {Field0: 3.0356818200000002e-01, Field1: 4.9395892699999999e-02, Field2: 4.2218244900000002e-01}, {Field0: 3.0993534200000000e-01, Field1: 5.1406972900000000e-02, Field2: 4.2372099899999999e-01}, {Field0: 3.1628183500000001e-01, Field1: 5.3490132099999997e-02, Field2: 4.2511627699999999e-01}, {Field0: 3.2260967099999999e-01, Field1: 5.5633517799999997e-02, Field2: 4.2637686899999999e-01}, {Field0: 3.2892076300000000e-01, Field1: 5.7826550499999997e-02, Field2: 4.2751054599999999e-01}, {Field0: 3.3521691599999998e-01, Field1: 6.0059873399999998e-02, Field2: 4.2852432000000001e-01}, {Field0: 3.4149982800000001e-01, Field1: 6.2325277200000001e-02, Field2: 4.2942450300000001e-01}, {Field0: 3.4777108600000001e-01, Field1: 6.4615610000000004e-02, Field2: 4.3021676500000000e-01}, {Field0: 3.5403216900000001e-01, Field1: 6.6924683200000001e-02, Field2: 4.3090618600000002e-01}, {Field0: 3.6028444900000001e-01, Field1: 6.9247175300000005e-02, Field2: 4.3149730900000000e-01}, {Field0: 3.6652919499999997e-01, Field1: 7.1578540299999993e-02, Field2: 4.3199418499999998e-01}, {Field0: 3.7276757500000002e-01, Field1: 7.3914921100000003e-02, Field2: 4.3240041899999998e-01}, {Field0: 3.7900065900000002e-01, Field1: 7.6253070100000001e-02, Field2: 4.3271921400000002e-01}, {Field0: 3.8522838300000001e-01, Field1: 7.8591486399999994e-02, Field2: 4.3295497300000002e-01}, {Field0: 3.9145265899999998e-01, Field1: 8.0926705799999998e-02, Field2: 4.3310876300000001e-01}, {Field0: 3.9767437900000002e-01, Field1: 8.3256812900000005e-02, Field2: 4.3318264699999998e-01}, {Field0: 4.0389427800000000e-01, Field1: 8.5580344500000002e-02, Field2: 4.3317852600000001e-01}, {Field0: 4.1011301500000003e-01, Field1: 8.7896159299999999e-02, Field2: 4.3309805600000001e-01}, {Field0: 4.1633116900000000e-01, Field1: 9.0203399200000006e-02, Field2: 4.3294267800000003e-01}, {Field0: 4.2254924900000002e-01, Field1: 9.2501454299999994e-02, Field2: 4.3271363499999999e-01}, {Field0: 4.2876769599999998e-01, Field1: 9.4789934199999995e-02, Field2: 4.3241199600000002e-01}, {Field0: 4.3498688499999999e-01, Field1: 9.7068641700000000e-02, Field2: 4.3203867299999998e-01}, {Field0: 4.4120712400000001e-01, Field1: 9.9337550999999996e-02, Field2: 4.3159443800000002e-01}, {Field0: 4.4742838200000001e-01, Field1: 1.0159707900000001e-01, Field2: 4.3108049700000001e-01}, {Field0: 4.5365061400000001e-01, Field1: 1.0384771600000001e-01, Field2: 4.3049789799999999e-01}, {Field0: 4.5987462299999998e-01, Field1: 1.0608916500000000e-01, Field2: 4.2984578899999998e-01}, {Field0: 4.6610049399999998e-01, Field1: 1.0832192300000000e-01, Field2: 4.2912450699999999e-01}, {Field0: 4.7232825499999997e-01, Field1: 1.1054658400000000e-01, Field2: 4.2833431999999999e-01}, {Field0: 4.7855788900000001e-01, Field1: 1.1276383099999999e-01, Field2: 4.2747543100000002e-01}, {Field0: 4.8478932499999999e-01, Field1: 1.1497443000000000e-01, Field2: 4.2654799100000002e-01}, {Field0: 4.9102244800000000e-01, Field1: 1.1717921900000000e-01, Field2: 4.2555210599999999e-01}, {Field0: 4.9725706900000000e-01, Field1: 1.1937913200000000e-01, Field2: 4.2448790800000002e-01}, {Field0: 5.0349269799999996e-01, Field1: 1.2157541400000001e-01, Field2: 4.2335611000000001e-01}, {Field0: 5.0972954100000001e-01, Field1: 1.2376865400000001e-01, Field2: 4.2215567599999998e-01}, {Field0: 5.1596730400000002e-01, Field1: 1.2595994699999999e-01, Field2: 4.2088659400000000e-01}, {Field0: 5.2220564599999997e-01, Field1: 1.2815043900000000e-01, Field2: 4.1954884799999997e-01}, {Field0: 5.2844419200000003e-01, Field1: 1.3034132400000001e-01, Field2: 4.1814241099999999e-01}, {Field0: 5.3468252299999997e-01, Field1: 1.3253384500000001e-01, Field2: 4.1666725799999998e-01}, {Field0: 5.4092018600000003e-01, Field1: 1.3472928600000000e-01, Field2: 4.1512336599999999e-01}, {Field0: 5.4715670599999999e-01, Field1: 1.3692895899999999e-01, Field2: 4.1351066199999997e-01}, {Field0: 5.5339164900000004e-01, Field1: 1.3913414700000001e-01, Field2: 4.1182888200000001e-01}, {Field0: 5.5962444200000006e-01, Field1: 1.4134626500000000e-01, Field2: 4.1007802799999998e-01}, {Field0: 5.6585447700000002e-01, Field1: 1.4356676900000001e-01, Field2: 4.0825813200000000e-01}, {Field0: 5.7208110800000000e-01, Field1: 1.4579714999999999e-01, Field2: 4.0636924600000002e-01}, {Field0: 5.7830365600000000e-01, Field1: 1.4803893400000001e-01, Field2: 4.0441144400000001e-01}, {Field0: 5.8452140699999999e-01, Field1: 1.5029367900000001e-01, Field2: 4.0238482900000000e-01}, {Field0: 5.9073361499999999e-01, Field1: 1.5256297699999999e-01, Field2: 4.0028952800000001e-01}, {Field0: 5.9693975099999996e-01, Field1: 1.5484823200000000e-01, Field2: 3.9812489699999998e-01}, {Field0: 6.0313892999999996e-01, Field1: 1.5715116100000001e-01, Field2: 3.9589130800000000e-01}, {Field0: 6.0933018400000005e-01, Field1: 1.5947354899999999e-01, Field2: 3.9358934899999998e-01}, {Field0: 6.1551262699999998e-01, Field1: 1.6181711100000001e-01, Field2: 3.9121929500000002e-01}, {Field0: 6.2168533999999998e-01, Field1: 1.6418358199999999e-01, Field2: 3.8878145600000003e-01}, {Field0: 6.2784737400000001e-01, Field1: 1.6657472400000001e-01, Field2: 3.8627618000000002e-01}, {Field0: 6.3399774600000003e-01, Field1: 1.6899231400000000e-01, Field2: 3.8370385400000001e-01}, {Field0: 6.4013544700000002e-01, Field1: 1.7143815000000001e-01, Field2: 3.8106490599999998e-01}, {Field0: 6.4625964800000002e-01, Field1: 1.7391387600000000e-01, Field2: 3.7835896899999999e-01}, {Field0: 6.5236934800000002e-01, Field1: 1.7642127099999999e-01, Field2: 3.7558620900000000e-01}, {Field0: 6.5846316599999999e-01, Field1: 1.7896239899999999e-01, Field2: 3.7274821400000002e-01}, {Field0: 6.6453996400000004e-01, Field1: 1.8153911100000000e-01, Field2: 3.6984559900000002e-01}, {Field0: 6.7059857199999995e-01, Field1: 1.8415326800000001e-01, Field2: 3.6687902500000003e-01}, {Field0: 6.7663779499999999e-01, Field1: 1.8680672800000001e-01, Field2: 3.6384919500000001e-01}, {Field0: 6.8265640699999997e-01, Field1: 1.8950135200000001e-01, Field2: 3.6075685600000001e-01}, {Field0: 6.8865315800000004e-01, Field1: 1.9223899400000000e-01, Field2: 3.5760279699999997e-01}, {Field0: 6.9462676899999998e-01, Field1: 1.9502149999999999e-01, Field2: 3.5438785299999997e-01}, {Field0: 7.0057593699999998e-01, Field1: 1.9785070299999999e-01, Field2: 3.5111290000000001e-01}, {Field0: 7.0649970900000003e-01, Field1: 2.0072819600000000e-01, Field2: 3.4777686299999999e-01}, {Field0: 7.1239634500000004e-01, Field1: 2.0365602899999999e-01, Field2: 3.4438259399999999e-01}, {Field0: 7.1826444700000003e-01, Field1: 2.0663599299999999e-01, Field2: 3.4093120799999999e-01}, {Field0: 7.2410261300000001e-01, Field1: 2.0966983400000000e-01, Field2: 3.3742376600000001e-01}, {Field0: 7.2990942199999997e-01, Field1: 2.1275927000000000e-01, Field2: 3.3386136700000002e-01}, {Field0: 7.3568343199999997e-01, Field1: 2.1590597600000000e-01, Field2: 3.3024514700000002e-01}, {Field0: 7.4142318500000004e-01, Field1: 2.1911158900000000e-01, Field2: 3.2657627500000003e-01}, {Field0: 7.4712720700000002e-01, Field1: 2.2237769700000001e-01, Field2: 3.2285595200000000e-01}, {Field0: 7.5279400900000004e-01, Field1: 2.2570583699999999e-01, Field2: 3.1908541000000001e-01}, {Field0: 7.5842209000000005e-01, Field1: 2.2909749200000001e-01, Field2: 3.1526590999999998e-01}, {Field0: 7.6400994000000000e-01, Field1: 2.3255408299999999e-01, Field2: 3.1139873400000001e-01}, {Field0: 7.6955603800000005e-01, Field1: 2.3607696700000000e-01, Field2: 3.0748518800000002e-01}, {Field0: 7.7505888800000000e-01, Field1: 2.3966743500000001e-01, Field2: 3.0352631200000002e-01}, {Field0: 7.8051702300000003e-01, Field1: 2.4332672000000000e-01, Field2: 2.9952266500000002e-01}, {Field0: 7.8592879400000004e-01, Field1: 2.4705596799999999e-01, Field2: 2.9547675600000001e-01}, {Field0: 7.9129267400000003e-01, Field1: 2.5085623200000001e-01, Field2: 2.9138994299999998e-01}, {Field0: 7.9660714399999999e-01, Field1: 2.5472848500000000e-01, Field2: 2.8726358499999999e-01}, {Field0: 8.0187068900000003e-01, Field1: 2.5867361000000000e-01, Field2: 2.8309903300000000e-01}, {Field0: 8.0708180699999998e-01, Field1: 2.6269240100000002e-01, Field2: 2.7889762899999998e-01}, {Field0: 8.1223900800000004e-01, Field1: 2.6678555799999998e-01, Field2: 2.7466069799999998e-01}, {Field0: 8.1734081800000002e-01, Field1: 2.7095368800000003e-01, Field2: 2.7038954500000001e-01}, {Field0: 8.2238578399999995e-01, Field1: 2.7519729999999998e-01, Field2: 2.6608544499999998e-01}, {Field0: 8.2737247400000002e-01, Field1: 2.7951680499999998e-01, Field2: 2.6174964299999998e-01}, {Field0: 8.3229948099999995e-01, Field1: 2.8391251600000000e-01, Field2: 2.5738334099999999e-01}, {Field0: 8.3716542500000002e-01, Field1: 2.8838464699999999e-01, Field2: 2.5298769999999998e-01}, {Field0: 8.4196895900000002e-01, Field1: 2.9293331200000000e-01, Field2: 2.4856382499999999e-01}, {Field0: 8.4670876799999994e-01, Field1: 2.9755852799999999e-01, Field2: 2.4411276700000001e-01}, {Field0: 8.5138357200000003e-01, Field1: 3.0226021300000000e-01, Field2: 2.3963551199999999e-01}, {Field0: 8.5599212999999996e-01, Field1: 3.0703818799999999e-01, Field2: 2.3513297799999999e-01}, {Field0: 8.6053324099999995e-01, Field1: 3.1189218299999999e-01, Field2: 2.3060600900000000e-01}, {Field0: 8.6500574699999999e-01, Field1: 3.1682183300000000e-01, Field2: 2.2605536800000001e-01}, {Field0: 8.6940853399999996e-01, Field1: 3.2182668500000000e-01, Field2: 2.2148173400000001e-01}, {Field0: 8.7374052999999996e-01, Field1: 3.2690620100000001e-01, Field2: 2.1688569899999999e-01}, {Field0: 8.7800071499999999e-01, Field1: 3.3205975999999998e-01, Field2: 2.1226776200000000e-01}, {Field0: 8.8218811200000002e-01, Field1: 3.3728666299999999e-01, Field2: 2.0762832600000000e-01}, {Field0: 8.8630179499999995e-01, Field1: 3.4258613700000001e-01, Field2: 2.0296769600000000e-01}, {Field0: 8.9034088499999997e-01, Field1: 3.4795734000000000e-01, Field2: 1.9828608000000000e-01}, {Field0: 8.9430455300000000e-01, Field1: 3.5339936300000002e-01, Field2: 1.9358358300000000e-01}, {Field0: 8.9819201699999995e-01, Field1: 3.5891124000000002e-01, Field2: 1.8886021200000000e-01}, {Field0: 9.0200254400000002e-01, Field1: 3.6449194899999998e-01, Field2: 1.8411587600000001e-01}, {Field0: 9.0573544800000005e-01, Field1: 3.7014041900000000e-01, Field2: 1.7935038800000000e-01}, {Field0: 9.0939009000000004e-01, Field1: 3.7585553300000002e-01, Field2: 1.7456347200000000e-01}, {Field0: 9.1296587399999996e-01, Field1: 3.8163613800000001e-01, Field2: 1.6975476400000000e-01}, {Field0: 9.1646225100000001e-01, Field1: 3.8748104400000000e-01, Field2: 1.6492382600000000e-01}, {Field0: 9.1987870999999999e-01, Field1: 3.9338903400000003e-01, Field2: 1.6007015199999999e-01}, {Field0: 9.2321478300000004e-01, Field1: 3.9935886700000001e-01, Field2: 1.5519318500000001e-01}, {Field0: 9.2647003900000002e-01, Field1: 4.0538928200000002e-01, Field2: 1.5029232900000000e-01}, {Field0: 9.2964408300000001e-01, Field1: 4.1147900700000001e-01, Field2: 1.4536697300000001e-01}, {Field0: 9.3273655499999997e-01, Field1: 4.1762675599999999e-01, Field2: 1.4041651899999999e-01}, {Field0: 9.3574712599999998e-01, Field1: 4.2383123700000003e-01, Field2: 1.3544041600000001e-01}, {Field0: 9.3867549400000005e-01, Field1: 4.3009116200000003e-01, Field2: 1.3043817499999999e-01}, {Field0: 9.4152138399999996e-01, Field1: 4.3640524300000000e-01, Field2: 1.2540944000000001e-01}, {Field0: 9.4428454299999998e-01, Field1: 4.4277219899999998e-01, Field2: 1.2035403800000000e-01}, {Field0: 9.4696474100000005e-01, Field1: 4.4919075700000000e-01, Field2: 1.1527205900000000e-01}, {Field0: 9.4956176599999997e-01, Field1: 4.5565965800000002e-01, Field2: 1.1016394700000000e-01}, {Field0: 9.5207542099999998e-01, Field1: 4.6217765599999999e-01, Field2: 1.0503061399999999e-01}, {Field0: 9.5450552300000002e-01, Field1: 4.6874352200000002e-01, Field2: 9.9873593100000005e-02}, {Field0: 9.5685190300000000e-01, Field1: 4.7535604799999998e-01, Field2: 9.4695226800000004e-02}, {Field0: 9.5911439700000001e-01, Field1: 4.8201404399999997e-01, Field2: 8.9498907300000000e-02}, {Field0: 9.6129284999999998e-01, Field1: 4.8871634500000000e-01, Field2: 8.4289389100000001e-02}, {Field0: 9.6338710999999999e-01, Field1: 4.9546180600000000e-01, Field2: 7.9073190700000004e-02}, {Field0: 9.6539703099999996e-01, Field1: 5.0224930899999998e-01, Field2: 7.3859114300000001e-02}, {Field0: 9.6732246499999996e-01, Field1: 5.0907776100000002e-01, Field2: 6.8658919900000004e-02}, {Field0: 9.6916326399999997e-01, Field1: 5.1594609199999997e-01, Field2: 6.3488197100000004e-02}, {Field0: 9.7091927700000002e-01, Field1: 5.2285325900000001e-01, Field2: 5.8367489000000002e-02}, {Field0: 9.7259035100000002e-01, Field1: 5.2979824600000003e-01, Field2: 5.3323724300000000e-02}, {Field0: 9.7417632700000001e-01, Field1: 5.3678005900000003e-01, Field2: 4.8392009000000000e-02}, {Field0: 9.7567703800000005e-01, Field1: 5.4379773300000001e-01, Field2: 4.3617792199999998e-02}, {Field0: 9.7709231299999999e-01, Field1: 5.5085032300000003e-01, Field2: 3.9050013100000003e-02}, {Field0: 9.7842197099999995e-01, Field1: 5.5793691099999998e-01, Field2: 3.4930622699999997e-02}, {Field0: 9.7966582400000002e-01, Field1: 5.6505660000000002e-01, Field2: 3.1409159100000000e-02}, {Field0: 9.8082367299999995e-01, Field1: 5.7220851600000000e-01, Field2: 2.8507593099999999e-02}, {Field0: 9.8189531100000005e-01, Field1: 5.7939180300000004e-01, Field2: 2.6249735300000000e-02}, {Field0: 9.8288052199999998e-01, Field1: 5.8660562699999996e-01, Field2: 2.4661341600000001e-02}, {Field0: 9.8377908100000000e-01, Field1: 5.9384916799999998e-01, Field2: 2.3770226299999999e-02}, {Field0: 9.8459075500000004e-01, Field1: 6.0112162599999996e-01, Field2: 2.3606383299999999e-02}, {Field0: 9.8531530099999998e-01, Field1: 6.0842221100000005e-01, Field2: 2.4202117400000001e-02}, {Field0: 9.8595247100000005e-01, Field1: 6.1575014699999997e-01, Field2: 2.5592185300000000e-02}, {Field0: 9.8650201299999996e-01, Field1: 6.2310466700000000e-01, Field2: 2.7813949599999999e-02}, {Field0: 9.8696366999999996e-01, Field1: 6.3048501099999998e-01, Field2: 3.0907545900000000e-02}, {Field0: 9.8733718199999998e-01, Field1: 6.3789042399999996e-01, Field2: 3.4916063900000002e-02}, {Field0: 9.8762229599999996e-01, Field1: 6.4532015200000004e-01, Field2: 3.9885747200000002e-02}, {Field0: 9.8781875900000005e-01, Field1: 6.5277343899999996e-01, Field2: 4.5580803699999999e-02}, {Field0: 9.8792632999999996e-01, Field1: 6.6024952599999998e-01, Field2: 5.1750386699999998e-02}, {Field0: 9.8794478299999999e-01, Field1: 6.6774764099999995e-01, Field2: 5.8328688900000002e-02}, {Field0: 9.8787391000000002e-01, Field1: 6.7526699999999995e-01, Field2: 6.5257016700000003e-02}, {Field0: 9.8771353500000003e-01, Field1: 6.8280680199999999e-01, Field2: 7.2489233000000000e-02}, {Field0: 9.8746351600000004e-01, Field1: 6.9036621799999998e-01, Field2: 7.9989717599999996e-02}, {Field0: 9.8712375900000005e-01, Field1: 6.9794439100000005e-01, Field2: 8.7731421500000004e-02}, {Field0: 9.8669422900000003e-01, Field1: 7.0554042400000005e-01, Field2: 9.5694179700000007e-02}, {Field0: 9.8617496999999998e-01, Field1: 7.1315337499999998e-01, Field2: 1.0386332400000001e-01}, {Field0: 9.8556573900000000e-01, Field1: 7.2078246000000001e-01, Field2: 1.1222875600000000e-01}, {Field0: 9.8486520300000002e-01, Field1: 7.2842749699999998e-01, Field2: 1.2078465100000001e-01}, {Field0: 9.8407512900000005e-01, Field1: 7.3608652100000005e-01, Field2: 1.2952657900000000e-01}, {Field0: 9.8319599199999996e-01, Field1: 7.4375832600000003e-01, Field2: 1.3845306299999999e-01}, {Field0: 9.8222846300000000e-01, Field1: 7.5144159600000004e-01, Field2: 1.4756457300000000e-01}, {Field0: 9.8117345700000003e-01, Field1: 7.5913489199999995e-01, Field2: 1.5686322400000000e-01}, {Field0: 9.8003217799999998e-01, Field1: 7.6683662399999997e-01, Field2: 1.6635254399999999e-01}, {Field0: 9.7880618300000000e-01, Field1: 7.7454502800000002e-01, Field2: 1.7603729800000001e-01}, {Field0: 9.7749745300000002e-01, Field1: 7.8225813799999999e-01, Field2: 1.8592335700000001e-01}, {Field0: 9.7610847400000000e-01, Field1: 7.8997375299999995e-01, Field2: 1.9601758899999999e-01}, {Field0: 9.7463784200000003e-01, Field1: 7.9769156299999999e-01, Field2: 2.0633192500000000e-01}, {Field0: 9.7308793900000001e-01, Field1: 8.0540933299999995e-01, Field2: 2.1687683899999999e-01}, {Field0: 9.7146782200000004e-01, Field1: 8.1312172500000002e-01, Field2: 2.2765804600000000e-01}, {Field0: 9.6978314600000004e-01, Field1: 8.2082514299999998e-01, Field2: 2.3868594200000001e-01}, {Field0: 9.6804081700000000e-01, Field1: 8.2851549099999999e-01, Field2: 2.4997158200000000e-01}, {Field0: 9.6624258900000004e-01, Field1: 8.3619097600000003e-01, Field2: 2.6153389799999999e-01}, {Field0: 9.6439392400000001e-01, Field1: 8.4384806899999998e-01, Field2: 2.7339111199999999e-01}, {Field0: 9.6251665600000003e-01, Field1: 8.5147634000000005e-01, Field2: 2.8554567500000000e-01}, {Field0: 9.6062554499999997e-01, Field1: 8.5906871600000001e-01, Field2: 2.9801021900000002e-01}, {Field0: 9.5872008799999997e-01, Field1: 8.6662435500000001e-01, Field2: 3.1082046600000002e-01}, {Field0: 9.5683407499999995e-01, Field1: 8.7412856900000002e-01, Field2: 3.2397394699999998e-01}, {Field0: 9.5499717699999997e-01, Field1: 8.8156892600000003e-01, Field2: 3.3747547900000002e-01}, {Field0: 9.5321509199999999e-01, Field1: 8.8894227699999995e-01, Field2: 3.5136871300000000e-01}, {Field0: 9.5154622499999997e-01, Field1: 8.9622590899999999e-01, Field2: 3.6562700500000000e-01}, {Field0: 9.5001848099999997e-01, Field1: 9.0340906300000001e-01, Field2: 3.8027122499999999e-01}, {Field0: 9.4868339099999999e-01, Field1: 9.1047296400000000e-01, Field2: 3.9528916900000000e-01}, {Field0: 9.4759436200000002e-01, Field1: 9.1739905300000002e-01, Field2: 4.1066519400000001e-01}, {Field0: 9.4680916299999995e-01, Field1: 9.2416824600000003e-01, Field2: 4.2637323599999999e-01}, {Field0: 9.4639153600000003e-01, Field1: 9.3076075199999997e-01, Field2: 4.4236749500000000e-01}, {Field0: 9.4640295100000005e-01, Field1: 9.3715897100000001e-01, Field2: 4.5859150700000001e-01}, {Field0: 9.4690256799999994e-01, Field1: 9.4334777500000000e-01, Field2: 4.7496977800000001e-01}, {Field0: 9.4793682499999998e-01, Field1: 9.4931752199999997e-01, Field2: 4.9142605299999997e-01}, {Field0: 9.4954483000000001e-01, Field1: 9.5506290000000005e-01, Field2: 5.0785964900000002e-01}, {Field0: 9.5174030399999998e-01, Field1: 9.6058669299999999e-01, Field2: 5.2420302600000002e-01}, {Field0: 9.5452928100000001e-01, Field1: 9.6589586800000005e-01, Field2: 5.4036075200000000e-01}, {Field0: 9.5789605300000003e-01, Field1: 9.7100333000000005e-01, Field2: 5.5627508999999997e-01}, {Field0: 9.6181201999999999e-01, Field1: 9.7592424099999997e-01, Field2: 5.7192538199999998e-01}, {Field0: 9.6624882199999995e-01, Field1: 9.8067819300000003e-01, Field2: 5.8720577299999999e-01}, {Field0: 9.7116162200000000e-01, Field1: 9.8528216099999999e-01, Field2: 6.0215432999999996e-01}, {Field0: 9.7651098300000005e-01, Field1: 9.8975343699999996e-01, Field2: 6.1676041299999995e-01}, {Field0: 9.8225730700000002e-01, Field1: 9.9410884399999999e-01, Field2: 6.3101700900000002e-01}, {Field0: 9.8836206800000004e-01, Field1: 9.9836414299999998e-01, Field2: 6.4492400500000002e-01}];
var plasma_raw_12665162 = [{Field0: 5.0383213599999997e-02, Field1: 2.9802897599999999e-02, Field2: 5.2797488299999995e-01}, {Field0: 6.3536363900000004e-02, Field1: 2.8425972899999999e-02, Field2: 5.3312368099999996e-01}, {Field0: 7.5353123399999999e-02, Field1: 2.7206372800000000e-02, Field2: 5.3800700099999998e-01}, {Field0: 8.6221797899999994e-02, Field1: 2.6125320600000002e-02, Field2: 5.4265769100000005e-01}, {Field0: 9.6378609700000006e-02, Field1: 2.5165097599999998e-02, Field2: 5.4710348700000000e-01}, {Field0: 1.0597970399999999e-01, Field1: 2.4309243599999999e-02, Field2: 5.5136785099999996e-01}, {Field0: 1.1512364100000000e-01, Field1: 2.3556250000000001e-02, Field2: 5.5546772799999999e-01}, {Field0: 1.2390290299999999e-01, Field1: 2.2878101099999999e-02, Field2: 5.5942347999999997e-01}, {Field0: 1.3238072000000001e-01, Field1: 2.2258377400000001e-02, Field2: 5.6325011599999997e-01}, {Field0: 1.4060307599999999e-01, Field1: 2.1686667400000002e-02, Field2: 5.6695948500000004e-01}, {Field0: 1.4860652699999999e-01, Field1: 2.1153587599999999e-02, Field2: 5.7056171099999997e-01}, {Field0: 1.5642064899999999e-01, Field1: 2.0650717400000001e-02, Field2: 5.7406544599999998e-01}, {Field0: 1.6406972200000000e-01, Field1: 2.0170532599999999e-02, Field2: 5.7747807399999995e-01}, {Field0: 1.7157392499999999e-01, Field1: 1.9706341499999998e-02, Field2: 5.8080589000000005e-01}, {Field0: 1.7895021200000000e-01, Field1: 1.9252224299999999e-02, Field2: 5.8405424299999997e-01}, {Field0: 1.8621295800000001e-01, Field1: 1.8802976700000001e-02, Field2: 5.8722766100000001e-01}, {Field0: 1.9337444900000000e-01, Field1: 1.8354059299999999e-02, Field2: 5.9032995399999999e-01}, {Field0: 2.0044525999999999e-01, Field1: 1.7901551200000001e-02, Field2: 5.9336430399999995e-01}, {Field0: 2.0743455099999999e-01, Field1: 1.7442108599999999e-02, Field2: 5.9633334100000002e-01}, {Field0: 2.1435029799999999e-01, Field1: 1.6972927600000000e-02, Field2: 5.9923920700000000e-01}, {Field0: 2.2119675000000000e-01, Field1: 1.6497048399999999e-02, Field2: 6.0208332300000000e-01}, {Field0: 2.2798297100000001e-01, Field1: 1.6007150899999999e-02, Field2: 6.0486740299999997e-01}, {Field0: 2.3471453700000000e-01, Field1: 1.5501506500000000e-02, Field2: 6.0759243799999996e-01}, {Field0: 2.4139625300000001e-01, Field1: 1.4979104100000000e-02, Field2: 6.1025908900000003e-01}, {Field0: 2.4803237700000000e-01, Field1: 1.4439358600000000e-02, Field2: 6.1286774300000002e-01}, {Field0: 2.5462668999999999e-01, Field1: 1.3882091799999999e-02, Field2: 6.1541853700000004e-01}, {Field0: 2.6118256200000001e-01, Field1: 1.3307515600000000e-02, Field2: 6.1791138499999998e-01}, {Field0: 2.6770299300000000e-01, Field1: 1.2716216299999999e-02, Field2: 6.2034599700000004e-01}, {Field0: 2.7419066500000000e-01, Field1: 1.2109142300000000e-02, Field2: 6.2272190299999997e-01}, {Field0: 2.8064796900000000e-01, Field1: 1.1487591500000000e-02, Field2: 6.2503846799999996e-01}, {Field0: 2.8707605899999999e-01, Field1: 1.0855486200000000e-02, Field2: 6.2729497499999998e-01}, {Field0: 2.9347769499999998e-01, Field1: 1.0212884900000000e-02, Field2: 6.2949049000000001e-01}, {Field0: 2.9985512199999997e-01, Field1: 9.5607955099999992e-03, Field2: 6.3162392300000003e-01}, {Field0: 3.0620982499999999e-01, Field1: 8.9018534599999994e-03, Field2: 6.3369410199999998e-01}, {Field0: 3.1254312400000001e-01, Field1: 8.2390070399999994e-03, Field2: 6.3569975899999998e-01}, {Field0: 3.1885618300000002e-01, Field1: 7.5755105100000003e-03, Field2: 6.3763953699999998e-01}, {Field0: 3.2515002500000001e-01, Field1: 6.9149173400000000e-03, Field2: 6.3951200100000005e-01}, {Field0: 3.3142554699999999e-01, Field1: 6.2610737900000001e-03, Field2: 6.4131564900000004e-01}, {Field0: 3.3768344600000000e-01, Field1: 5.6183088899999997e-03, Field2: 6.4304893600000002e-01}, {Field0: 3.4392459100000000e-01, Field1: 4.9905308000000002e-03, Field2: 6.4471019500000004e-01}, {Field0: 3.5014969899999998e-01, Field1: 4.3820255699999998e-03, Field2: 6.4629771100000000e-01}, {Field0: 3.5635920900000001e-01, Field1: 3.7978176099999999e-03, Field2: 6.4780977200000001e-01}, {Field0: 3.6255347300000001e-01, Field1: 3.2431959100000002e-03, Field2: 6.4924464100000001e-01}, {Field0: 3.6873276199999999e-01, Field1: 2.7237072100000002e-03, Field2: 6.5060056099999997e-01}, {Field0: 3.7489727000000000e-01, Field1: 2.2451489699999998e-03, Field2: 6.5187576199999997e-01}, {Field0: 3.8104711600000002e-01, Field1: 1.8135620499999999e-03, Field2: 6.5306846699999999e-01}, {Field0: 3.8718263900000000e-01, Field1: 1.4344692300000000e-03, Field2: 6.5417676100000000e-01}, {Field0: 3.9330400999999998e-01, Field1: 1.1138825900000001e-03, Field2: 6.5519875500000002e-01}, {Field0: 3.9941082100000003e-01, Field1: 8.5942080899999997e-04, Field2: 6.5613283499999997e-01}, {Field0: 4.0550291399999999e-01, Field1: 6.7809151700000002e-04, Field2: 6.5697727600000000e-01}, {Field0: 4.1158008200000001e-01, Field1: 5.7710173499999999e-04, Field2: 6.5773037999999995e-01}, {Field0: 4.1764206300000001e-01, Field1: 5.6384747599999997e-04, Field2: 6.5839049199999999e-01}, {Field0: 4.2368854900000003e-01, Field1: 6.4590277999999998e-04, Field2: 6.5895600399999998e-01}, {Field0: 4.2971918599999998e-01, Field1: 8.3100820699999998e-04, Field2: 6.5942536299999999e-01}, {Field0: 4.3573357499999998e-01, Field1: 1.1270587500000000e-03, Field2: 6.5979707700000001e-01}, {Field0: 4.4173212299999998e-01, Field1: 1.5398477900000001e-03, Field2: 6.6006900899999998e-01}, {Field0: 4.4771359999999999e-01, Field1: 2.0795474400000001e-03, Field2: 6.6024036699999999e-01}, {Field0: 4.5367739400000001e-01, Field1: 2.7547030200000002e-03, Field2: 6.6030996600000003e-01}, {Field0: 4.5962293799999998e-01, Field1: 3.5737441500000001e-03, Field2: 6.6027665499999999e-01}, {Field0: 4.6554963100000002e-01, Field1: 4.5451808400000003e-03, Field2: 6.6013938299999997e-01}, {Field0: 4.7145684700000001e-01, Field1: 5.6775876199999997e-03, Field2: 6.5989721000000001e-01}, {Field0: 4.7734392900000000e-01, Field1: 6.9795874299999998e-03, Field2: 6.5954931100000003e-01}, {Field0: 4.8321019799999998e-01, Field1: 8.4598349400000009e-03, Field2: 6.5909498899999996e-01}, {Field0: 4.8905495100000002e-01, Field1: 1.0126999600000000e-02, Field2: 6.5853367699999998e-01}, {Field0: 4.9487746599999999e-01, Field1: 1.1989748600000001e-02, Field2: 6.5786494600000001e-01}, {Field0: 5.0067768700000004e-01, Field1: 1.4055064000000001e-02, Field2: 6.5708756099999999e-01}, {Field0: 5.0645414300000002e-01, Field1: 1.6333344300000000e-02, Field2: 6.5620229399999996e-01}, {Field0: 5.1220603499999995e-01, Field1: 1.8833223199999999e-02, Field2: 6.5520922199999998e-01}, {Field0: 5.1793257999999998e-01, Field1: 2.1563191799999999e-02, Field2: 6.5410854500000004e-01}, {Field0: 5.2363298999999996e-01, Field1: 2.4531646800000001e-02, Field2: 6.5290062900000001e-01}, {Field0: 5.2930647399999997e-01, Field1: 2.7746873500000001e-02, Field2: 6.5158601000000005e-01}, {Field0: 5.3495224399999997e-01, Field1: 3.1217030000000000e-02, Field2: 6.5016539600000001e-01}, {Field0: 5.4056950999999998e-01, Field1: 3.4950131000000002e-02, Field2: 6.4863966799999995e-01}, {Field0: 5.4615749400000002e-01, Field1: 3.8954033399999997e-02, Field2: 6.4700988400000004e-01}, {Field0: 5.5171542299999998e-01, Field1: 4.3136479499999998e-02, Field2: 6.4527727499999998e-01}, {Field0: 5.5724253800000001e-01, Field1: 4.7330758500000000e-02, Field2: 6.4344325000000002e-01}, {Field0: 5.6273809600000002e-01, Field1: 5.1544809200000000e-02, Field2: 6.4150938899999999e-01}, {Field0: 5.6820137199999998e-01, Field1: 5.5777670600000002e-02, Field2: 6.3947743999999995e-01}, {Field0: 5.7363185900000002e-01, Field1: 6.0028136900000001e-02, Field2: 6.3734884100000000e-01}, {Field0: 5.7902868200000002e-01, Field1: 6.4295554699999993e-02, Field2: 6.3512610800000002e-01}, {Field0: 5.8439113700000000e-01, Field1: 6.8579026099999996e-02, Field2: 6.3281160800000003e-01}, {Field0: 5.8971860600000003e-01, Field1: 7.2877587499999993e-02, Field2: 6.3040772700000003e-01}, {Field0: 5.9501050499999997e-01, Field1: 7.7190287799999993e-02, Field2: 6.2791699199999995e-01}, {Field0: 6.0026628299999996e-01, Field1: 8.1516189500000003e-02, Field2: 6.2534205799999998e-01}, {Field0: 6.0548542800000005e-01, Field1: 8.5854371299999996e-02, Field2: 6.2268570300000003e-01}, {Field0: 6.1066746900000002e-01, Field1: 9.0203930299999999e-02, Field2: 6.1995081100000005e-01}, {Field0: 6.1581197399999998e-01, Field1: 9.4563983800000001e-02, Field2: 6.1714036699999997e-01}, {Field0: 6.2091855500000004e-01, Field1: 9.8933672099999995e-02, Field2: 6.1425744000000004e-01}, {Field0: 6.2598686900000000e-01, Field1: 1.0331216000000000e-01, Field2: 6.1130517399999995e-01}, {Field0: 6.3101661499999995e-01, Field1: 1.0769864100000000e-01, Field2: 6.0828677399999997e-01}, {Field0: 6.3600754299999995e-01, Field1: 1.1209233500000000e-01, Field2: 6.0520549099999998e-01}, {Field0: 6.4095944400000004e-01, Field1: 1.1649249500000000e-01, Field2: 6.0206461099999997e-01}, {Field0: 6.4587215799999997e-01, Field1: 1.2089840500000000e-01, Field2: 5.9886744199999997e-01}, {Field0: 6.5074557099999997e-01, Field1: 1.2530938400000000e-01, Field2: 5.9561730000000002e-01}, {Field0: 6.5557961499999995e-01, Field1: 1.2972478500000001e-01, Field2: 5.9231749400000000e-01}, {Field0: 6.6037426600000004e-01, Field1: 1.3414399699999999e-01, Field2: 5.8897131800000002e-01}, {Field0: 6.6512949300000002e-01, Field1: 1.3856642799999999e-01, Field2: 5.8558230099999997e-01}, {Field0: 6.6984538500000002e-01, Field1: 1.4299154000000000e-01, Field2: 5.8215357199999995e-01}, {Field0: 6.7452206000000003e-01, Field1: 1.4741883500000000e-01, Field2: 5.7868824699999999e-01}, {Field0: 6.7915966400000005e-01, Field1: 1.5184785100000001e-01, Field2: 5.7518943099999997e-01}, {Field0: 6.8375838400000000e-01, Field1: 1.5627816300000000e-01, Field2: 5.7166015800000003e-01}, {Field0: 6.8831843999999998e-01, Field1: 1.6070938700000001e-01, Field2: 5.6810338000000005e-01}, {Field0: 6.9284008799999997e-01, Field1: 1.6514117400000000e-01, Field2: 5.6452195800000005e-01}, {Field0: 6.9732361499999995e-01, Field1: 1.6957321500000000e-01, Field2: 5.6091865900000004e-01}, {Field0: 7.0176933399999997e-01, Field1: 1.7400523600000001e-01, Field2: 5.5729614400000005e-01}, {Field0: 7.0617759000000002e-01, Field1: 1.7843700000000001e-01, Field2: 5.5365697000000003e-01}, {Field0: 7.1054874700000004e-01, Field1: 1.8286830600000001e-01, Field2: 5.5000357899999996e-01}, {Field0: 7.1488319499999997e-01, Field1: 1.8729898600000000e-01, Field2: 5.4633829899999997e-01}, {Field0: 7.1918133900000003e-01, Field1: 1.9172890600000000e-01, Field2: 5.4266333800000000e-01}, {Field0: 7.2344360399999996e-01, Field1: 1.9615796199999999e-01, Field2: 5.3898078599999999e-01}, {Field0: 7.2767042800000004e-01, Field1: 2.0058608600000000e-01, Field2: 5.3529261200000000e-01}, {Field0: 7.3186223100000003e-01, Field1: 2.0501317399999999e-01, Field2: 5.3160099500000002e-01}, {Field0: 7.3601942399999998e-01, Field1: 2.0943907100000000e-01, Field2: 5.2790843399999998e-01}, {Field0: 7.4014255699999998e-01, Field1: 2.1386396499999999e-01, Field2: 5.2421553300000001e-01}, {Field0: 7.4423210200000001e-01, Field1: 2.1828789900000001e-01, Field2: 5.2052376600000005e-01}, {Field0: 7.4828853299999998e-01, Field1: 2.2271094200000000e-01, Field2: 5.1683449500000000e-01}, {Field0: 7.5231232100000001e-01, Field1: 2.2713318699999999e-01, Field2: 5.1314896300000001e-01}, {Field0: 7.5630393699999998e-01, Field1: 2.3155474900000000e-01, Field2: 5.0946830499999995e-01}, {Field0: 7.6026384899999999e-01, Field1: 2.3597576500000000e-01, Field2: 5.0579354300000001e-01}, {Field0: 7.6419251600000004e-01, Field1: 2.4039639400000001e-01, Field2: 5.0212559899999998e-01}, {Field0: 7.6809039099999998e-01, Field1: 2.4481681299999999e-01, Field2: 4.9846529000000001e-01}, {Field0: 7.7195791599999997e-01, Field1: 2.4923722000000001e-01, Field2: 4.9481333799999999e-01}, {Field0: 7.7579552200000002e-01, Field1: 2.5365779700000002e-01, Field2: 4.9117051699999997e-01}, {Field0: 7.7960361400000000e-01, Field1: 2.5807839700000001e-01, Field2: 4.8753912399999999e-01}, {Field0: 7.8338263600000002e-01, Field1: 2.6249966200000002e-01, Field2: 4.8391773199999999e-01}, {Field0: 7.8713297800000004e-01, Field1: 2.6692185899999998e-01, Field2: 4.8030670199999997e-01}, {Field0: 7.9085501499999999e-01, Field1: 2.7134526700000000e-01, Field2: 4.7670631899999999e-01}, {Field0: 7.9454910099999998e-01, Field1: 2.7577017900000000e-01, Field2: 4.7311679800000001e-01}, {Field0: 7.9821557700000001e-01, Field1: 2.8019690100000000e-01, Field2: 4.6953828600000003e-01}, {Field0: 8.0185475799999995e-01, Field1: 2.8462575000000001e-01, Field2: 4.6597087100000001e-01}, {Field0: 8.0546694500000005e-01, Field1: 2.8905705700000001e-01, Field2: 4.6241458000000002e-01}, {Field0: 8.0905241900000002e-01, Field1: 2.9349111700000002e-01, Field2: 4.5886957699999997e-01}, {Field0: 8.1261150599999998e-01, Field1: 2.9792786500000001e-01, Field2: 4.5533756500000000e-01}, {Field0: 8.1614438199999995e-01, Field1: 3.0236813000000001e-01, Field2: 4.5181638499999999e-01}, {Field0: 8.1965125500000002e-01, Field1: 3.0681228199999999e-01, Field2: 4.4830586100000003e-01}, {Field0: 8.2313230900000001e-01, Field1: 3.1126070300000003e-01, Field2: 4.4480578100000001e-01}, {Field0: 8.2658770599999998e-01, Field1: 3.1571378200000000e-01, Field2: 4.4131590100000001e-01}, {Field0: 8.3001758400000003e-01, Field1: 3.2017191299999997e-01, Field2: 4.3783594700000000e-01}, {Field0: 8.3342205300000005e-01, Field1: 3.2463549899999999e-01, Field2: 4.3436561600000001e-01}, {Field0: 8.3680123699999998e-01, Field1: 3.2910483600000001e-01, Field2: 4.3090505200000001e-01}, {Field0: 8.4015527599999995e-01, Field1: 3.3358010599999999e-01, Field2: 4.2745483600000000e-01}, {Field0: 8.4348410299999999e-01, Field1: 3.3806210900000000e-01, Field2: 4.2401305900000003e-01}, {Field0: 8.4678772599999996e-01, Field1: 3.4255127200000002e-01, Field2: 4.2057933300000000e-01}, {Field0: 8.5006613200000003e-01, Field1: 3.4704802800000001e-01, Field2: 4.1715326400000002e-01}, {Field0: 8.5331927900000004e-01, Field1: 3.5155281500000002e-01, Field2: 4.1373444500000001e-01}, {Field0: 8.5654710300000003e-01, Field1: 3.5606607200000001e-01, Field2: 4.1032246900000002e-01}, {Field0: 8.5974952000000004e-01, Field1: 3.6058822899999998e-01, Field2: 4.0691697500000001e-01}, {Field0: 8.6292655900000004e-01, Field1: 3.6511940799999998e-01, Field2: 4.0351880899999998e-01}, {Field0: 8.6607791999999995e-01, Field1: 3.6966044599999998e-01, Field2: 4.0012602700000000e-01}, {Field0: 8.6920343600000005e-01, Field1: 3.7421179500000001e-01, Field2: 3.9673821100000001e-01}, {Field0: 8.7230291699999996e-01, Field1: 3.7877390999999999e-01, Field2: 3.9335494700000001e-01}, {Field0: 8.7537614900000005e-01, Field1: 3.8334724300000000e-01, Field2: 3.8997583200000002e-01}, {Field0: 8.7842289500000004e-01, Field1: 3.8793224900000001e-01, Field2: 3.8660046799999997e-01}, {Field0: 8.8144291600000002e-01, Field1: 3.9252933899999998e-01, Field2: 3.8322862200000002e-01}, {Field0: 8.8443598199999995e-01, Field1: 3.9713887700000000e-01, Field2: 3.7986024600000001e-01}, {Field0: 8.8740168200000002e-01, Field1: 4.0176151100000002e-01, Field2: 3.7649423199999998e-01}, {Field0: 8.9033968699999999e-01, Field1: 4.0639769399999998e-01, Field2: 3.7313022800000001e-01}, {Field0: 8.9324964699999998e-01, Field1: 4.1104787100000001e-01, Field2: 3.6976789300000001e-01}, {Field0: 8.9613119100000005e-01, Field1: 4.1571248900000002e-01, Field2: 3.6640690700000000e-01}, {Field0: 8.9898393099999996e-01, Field1: 4.2039198600000000e-01, Field2: 3.6304696500000000e-01}, {Field0: 9.0180745500000004e-01, Field1: 4.2508680700000001e-01, Field2: 3.5968775800000002e-01}, {Field0: 9.0460129499999997e-01, Field1: 4.2979744199999997e-01, Field2: 3.5632879600000000e-01}, {Field0: 9.0736499500000001e-01, Field1: 4.3452433499999998e-01, Field2: 3.5296977699999998e-01}, {Field0: 9.1009808800000003e-01, Field1: 4.3926790799999998e-01, Field2: 3.4961046899999998e-01}, {Field0: 9.1280009500000003e-01, Field1: 4.4402857400000001e-01, Field2: 3.4625065599999999e-01}, {Field0: 9.1547051800000001e-01, Field1: 4.4880674399999998e-01, Field2: 3.4289014800000001e-01}, {Field0: 9.1810884800000003e-01, Field1: 4.5360281800000002e-01, Field2: 3.3952877100000001e-01}, {Field0: 9.2071438299999997e-01, Field1: 4.5841742000000002e-01, Field2: 3.3616558200000002e-01}, {Field0: 9.2328666000000004e-01, Field1: 4.6325082800000000e-01, Field2: 3.3280082700000002e-01}, {Field0: 9.2582514599999999e-01, Field1: 4.6810338699999998e-01, Field2: 3.2943451200000001e-01}, {Field0: 9.2832927499999995e-01, Field1: 4.7297546499999998e-01, Field2: 3.2606655000000001e-01}, {Field0: 9.3079846899999996e-01, Field1: 4.7786741999999999e-01, Field2: 3.2269687600000002e-01}, {Field0: 9.3323213999999999e-01, Field1: 4.8277960300000000e-01, Field2: 3.1932544400000001e-01}, {Field0: 9.3562968400000002e-01, Field1: 4.8771235699999999e-01, Field2: 3.1595221099999998e-01}, {Field0: 9.3799003400000003e-01, Field1: 4.9266654399999998e-01, Field2: 3.1257543999999998e-01}, {Field0: 9.4031293900000001e-01, Field1: 4.9764203800000001e-01, Field2: 3.0919662799999997e-01}, {Field0: 9.4259777099999997e-01, Field1: 5.0263914700000001e-01, Field2: 3.0581582400000001e-01}, {Field0: 9.4484389300000005e-01, Field1: 5.0765816900000005e-01, Field2: 3.0243310099999998e-01}, {Field0: 9.4705066199999999e-01, Field1: 5.1269938999999998e-01, Field2: 2.9904855499999999e-01}, {Field0: 9.4921742700000000e-01, Field1: 5.1776308699999996e-01, Field2: 2.9566230799999998e-01}, {Field0: 9.5134353000000005e-01, Field1: 5.2284952200000001e-01, Field2: 2.9227450599999999e-01}, {Field0: 9.5342772499999995e-01, Field1: 5.2795955000000006e-01, Field2: 2.8888344500000002e-01}, {Field0: 9.5546964000000001e-01, Field1: 5.3309308300000002e-01, Field2: 2.8549039100000001e-01}, {Field0: 9.5746876999999997e-01, Field1: 5.3825017200000003e-01, Field2: 2.8209614900000002e-01}, {Field0: 9.5942442999999999e-01, Field1: 5.4343103800000003e-01, Field2: 2.7870098999999998e-01}, {Field0: 9.6133592999999995e-01, Field1: 5.4863589000000001e-01, Field2: 2.7530521400000002e-01}, {Field0: 9.6320257300000001e-01, Field1: 5.5386493100000000e-01, Field2: 2.7190915900000001e-01}, {Field0: 9.6502365599999995e-01, Field1: 5.5911834900000001e-01, Field2: 2.6851320000000001e-01}, {Field0: 9.6679846999999997e-01, Field1: 5.6439632699999998e-01, Field2: 2.6511775199999998e-01}, {Field0: 9.6852563899999999e-01, Field1: 5.6969963300000004e-01, Field2: 2.6172148800000000e-01}, {Field0: 9.7020459299999995e-01, Field1: 5.7502827000000001e-01, Field2: 2.5832542400000003e-01}, {Field0: 9.7183500700000003e-01, Field1: 5.8038201499999997e-01, Field2: 2.5493125599999999e-01}, {Field0: 9.7341614499999995e-01, Field1: 5.8576101199999997e-01, Field2: 2.5153961499999999e-01}, {Field0: 9.7494726200000004e-01, Field1: 5.9116539400000001e-01, Field2: 2.4815119999999999e-01}, {Field0: 9.7642760600000000e-01, Field1: 5.9659528699999997e-01, Field2: 2.4476677499999999e-01}, {Field0: 9.7785641599999995e-01, Field1: 6.0205081100000002e-01, Field2: 2.4138718600000000e-01}, {Field0: 9.7923292200000001e-01, Field1: 6.0753207700000000e-01, Field2: 2.3801335900000001e-01}, {Field0: 9.8055634400000002e-01, Field1: 6.1303918999999996e-01, Field2: 2.3464631599999999e-01}, {Field0: 9.8182588999999998e-01, Field1: 6.1857225000000005e-01, Field2: 2.3128717800000001e-01}, {Field0: 9.8304074200000002e-01, Field1: 6.2413136199999997e-01, Field2: 2.2793714100000001e-01}, {Field0: 9.8419892399999998e-01, Field1: 6.2971751600000003e-01, Field2: 2.2459500600000001e-01}, {Field0: 9.8530076000000000e-01, Field1: 6.3532987600000002e-01, Field2: 2.2126488899999999e-01}, {Field0: 9.8634542100000000e-01, Field1: 6.4096850800000005e-01, Field2: 2.1794845600000001e-01}, {Field0: 9.8733206699999998e-01, Field1: 6.4663347500000001e-01, Field2: 2.1464753200000000e-01}, {Field0: 9.8825984600000005e-01, Field1: 6.5232483200000002e-01, Field2: 2.1136412199999999e-01}, {Field0: 9.8912789300000004e-01, Field1: 6.5804262999999996e-01, Field2: 2.0810042600000001e-01}, {Field0: 9.8993532799999995e-01, Field1: 6.6378691400000001e-01, Field2: 2.0485885500000001e-01}, {Field0: 9.9068126099999998e-01, Field1: 6.6955772000000002e-01, Field2: 2.0164204899999999e-01}, {Field0: 9.9136478699999997e-01, Field1: 6.7535508200000005e-01, Field2: 1.9845289999999999e-01}, {Field0: 9.9198498999999996e-01, Field1: 6.8117902500000005e-01, Field2: 1.9529456700000000e-01}, {Field0: 9.9254093899999996e-01, Field1: 6.8702956699999995e-01, Field2: 1.9217049999999999e-01}, {Field0: 9.9303169300000005e-01, Field1: 6.9290671900000000e-01, Field2: 1.8908445900000001e-01}, {Field0: 9.9345630200000001e-01, Field1: 6.9881048400000001e-01, Field2: 1.8604053700000001e-01}, {Field0: 9.9381380200000002e-01, Field1: 7.0474085399999997e-01, Field2: 1.8304318000000000e-01}, {Field0: 9.9410322600000001e-01, Field1: 7.1069781399999998e-01, Field2: 1.8009720700000001e-01}, {Field0: 9.9432359599999998e-01, Field1: 7.1668133599999995e-01, Field2: 1.7720782600000001e-01}, {Field0: 9.9447393399999995e-01, Field1: 7.2269137900000002e-01, Field2: 1.7438065599999999e-01}, {Field0: 9.9455325999999999e-01, Field1: 7.2872789000000004e-01, Field2: 1.7162173300000000e-01}, {Field0: 9.9456059399999996e-01, Field1: 7.3479079899999999e-01, Field2: 1.6893752200000001e-01}, {Field0: 9.9449496400000004e-01, Field1: 7.4088001999999997e-01, Field2: 1.6633491800000000e-01}, {Field0: 9.9435541100000002e-01, Field1: 7.4699544799999995e-01, Field2: 1.6382124300000001e-01}, {Field0: 9.9414098900000003e-01, Field1: 7.5313695500000000e-01, Field2: 1.6140422600000001e-01}, {Field0: 9.9385077799999999e-01, Field1: 7.5930439000000005e-01, Field2: 1.5909198399999999e-01}, {Field0: 9.9348219000000004e-01, Field1: 7.6549855099999997e-01, Field2: 1.5689062500000001e-01}, {Field0: 9.9303325099999995e-01, Field1: 7.7171983300000002e-01, Field2: 1.5480758300000000e-01}, {Field0: 9.9250521400000002e-01, Field1: 7.7796677500000000e-01, Field2: 1.5285486200000001e-01}, {Field0: 9.9189727000000005e-01, Field1: 7.8423911999999996e-01, Field2: 1.5104158100000001e-01}, {Field0: 9.9120867999999995e-01, Field1: 7.9053656900000002e-01, Field2: 1.4937688499999999e-01}, {Field0: 9.9043879300000004e-01, Field1: 7.9685877500000002e-01, Field2: 1.4786980999999999e-01}, {Field0: 9.8958706500000004e-01, Field1: 8.0320533699999996e-01, Field2: 1.4652912800000001e-01}, {Field0: 9.8864774099999997e-01, Field1: 8.0957860500000001e-01, Field2: 1.4535728400000000e-01}, {Field0: 9.8762055699999995e-01, Field1: 8.1597794199999996e-01, Field2: 1.4436264400000001e-01}, {Field0: 9.8650936600000005e-01, Field1: 8.2240062000000003e-01, Field2: 1.4355667899999999e-01}, {Field0: 9.8531419799999997e-01, Field1: 8.2884597999999998e-01, Field2: 1.4294511600000001e-01}, {Field0: 9.8403113900000005e-01, Field1: 8.3531535999999995e-01, Field2: 1.4252838800000001e-01}, {Field0: 9.8265281999999998e-01, Field1: 8.4181172999999998e-01, Field2: 1.4230265300000000e-01}, {Field0: 9.8119038900000000e-01, Field1: 8.4832890200000000e-01, Field2: 1.4227860700000000e-01}, {Field0: 9.7964363700000001e-01, Field1: 8.5486646799999999e-01, Field2: 1.4245342499999999e-01}, {Field0: 9.7799491800000005e-01, Field1: 8.6143231399999998e-01, Field2: 1.4280819100000000e-01}, {Field0: 9.7626497700000003e-01, Field1: 8.6801599799999996e-01, Field2: 1.4335094400000001e-01}, {Field0: 9.7444303799999998e-01, Field1: 8.7462219399999996e-01, Field2: 1.4406115600000000e-01}, {Field0: 9.7253000899999997e-01, Field1: 8.8125006299999997e-01, Field2: 1.4492291299999999e-01}, {Field0: 9.7053293200000001e-01, Field1: 8.8789612500000004e-01, Field2: 1.4591866300000000e-01}, {Field0: 9.6844347700000000e-01, Field1: 8.9456398900000000e-01, Field2: 1.4701443800000000e-01}, {Field0: 9.6627122499999996e-01, Field1: 9.0124936499999997e-01, Field2: 1.4817963900000000e-01}, {Field0: 9.6402105699999996e-01, Field1: 9.0795037899999997e-01, Field2: 1.4937042800000000e-01}, {Field0: 9.6168148099999995e-01, Field1: 9.1467247900000004e-01, Field2: 1.5052034300000000e-01}, {Field0: 9.5927564600000004e-01, Field1: 9.2140653699999997e-01, Field2: 1.5156601900000000e-01}, {Field0: 9.5680806799999996e-01, Field1: 9.2815206500000003e-01, Field2: 1.5240948900000001e-01}, {Field0: 9.5428681299999996e-01, Field1: 9.3490773000000005e-01, Field2: 1.5292115800000000e-01}, {Field0: 9.5172608299999994e-01, Field1: 9.4167060499999999e-01, Field2: 1.5292536300000001e-01}, {Field0: 9.4915053299999996e-01, Field1: 9.4843489999999997e-01, Field2: 1.5217760399999999e-01}, {Field0: 9.4660226999999997e-01, Field1: 9.5518985999999995e-01, Field2: 1.5032794399999999e-01}, {Field0: 9.4415174199999996e-01, Field1: 9.6191648699999999e-01, Field2: 1.4686078899999999e-01}, {Field0: 9.4189612000000000e-01, Field1: 9.6858981399999999e-01, Field2: 1.4095560600000001e-01}, {Field0: 9.4001509699999997e-01, Field1: 9.7515835699999998e-01, Field2: 1.3132551700000000e-01}];
var viridis_raw_12666198 = [{Field0: 2.6700401000000001e-01, Field1: 4.8743299999999996e-03, Field2: 3.2941519000000002e-01}, {Field0: 2.6851048000000000e-01, Field1: 9.6048300000000000e-03, Field2: 3.3542652000000001e-01}, {Field0: 2.6994383999999999e-01, Field1: 1.4624939999999999e-02, Field2: 3.4137895000000001e-01}, {Field0: 2.7130489000000002e-01, Field1: 1.9941859999999999e-02, Field2: 3.4726861999999997e-01}, {Field0: 2.7259383999999998e-01, Field1: 2.5563090000000000e-02, Field2: 3.5309302999999997e-01}, {Field0: 2.7380934000000001e-01, Field1: 3.1497480000000001e-02, Field2: 3.5885255999999999e-01}, {Field0: 2.7495241999999998e-01, Field1: 3.7751809999999997e-02, Field2: 3.6454323000000000e-01}, {Field0: 2.7602238000000001e-01, Field1: 4.4167230000000002e-02, Field2: 3.7016418000000001e-01}, {Field0: 2.7701840000000000e-01, Field1: 5.0344369999999999e-02, Field2: 3.7571452000000000e-01}, {Field0: 2.7794142999999999e-01, Field1: 5.6324440000000003e-02, Field2: 3.8119073999999997e-01}, {Field0: 2.7879067000000002e-01, Field1: 6.2145359999999997e-02, Field2: 3.8659204000000003e-01}, {Field0: 2.7956550000000002e-01, Field1: 6.7835870000000006e-02, Field2: 3.9191723000000001e-01}, {Field0: 2.8026657999999999e-01, Field1: 7.3417239999999995e-02, Field2: 3.9716349000000001e-01}, {Field0: 2.8089357999999998e-01, Field1: 7.8907030000000003e-02, Field2: 4.0232943999999998e-01}, {Field0: 2.8144581000000002e-01, Field1: 8.4319699999999997e-02, Field2: 4.0741403999999998e-01}, {Field0: 2.8192358000000001e-01, Field1: 8.9666220000000005e-02, Field2: 4.1241520999999998e-01}, {Field0: 2.8232739000000001e-01, Field1: 9.4955449999999997e-02, Field2: 4.1733086000000003e-01}, {Field0: 2.8265633000000001e-01, Field1: 1.0019575999999999e-01, Field2: 4.2216031999999998e-01}, {Field0: 2.8291049000000001e-01, Field1: 1.0539345000000000e-01, Field2: 4.2690201999999999e-01}, {Field0: 2.8309095000000001e-01, Field1: 1.1055307000000000e-01, Field2: 4.3155375000000001e-01}, {Field0: 2.8319704000000001e-01, Field1: 1.1567966000000000e-01, Field2: 4.3611482000000001e-01}, {Field0: 2.8322881999999999e-01, Field1: 1.2077701000000000e-01, Field2: 4.4058404000000001e-01}, {Field0: 2.8318684000000000e-01, Field1: 1.2584798999999999e-01, Field2: 4.4496000000000002e-01}, {Field0: 2.8307199999999999e-01, Field1: 1.3089476999999999e-01, Field2: 4.4924127000000003e-01}, {Field0: 2.8288389000000003e-01, Field1: 1.3592004999999999e-01, Field2: 4.5342734000000001e-01}, {Field0: 2.8262296999999997e-01, Field1: 1.4092556000000001e-01, Field2: 4.5751725999999998e-01}, {Field0: 2.8229037000000001e-01, Field1: 1.4591233000000001e-01, Field2: 4.6150995000000000e-01}, {Field0: 2.8188676000000001e-01, Field1: 1.5088146999999999e-01, Field2: 4.6540473999999998e-01}, {Field0: 2.8141228000000001e-01, Field1: 1.5583425000000001e-01, Field2: 4.6920128000000000e-01}, {Field0: 2.8086772999999998e-01, Field1: 1.6077132000000000e-01, Field2: 4.7289909000000002e-01}, {Field0: 2.8025467999999998e-01, Field1: 1.6569271999999999e-01, Field2: 4.7649762000000001e-01}, {Field0: 2.7957398999999999e-01, Field1: 1.7059884000000000e-01, Field2: 4.7999675000000003e-01}, {Field0: 2.7882617999999998e-01, Field1: 1.7549020000000001e-01, Field2: 4.8339653999999999e-01}, {Field0: 2.7801236000000001e-01, Field1: 1.8036684000000000e-01, Field2: 4.8669701999999998e-01}, {Field0: 2.7713437000000002e-01, Field1: 1.8522836000000001e-01, Field2: 4.8989831000000000e-01}, {Field0: 2.7619376000000001e-01, Field1: 1.9007447000000000e-01, Field2: 4.9300073999999999e-01}, {Field0: 2.7519115999999999e-01, Field1: 1.9490540000000001e-01, Field2: 4.9600487999999998e-01}, {Field0: 2.7412801999999997e-01, Field1: 1.9972086000000000e-01, Field2: 4.9891131000000000e-01}, {Field0: 2.7300595999999999e-01, Field1: 2.0452049000000000e-01, Field2: 5.0172075999999999e-01}, {Field0: 2.7182812000000001e-01, Field1: 2.0930306000000001e-01, Field2: 5.0443413000000004e-01}, {Field0: 2.7059473000000001e-01, Field1: 2.1406898999999999e-01, Field2: 5.0705243000000000e-01}, {Field0: 2.6930756000000000e-01, Field1: 2.1881782000000000e-01, Field2: 5.0957677999999995e-01}, {Field0: 2.6796846000000002e-01, Field1: 2.2354911000000000e-01, Field2: 5.1200840000000003e-01}, {Field0: 2.6657984000000001e-01, Field1: 2.2826210000000000e-01, Field2: 5.1434869999999999e-01}, {Field0: 2.6514450000000001e-01, Field1: 2.3295593000000001e-01, Field2: 5.1659929999999998e-01}, {Field0: 2.6366319999999999e-01, Field1: 2.3763078000000001e-01, Field2: 5.1876162999999997e-01}, {Field0: 2.6213800999999998e-01, Field1: 2.4228619000000001e-01, Field2: 5.2083736000000003e-01}, {Field0: 2.6057102999999998e-01, Field1: 2.4692169999999999e-01, Field2: 5.2282821999999995e-01}, {Field0: 2.5896450999999998e-01, Field1: 2.5153684999999998e-01, Field2: 5.2473608999999999e-01}, {Field0: 2.5732243999999999e-01, Field1: 2.5613039999999998e-01, Field2: 5.2656331999999995e-01}, {Field0: 2.5564519000000002e-01, Field1: 2.6070283999999999e-01, Field2: 5.2831152000000003e-01}, {Field0: 2.5393497999999998e-01, Field1: 2.6525384000000002e-01, Field2: 5.2998272999999996e-01}, {Field0: 2.5219404000000001e-01, Field1: 2.6978306000000002e-01, Field2: 5.3157905000000005e-01}, {Field0: 2.5042461999999999e-01, Field1: 2.7429024000000002e-01, Field2: 5.3310261000000003e-01}, {Field0: 2.4862898999999999e-01, Field1: 2.7877509000000000e-01, Field2: 5.3455560999999996e-01}, {Field0: 2.4681139999999999e-01, Field1: 2.8323661999999999e-01, Field2: 5.3594092999999998e-01}, {Field0: 2.4497208000000001e-01, Field1: 2.8767546999999999e-01, Field2: 5.3726017999999998e-01}, {Field0: 2.4311324000000001e-01, Field1: 2.9209153999999998e-01, Field2: 5.3851561000000003e-01}, {Field0: 2.4123707999999999e-01, Field1: 2.9648470999999998e-01, Field2: 5.3970945999999997e-01}, {Field0: 2.3934575000000000e-01, Field1: 3.0085494000000002e-01, Field2: 5.4084398000000000e-01}, {Field0: 2.3744138000000001e-01, Field1: 3.0520222000000002e-01, Field2: 5.4192140000000000e-01}, {Field0: 2.3552606000000001e-01, Field1: 3.0952657000000000e-01, Field2: 5.4294396000000000e-01}, {Field0: 2.3360276999999999e-01, Field1: 3.1382773000000003e-01, Field2: 5.4391423999999999e-01}, {Field0: 2.3167350000000000e-01, Field1: 3.1810579999999999e-01, Field2: 5.4483444000000003e-01}, {Field0: 2.2973926000000000e-01, Field1: 3.2236126999999998e-01, Field2: 5.4570633000000002e-01}, {Field0: 2.2780191999999999e-01, Field1: 3.2659431999999999e-01, Field2: 5.4653200000000002e-01}, {Field0: 2.2586329999999999e-01, Field1: 3.3080514999999999e-01, Field2: 5.4731353000000005e-01}, {Field0: 2.2392514999999999e-01, Field1: 3.3499400000000001e-01, Field2: 5.4805291000000000e-01}, {Field0: 2.2198915000000000e-01, Field1: 3.3916114000000003e-01, Field2: 5.4875211000000002e-01}, {Field0: 2.2005690999999999e-01, Field1: 3.4330687999999998e-01, Field2: 5.4941304000000002e-01}, {Field0: 2.1812994999999999e-01, Field1: 3.4743153999999998e-01, Field2: 5.5003754999999999e-01}, {Field0: 2.1620971000000000e-01, Field1: 3.5153548000000001e-01, Field2: 5.5062743000000003e-01}, {Field0: 2.1429756999999999e-01, Field1: 3.5561906999999998e-01, Field2: 5.5118440000000002e-01}, {Field0: 2.1239477000000001e-01, Field1: 3.5968273000000001e-01, Field2: 5.5171011000000003e-01}, {Field0: 2.1050310000000000e-01, Field1: 3.6372671000000001e-01, Field2: 5.5220645999999995e-01}, {Field0: 2.0862342000000000e-01, Field1: 3.6775151000000000e-01, Field2: 5.5267485999999999e-01}, {Field0: 2.0675627999999999e-01, Field1: 3.7175775000000000e-01, Field2: 5.5311653000000005e-01}, {Field0: 2.0490257000000001e-01, Field1: 3.7574589000000003e-01, Field2: 5.5353282000000004e-01}, {Field0: 2.0306309000000000e-01, Field1: 3.7971643999999999e-01, Field2: 5.5392505000000003e-01}, {Field0: 2.0123853999999999e-01, Field1: 3.8366989000000001e-01, Field2: 5.5429441000000002e-01}, {Field0: 1.9942950000000001e-01, Field1: 3.8760677999999998e-01, Field2: 5.5464205000000000e-01}, {Field0: 1.9763649999999999e-01, Field1: 3.9152762000000002e-01, Field2: 5.5496904999999996e-01}, {Field0: 1.9585992999999999e-01, Field1: 3.9543296999999999e-01, Field2: 5.5527636999999996e-01}, {Field0: 1.9410009000000000e-01, Field1: 3.9932336000000002e-01, Field2: 5.5556494000000001e-01}, {Field0: 1.9235719000000001e-01, Field1: 4.0319934000000002e-01, Field2: 5.5583559000000005e-01}, {Field0: 1.9063135000000000e-01, Field1: 4.0706147999999998e-01, Field2: 5.5608906999999996e-01}, {Field0: 1.8892259000000000e-01, Field1: 4.1091032999999999e-01, Field2: 5.5632605999999996e-01}, {Field0: 1.8723082999999999e-01, Field1: 4.1474644999999999e-01, Field2: 5.5654716999999998e-01}, {Field0: 1.8555593000000001e-01, Field1: 4.1857040000000001e-01, Field2: 5.5675291999999998e-01}, {Field0: 1.8389763000000001e-01, Field1: 4.2238274999999997e-01, Field2: 5.5694376999999995e-01}, {Field0: 1.8225561000000001e-01, Field1: 4.2618404999999998e-01, Field2: 5.5712010000000001e-01}, {Field0: 1.8062949000000000e-01, Field1: 4.2997486000000001e-01, Field2: 5.5728221000000000e-01}, {Field0: 1.7901879000000001e-01, Field1: 4.3375572000000001e-01, Field2: 5.5743034999999996e-01}, {Field0: 1.7742298000000001e-01, Field1: 4.3752720000000000e-01, Field2: 5.5756466000000005e-01}, {Field0: 1.7584147999999999e-01, Field1: 4.4128981000000000e-01, Field2: 5.5768525999999996e-01}, {Field0: 1.7427363000000001e-01, Field1: 4.4504410000000000e-01, Field2: 5.5779215999999998e-01}, {Field0: 1.7271876000000000e-01, Field1: 4.4879059999999998e-01, Field2: 5.5788532000000002e-01}, {Field0: 1.7117615000000000e-01, Field1: 4.5252979999999998e-01, Field2: 5.5796464000000001e-01}, {Field0: 1.6964572999999999e-01, Field1: 4.5626209000000001e-01, Field2: 5.5803033999999996e-01}, {Field0: 1.6812641000000000e-01, Field1: 4.5998802000000000e-01, Field2: 5.5808199000000003e-01}, {Field0: 1.6661709999999999e-01, Field1: 4.6370813000000000e-01, Field2: 5.5811913000000002e-01}, {Field0: 1.6511703000000000e-01, Field1: 4.6742289999999997e-01, Field2: 5.5814140999999995e-01}, {Field0: 1.6362542999999999e-01, Field1: 4.7113277999999997e-01, Field2: 5.5814841999999998e-01}, {Field0: 1.6214155000000000e-01, Field1: 4.7483820999999998e-01, Field2: 5.5813966999999998e-01}, {Field0: 1.6066467000000001e-01, Field1: 4.7853961000000000e-01, Field2: 5.5811465999999998e-01}, {Field0: 1.5919412999999999e-01, Field1: 4.8223739999999998e-01, Field2: 5.5807280000000004e-01}, {Field0: 1.5772933000000000e-01, Field1: 4.8593196999999999e-01, Field2: 5.5801347000000001e-01}, {Field0: 1.5626973000000000e-01, Field1: 4.8962370000000000e-01, Field2: 5.5793599999999999e-01}, {Field0: 1.5481487999999999e-01, Field1: 4.9331292999999998e-01, Field2: 5.5783967000000001e-01}, {Field0: 1.5336445000000001e-01, Field1: 4.9700002999999998e-01, Field2: 5.5772370999999998e-01}, {Field0: 1.5191820000000000e-01, Field1: 5.0068528999999995e-01, Field2: 5.5758733000000005e-01}, {Field0: 1.5047605000000000e-01, Field1: 5.0436904000000005e-01, Field2: 5.5742968000000004e-01}, {Field0: 1.4903917999999999e-01, Field1: 5.0805135999999995e-01, Field2: 5.5725049999999998e-01}, {Field0: 1.4760730999999999e-01, Field1: 5.1173263000000002e-01, Field2: 5.5704861000000006e-01}, {Field0: 1.4618026000000001e-01, Field1: 5.1541316000000004e-01, Field2: 5.5682271000000005e-01}, {Field0: 1.4475863000000000e-01, Field1: 5.1909318999999998e-01, Field2: 5.5657181000000000e-01}, {Field0: 1.4334326999999999e-01, Field1: 5.2277291999999997e-01, Field2: 5.5629490999999998e-01}, {Field0: 1.4193527000000000e-01, Field1: 5.2645253999999997e-01, Field2: 5.5599096999999997e-01}, {Field0: 1.4053599000000000e-01, Field1: 5.3013219000000000e-01, Field2: 5.5565893000000000e-01}, {Field0: 1.3914708000000001e-01, Field1: 5.3381201000000000e-01, Field2: 5.5529773000000004e-01}, {Field0: 1.3777048000000000e-01, Field1: 5.3749212999999996e-01, Field2: 5.5490625000000005e-01}, {Field0: 1.3640849999999999e-01, Field1: 5.4117263999999998e-01, Field2: 5.5448339000000002e-01}, {Field0: 1.3506561000000000e-01, Field1: 5.4485335000000001e-01, Field2: 5.5402905999999996e-01}, {Field0: 1.3374299000000001e-01, Field1: 5.4853457999999999e-01, Field2: 5.5354108000000002e-01}, {Field0: 1.3244401000000000e-01, Field1: 5.5221637000000001e-01, Field2: 5.5301827999999997e-01}, {Field0: 1.3117249000000000e-01, Field1: 5.5589871999999996e-01, Field2: 5.5245948000000000e-01}, {Field0: 1.2993270000000001e-01, Field1: 5.5958162000000000e-01, Field2: 5.5186354000000004e-01}, {Field0: 1.2872938000000000e-01, Field1: 5.6326503000000006e-01, Field2: 5.5122926999999999e-01}, {Field0: 1.2756771000000000e-01, Field1: 5.6694891000000003e-01, Field2: 5.5055551000000003e-01}, {Field0: 1.2645338000000000e-01, Field1: 5.7063315999999997e-01, Field2: 5.4984109999999997e-01}, {Field0: 1.2539383000000001e-01, Field1: 5.7431754000000002e-01, Field2: 5.4908564000000004e-01}, {Field0: 1.2439474000000000e-01, Field1: 5.7800205000000004e-01, Field2: 5.4828739999999998e-01}, {Field0: 1.2346281000000001e-01, Field1: 5.8168660999999999e-01, Field2: 5.4744497999999997e-01}, {Field0: 1.2260562000000000e-01, Field1: 5.8537105000000000e-01, Field2: 5.4655721999999995e-01}, {Field0: 1.2183122000000000e-01, Field1: 5.8905521000000005e-01, Field2: 5.4562297999999998e-01}, {Field0: 1.2114807000000000e-01, Field1: 5.9273889000000002e-01, Field2: 5.4464113999999997e-01}, {Field0: 1.2056501000000000e-01, Field1: 5.9642187000000002e-01, Field2: 5.4361057999999995e-01}, {Field0: 1.2009154000000000e-01, Field1: 6.0010386999999998e-01, Field2: 5.4253043000000001e-01}, {Field0: 1.1973756000000001e-01, Field1: 6.0378458999999995e-01, Field2: 5.4139999000000005e-01}, {Field0: 1.1951162999999999e-01, Field1: 6.0746387999999996e-01, Field2: 5.4021750999999996e-01}, {Field0: 1.1942340999999999e-01, Field1: 6.1114146000000003e-01, Field2: 5.3898192000000000e-01}, {Field0: 1.1948255000000001e-01, Field1: 6.1481702000000005e-01, Field2: 5.3769219000000001e-01}, {Field0: 1.1969858000000000e-01, Field1: 6.1849025000000002e-01, Field2: 5.3634733000000001e-01}, {Field0: 1.2008079000000001e-01, Field1: 6.2216081000000001e-01, Field2: 5.3494633000000003e-01}, {Field0: 1.2063823999999999e-01, Field1: 6.2582833000000004e-01, Field2: 5.3348834000000001e-01}, {Field0: 1.2137972000000000e-01, Field1: 6.2949242000000005e-01, Field2: 5.3197274999999999e-01}, {Field0: 1.2231243999999999e-01, Field1: 6.3315277000000003e-01, Field2: 5.3039807999999999e-01}, {Field0: 1.2344358000000000e-01, Field1: 6.3680899000000002e-01, Field2: 5.2876343000000003e-01}, {Field0: 1.2477953000000000e-01, Field1: 6.4046069000000005e-01, Field2: 5.2706792000000002e-01}, {Field0: 1.2632581000000001e-01, Field1: 6.4410743999999998e-01, Field2: 5.2531068999999997e-01}, {Field0: 1.2808702999999999e-01, Field1: 6.4774880999999995e-01, Field2: 5.2349091999999997e-01}, {Field0: 1.3006688000000000e-01, Field1: 6.5138436000000000e-01, Field2: 5.2160790999999995e-01}, {Field0: 1.3226797000000001e-01, Field1: 6.5501363000000001e-01, Field2: 5.1966086000000000e-01}, {Field0: 1.3469183000000001e-01, Field1: 6.5863618999999995e-01, Field2: 5.1764880000000002e-01}, {Field0: 1.3733920999999999e-01, Field1: 6.6225157000000001e-01, Field2: 5.1557101000000005e-01}, {Field0: 1.4020990999999999e-01, Field1: 6.6585927000000000e-01, Field2: 5.1342679999999996e-01}, {Field0: 1.4330291000000001e-01, Field1: 6.6945880999999996e-01, Field2: 5.1121548999999999e-01}, {Field0: 1.4661640000000001e-01, Field1: 6.7304967999999998e-01, Field2: 5.0893644000000005e-01}, {Field0: 1.5014781999999999e-01, Field1: 6.7663139000000005e-01, Field2: 5.0658890000000001e-01}, {Field0: 1.5389405000000000e-01, Field1: 6.8020343000000005e-01, Field2: 5.0417217000000003e-01}, {Field0: 1.5785146000000000e-01, Field1: 6.8376524999999999e-01, Field2: 5.0168573999999999e-01}, {Field0: 1.6201598000000000e-01, Field1: 6.8731631999999998e-01, Field2: 4.9912906000000001e-01}, {Field0: 1.6638320000000001e-01, Field1: 6.9085611000000002e-01, Field2: 4.9650163000000003e-01}, {Field0: 1.7094840000000000e-01, Field1: 6.9438405000000003e-01, Field2: 4.9380294000000002e-01}, {Field0: 1.7570670999999999e-01, Field1: 6.9789959999999995e-01, Field2: 4.9103251999999997e-01}, {Field0: 1.8065313999999999e-01, Field1: 7.0140221999999997e-01, Field2: 4.8818938000000001e-01}, {Field0: 1.8578265999999999e-01, Field1: 7.0489133000000004e-01, Field2: 4.8527325999999998e-01}, {Field0: 1.9109018000000000e-01, Field1: 7.0836635000000003e-01, Field2: 4.8228395000000002e-01}, {Field0: 1.9657063000000000e-01, Field1: 7.1182668000000004e-01, Field2: 4.7922108000000002e-01}, {Field0: 2.0221902000000000e-01, Field1: 7.1527174999999998e-01, Field2: 4.7608431000000001e-01}, {Field0: 2.0803045000000001e-01, Field1: 7.1870095000000001e-01, Field2: 4.7287330000000000e-01}, {Field0: 2.1400015000000000e-01, Field1: 7.2211371000000002e-01, Field2: 4.6958773999999998e-01}, {Field0: 2.2012381000000000e-01, Field1: 7.2550945000000000e-01, Field2: 4.6622638000000000e-01}, {Field0: 2.2639690000000001e-01, Field1: 7.2888752999999995e-01, Field2: 4.6278933999999999e-01}, {Field0: 2.3281498000000000e-01, Field1: 7.3224734999999996e-01, Field2: 4.5927675000000001e-01}, {Field0: 2.3937390000000000e-01, Field1: 7.3558827999999998e-01, Field2: 4.5568838000000000e-01}, {Field0: 2.4606968000000001e-01, Field1: 7.3890971999999999e-01, Field2: 4.5202405000000001e-01}, {Field0: 2.5289851000000002e-01, Field1: 7.4221104000000004e-01, Field2: 4.4828354999999998e-01}, {Field0: 2.5985676000000002e-01, Field1: 7.4549162000000002e-01, Field2: 4.4446672999999998e-01}, {Field0: 2.6694127000000001e-01, Field1: 7.4875084000000003e-01, Field2: 4.4057284000000002e-01}, {Field0: 2.7414922000000003e-01, Field1: 7.5198807000000001e-01, Field2: 4.3660090000000001e-01}, {Field0: 2.8147681000000002e-01, Field1: 7.5520266000000003e-01, Field2: 4.3255207000000001e-01}, {Field0: 2.8892101999999997e-01, Field1: 7.5839398999999996e-01, Field2: 4.2842626000000000e-01}, {Field0: 2.9647899000000000e-01, Field1: 7.6156142000000004e-01, Field2: 4.2422341000000002e-01}, {Field0: 3.0414795999999999e-01, Field1: 7.6470433000000004e-01, Field2: 4.1994345999999999e-01}, {Field0: 3.1192534000000000e-01, Field1: 7.6782207000000002e-01, Field2: 4.1558637999999998e-01}, {Field0: 3.1980860000000000e-01, Field1: 7.7091403000000003e-01, Field2: 4.1115214999999999e-01}, {Field0: 3.2779580000000003e-01, Field1: 7.7397952999999997e-01, Field2: 4.0664011000000000e-01}, {Field0: 3.3588539000000001e-01, Field1: 7.7701790000000004e-01, Field2: 4.0204917000000001e-01}, {Field0: 3.4407410999999999e-01, Field1: 7.8002855000000004e-01, Field2: 3.9738103000000002e-01}, {Field0: 3.5235984999999997e-01, Field1: 7.8301085999999998e-01, Field2: 3.9263578999999998e-01}, {Field0: 3.6074053000000000e-01, Field1: 7.8596418999999995e-01, Field2: 3.8781353000000002e-01}, {Field0: 3.6921419999999999e-01, Field1: 7.8888793000000001e-01, Field2: 3.8291438000000000e-01}, {Field0: 3.7777892000000002e-01, Field1: 7.9178146000000005e-01, Field2: 3.7793850000000001e-01}, {Field0: 3.8643282000000001e-01, Field1: 7.9464414999999999e-01, Field2: 3.7288606000000002e-01}, {Field0: 3.9517407999999998e-01, Field1: 7.9747541000000000e-01, Field2: 3.6775725999999997e-01}, {Field0: 4.0400100999999999e-01, Field1: 8.0027461000000000e-01, Field2: 3.6255222999999998e-01}, {Field0: 4.1291349999999999e-01, Field1: 8.0304098999999995e-01, Field2: 3.5726892999999998e-01}, {Field0: 4.2190812999999999e-01, Field1: 8.0577412000000004e-01, Field2: 3.5191009000000001e-01}, {Field0: 4.3098317000000003e-01, Field1: 8.0847343000000005e-01, Field2: 3.4647607000000002e-01}, {Field0: 4.4013690999999999e-01, Field1: 8.1113835999999995e-01, Field2: 3.4096729999999997e-01}, {Field0: 4.4936763000000002e-01, Field1: 8.1376835000000003e-01, Field2: 3.3538425999999999e-01}, {Field0: 4.5867362000000000e-01, Field1: 8.1636288000000001e-01, Field2: 3.2972749000000001e-01}, {Field0: 4.6805313999999998e-01, Field1: 8.1892142999999995e-01, Field2: 3.2399760999999999e-01}, {Field0: 4.7750446000000002e-01, Field1: 8.2144351000000004e-01, Field2: 3.1819529000000002e-01}, {Field0: 4.8702580000000001e-01, Field1: 8.2392862000000000e-01, Field2: 3.1232133000000001e-01}, {Field0: 4.9661536000000001e-01, Field1: 8.2637632999999999e-01, Field2: 3.0637660999999999e-01}, {Field0: 5.0627129999999998e-01, Field1: 8.2878620999999997e-01, Field2: 3.0036211000000002e-01}, {Field0: 5.1599181999999999e-01, Field1: 8.3115784000000004e-01, Field2: 2.9427888000000002e-01}, {Field0: 5.2577622000000002e-01, Field1: 8.3349063999999995e-01, Field2: 2.8812650000000001e-01}, {Field0: 5.3562109999999996e-01, Field1: 8.3578452000000003e-01, Field2: 2.8190831999999999e-01}, {Field0: 5.4552440000000002e-01, Field1: 8.3803917999999999e-01, Field2: 2.7562602000000003e-01}, {Field0: 5.5548397000000005e-01, Field1: 8.4025437000000003e-01, Field2: 2.6928147000000002e-01}, {Field0: 5.6549760000000004e-01, Field1: 8.4242989999999995e-01, Field2: 2.6287683000000001e-01}, {Field0: 5.7556297000000001e-01, Field1: 8.4456560999999997e-01, Field2: 2.5641457000000001e-01}, {Field0: 5.8567771999999996e-01, Field1: 8.4666138999999996e-01, Field2: 2.4989748000000001e-01}, {Field0: 5.9583934000000005e-01, Field1: 8.4871722000000005e-01, Field2: 2.4332877999999999e-01}, {Field0: 6.0604528000000002e-01, Field1: 8.5073310000000002e-01, Field2: 2.3671213999999999e-01}, {Field0: 6.1629283000000001e-01, Field1: 8.5270911999999999e-01, Field2: 2.3005179000000001e-01}, {Field0: 6.2657923000000004e-01, Field1: 8.5464543000000004e-01, Field2: 2.2335258000000000e-01}, {Field0: 6.3690157000000003e-01, Field1: 8.5654226000000000e-01, Field2: 2.1662012000000000e-01}, {Field0: 6.4725684999999999e-01, Field1: 8.5839991000000004e-01, Field2: 2.0986086000000001e-01}, {Field0: 6.5764197000000002e-01, Field1: 8.6021877999999996e-01, Field2: 2.0308229000000000e-01}, {Field0: 6.6805369000000003e-01, Field1: 8.6199932000000001e-01, Field2: 1.9629306999999999e-01}, {Field0: 6.7848867999999996e-01, Field1: 8.6374211000000001e-01, Field2: 1.8950326000000001e-01}, {Field0: 6.8894350999999998e-01, Field1: 8.6544779000000005e-01, Field2: 1.8272455000000001e-01}, {Field0: 6.9941463000000004e-01, Field1: 8.6711711000000002e-01, Field2: 1.7597055000000000e-01}, {Field0: 7.0989842000000003e-01, Field1: 8.6875091999999998e-01, Field2: 1.6925712000000001e-01}, {Field0: 7.2039114999999998e-01, Field1: 8.7035015000000004e-01, Field2: 1.6260273000000000e-01}, {Field0: 7.3088902000000000e-01, Field1: 8.7191584000000000e-01, Field2: 1.5602894000000000e-01}, {Field0: 7.4138802999999998e-01, Field1: 8.7344918000000005e-01, Field2: 1.4956100999999999e-01}, {Field0: 7.5188414000000003e-01, Field1: 8.7495142999999997e-01, Field2: 1.4322828000000001e-01}, {Field0: 7.6237341999999997e-01, Field1: 8.7642392000000002e-01, Field2: 1.3706449000000001e-01}, {Field0: 7.7285183000000002e-01, Field1: 8.7786808000000005e-01, Field2: 1.3110864000000000e-01}, {Field0: 7.8331534999999997e-01, Field1: 8.7928545000000002e-01, Field2: 1.2540538000000001e-01}, {Field0: 7.9375994000000005e-01, Field1: 8.8067762999999999e-01, Field2: 1.2000532000000000e-01}, {Field0: 8.0418159000000000e-01, Field1: 8.8204632000000005e-01, Field2: 1.1496505000000000e-01}, {Field0: 8.1457634000000001e-01, Field1: 8.8339329000000000e-01, Field2: 1.1034678000000001e-01}, {Field0: 8.2494027999999997e-01, Field1: 8.8472035999999998e-01, Field2: 1.0621724000000000e-01}, {Field0: 8.3526959000000001e-01, Field1: 8.8602943000000001e-01, Field2: 1.0264590000000000e-01}, {Field0: 8.4556056000000002e-01, Field1: 8.8732243000000000e-01, Field2: 9.9702189999999996e-02}, {Field0: 8.5580959999999995e-01, Field1: 8.8860134000000002e-01, Field2: 9.7451860000000001e-02}, {Field0: 8.6601324999999996e-01, Field1: 8.8986814999999997e-01, Field2: 9.5952770000000007e-02}, {Field0: 8.7616824000000004e-01, Field1: 8.9112486999999996e-01, Field2: 9.5250459999999995e-02}, {Field0: 8.8627146000000001e-01, Field1: 8.9237352999999997e-01, Field2: 9.5374390000000003e-02}, {Field0: 8.9632002000000000e-01, Field1: 8.9361614000000000e-01, Field2: 9.6335379999999998e-02}, {Field0: 9.0631121000000003e-01, Field1: 8.9485466999999996e-01, Field2: 9.8124959999999997e-02}, {Field0: 9.1624212000000005e-01, Field1: 8.9609127000000000e-01, Field2: 1.0071680000000000e-01}, {Field0: 9.2610579000000004e-01, Field1: 8.9732977000000003e-01, Field2: 1.0407067000000000e-01}, {Field0: 9.3590443999999995e-01, Field1: 8.9857039999999999e-01, Field2: 1.0813093999999999e-01}, {Field0: 9.4563626000000001e-01, Field1: 8.9981500000000003e-01, Field2: 1.1283773000000000e-01}, {Field0: 9.5529971999999996e-01, Field1: 9.0106534000000005e-01, Field2: 1.1812831999999999e-01}, {Field0: 9.6489353000000000e-01, Field1: 9.0232310999999998e-01, Field2: 1.2394051000000000e-01}, {Field0: 9.7441665000000000e-01, Field1: 9.0358991000000000e-01, Field2: 1.3021494000000000e-01}, {Field0: 9.8386828999999998e-01, Field1: 9.0486725999999995e-01, Field2: 1.3689671000000000e-01}, {Field0: 9.9324789000000002e-01, Field1: 9.0615657000000005e-01, Field2: 1.4393259999999999e-01}];
var utc_instance_13460231 = [null];
var local_instance_13460232 = [null];
var idmatrix_13987093 = matrix3d_13987061(1.0000000000000000e+00, 0.0, 0.0, 0.0, 0.0, 1.0000000000000000e+00, 0.0, 0.0, 0.0, 0.0, 1.0000000000000000e+00, 0.0, 0.0, 0.0, 0.0, 1.0000000000000000e+00);
var origo_13987094 = point3d_13987084(0.0, 0.0, 0.0);
var xaxis_13987095 = vector3d_13987079(1.0000000000000000e+00, 0.0, 0.0);
var yaxis_13987096 = vector3d_13987079(0.0, 1.0000000000000000e+00, 0.0);
var zaxis_13987097 = vector3d_13987079(0.0, 0.0, 1.0000000000000000e+00);
function vector3d_13987079(x_13987081, y_13987082, z_13987083) {
  var result_14010186 = ({x: 0.0, y: 0.0, z: 0.0});

  var F={procname:"basic3d.vector3d",prev:framePtr,filename:"basic3d.nim",line:0};
  framePtr = F;
    F.line = 541;
    result_14010186.x = x_13987081;
    F.line = 542;
    result_14010186.y = y_13987082;
    F.line = 543;
    result_14010186.z = z_13987083;
  framePtr = F.prev;

  return result_14010186;

}
var a_14062014 = 1.0000000000000000e+01;
var b_14062015 = 2.8000000000000000e+01;
var c_14062016 = 2.6666666666666665e+00;
var min_distance_14062017 = 5.0000000000000000e-01;
var current_14062018 = [vector3d_13987079(1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00)];
var next_14062019 = [vector3d_13987079(0.0, 0.0, 0.0)];
var last_14062020 = [vector3d_13987079(0.0, 0.0, 0.0)];
var time_coefficient_14062021 = [5.0000000000000001e-03];
function len_11605128(t_11605133) {
  var result_11605134 = 0;

  var F={procname:"len.len",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 1471;
    result_11605134 = t_11605133.counter;
  framePtr = F.prev;

  return result_11605134;

}
function nsuToHex(x_10215243, len_10215244) {
  var result_10215245 = null;

  var F={procname:"strutils.toHex",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 936;
    var n_10215247 = x_10215243;
    F.line = 937;
    result_10215245 = nimCopy(null, mnewString(len_10215244), NTI1163014);
    L1: do {
      F.line = 938;
      var j_10215254 = 0;
      F.line = 6;
      var colontmp__14075587 = 0;
      F.line = 938;
      colontmp__14075587 = subInt(len_10215244, 1);
      F.line = 28;
      var res_14075588 = colontmp__14075587;
      L2: do {
        F.line = 29;
          L3: while (true) {
          if (!(0 <= res_14075588)) break L3;
            F.line = 938;
            j_10215254 = res_14075588;
            F.line = 939;
            result_10215245[chckIndx(j_10215254, 0, (result_10215245 != null ? result_10215245.length : 0)+0-1)-0] = makeNimstrLit("0123456789ABCDEF")[chckIndx((n_10215247 & 15), 0, (makeNimstrLit("0123456789ABCDEF") != null ? makeNimstrLit("0123456789ABCDEF").length : 0)+0-1)-0];
            F.line = 940;
            n_10215247 = (n_10215247 >> 4);
            if (((n_10215247 == 0) && (x_10215243 < 0))) {
            F.line = 942;
            n_10215247 = -1;
            }
            
            F.line = 31;
            res_14075588 = subInt(res_14075588, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_10215245;

}
function escape_json_unquoted_11771679(s_11771681, result_11771683, result_11771683_Idx) {
  var F={procname:"json.escapeJsonUnquoted",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    L1: do {
      F.line = 585;
      var c_11771685 = 0;
      F.line = 202;
      var i_14075583 = 0;
      F.line = 203;
      var l_14075584 = (s_11771681 != null ? s_11771681.length : 0);
      L2: do {
        F.line = 204;
          L3: while (true) {
          if (!(i_14075583 < l_14075584)) break L3;
            F.line = 585;
            c_11771685 = s_11771681[chckIndx(i_14075583, 0, (s_11771681 != null ? s_11771681.length : 0)+0-1)-0];
            F.line = 586;
            switch (c_11771685) {
            case 10:
              F.line = 587;
              if (result_11771683[result_11771683_Idx] != null) { result_11771683[result_11771683_Idx] = (result_11771683[result_11771683_Idx]).concat(makeNimstrLit("\\n")); } else { result_11771683[result_11771683_Idx] = makeNimstrLit("\\n"); };
              break;
            case 8:
              F.line = 588;
              if (result_11771683[result_11771683_Idx] != null) { result_11771683[result_11771683_Idx] = (result_11771683[result_11771683_Idx]).concat(makeNimstrLit("\\b")); } else { result_11771683[result_11771683_Idx] = makeNimstrLit("\\b"); };
              break;
            case 12:
              F.line = 589;
              if (result_11771683[result_11771683_Idx] != null) { result_11771683[result_11771683_Idx] = (result_11771683[result_11771683_Idx]).concat(makeNimstrLit("\\f")); } else { result_11771683[result_11771683_Idx] = makeNimstrLit("\\f"); };
              break;
            case 9:
              F.line = 590;
              if (result_11771683[result_11771683_Idx] != null) { result_11771683[result_11771683_Idx] = (result_11771683[result_11771683_Idx]).concat(makeNimstrLit("\\t")); } else { result_11771683[result_11771683_Idx] = makeNimstrLit("\\t"); };
              break;
            case 11:
              F.line = 591;
              if (result_11771683[result_11771683_Idx] != null) { result_11771683[result_11771683_Idx] = (result_11771683[result_11771683_Idx]).concat(makeNimstrLit("\\u000b")); } else { result_11771683[result_11771683_Idx] = makeNimstrLit("\\u000b"); };
              break;
            case 13:
              F.line = 592;
              if (result_11771683[result_11771683_Idx] != null) { result_11771683[result_11771683_Idx] = (result_11771683[result_11771683_Idx]).concat(makeNimstrLit("\\r")); } else { result_11771683[result_11771683_Idx] = makeNimstrLit("\\r"); };
              break;
            case 34:
              F.line = 593;
              if (result_11771683[result_11771683_Idx] != null) { result_11771683[result_11771683_Idx] = (result_11771683[result_11771683_Idx]).concat(makeNimstrLit("\\\"")); } else { result_11771683[result_11771683_Idx] = makeNimstrLit("\\\""); };
              break;
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
              F.line = 594;
              if (result_11771683[result_11771683_Idx] != null) { result_11771683[result_11771683_Idx] = (result_11771683[result_11771683_Idx]).concat((makeNimstrLit("\\u000") || []).concat(cstrToNimstr((c_11771685)+"") || [])); } else { result_11771683[result_11771683_Idx] = (makeNimstrLit("\\u000") || []).concat(cstrToNimstr((c_11771685)+"") || []).slice(); };
              break;
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              F.line = 595;
              if (result_11771683[result_11771683_Idx] != null) { result_11771683[result_11771683_Idx] = (result_11771683[result_11771683_Idx]).concat((makeNimstrLit("\\u00") || []).concat(nsuToHex(c_11771685, 2) || [])); } else { result_11771683[result_11771683_Idx] = (makeNimstrLit("\\u00") || []).concat(nsuToHex(c_11771685, 2) || []).slice(); };
              break;
            case 92:
              F.line = 596;
              if (result_11771683[result_11771683_Idx] != null) { result_11771683[result_11771683_Idx] = (result_11771683[result_11771683_Idx]).concat(makeNimstrLit("\\\\")); } else { result_11771683[result_11771683_Idx] = makeNimstrLit("\\\\"); };
              break;
            default: 
              F.line = 597;
              if (result_11771683[result_11771683_Idx] != null) { addChar(result_11771683[result_11771683_Idx], c_11771685); } else { result_11771683[result_11771683_Idx] = [c_11771685]; };
              break;
            }
            F.line = 206;
            i_14075583 = addInt(i_14075583, 1);
            if (!(((s_11771681 != null ? s_11771681.length : 0) == l_14075584))) {
            F.line = 207;
            failed_assert_impl_1267680(makeNimstrLit("/usr/lib/nim/system/iterators.nim(207, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function escape_json_11771732(s_11771734, result_11771736, result_11771736_Idx) {
  var F={procname:"json.escapeJson",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 607;
    if (result_11771736[result_11771736_Idx] != null) { result_11771736[result_11771736_Idx] = (result_11771736[result_11771736_Idx]).concat(makeNimstrLit("\"")); } else { result_11771736[result_11771736_Idx] = makeNimstrLit("\""); };
    F.line = 608;
    escape_json_unquoted_11771679(s_11771734, result_11771736, result_11771736_Idx);
    F.line = 609;
    if (result_11771736[result_11771736_Idx] != null) { result_11771736[result_11771736_Idx] = (result_11771736[result_11771736_Idx]).concat(makeNimstrLit("\"")); } else { result_11771736[result_11771736_Idx] = makeNimstrLit("\""); };
  framePtr = F.prev;

  
}
function to_ugly_11790035(result_11790038, result_11790038_Idx, node_11790039) {
        var Tmp2;
        var Tmp6;
      var Tmp9;
      var Tmp10;
      var Tmp11;
      var Tmp12;
        var Tmp13;

  var F={procname:"json.toUgly",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 706;
    var comma_11790040 = false;
    F.line = 707;
    switch (node_11790039.kind) {
    case 6:
      F.line = 709;
      if (result_11790038[result_11790038_Idx] != null) { result_11790038[result_11790038_Idx] = (result_11790038[result_11790038_Idx]).concat(makeNimstrLit("[")); } else { result_11790038[result_11790038_Idx] = makeNimstrLit("["); };
      L1: do {
        F.line = 710;
        var child_11790048 = null;
        F.line = 182;
        var colontmp__14075569 = null;
        F.line = 710;
        var Tmp2 = node_11790039;
        if (ConstSet2[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
        colontmp__14075569 = Tmp2.elems;
        F.line = 184;
        var i_14075571 = 0;
        F.line = 185;
        var l_14075572 = (colontmp__14075569 != null ? colontmp__14075569.length : 0);
        L3: do {
          F.line = 186;
            L4: while (true) {
            if (!(i_14075571 < l_14075572)) break L4;
              F.line = 710;
              child_11790048 = colontmp__14075569[chckIndx(i_14075571, 0, (colontmp__14075569 != null ? colontmp__14075569.length : 0)+0-1)-0];
              if (comma_11790040) {
              F.line = 711;
              if (result_11790038[result_11790038_Idx] != null) { result_11790038[result_11790038_Idx] = (result_11790038[result_11790038_Idx]).concat(makeNimstrLit(",")); } else { result_11790038[result_11790038_Idx] = makeNimstrLit(","); };
              }
              else {
                F.line = 712;
                comma_11790040 = true;
              }
              
              F.line = 713;
              to_ugly_11790035(result_11790038, result_11790038_Idx, child_11790048);
              F.line = 188;
              i_14075571 = addInt(i_14075571, 1);
              if (!(((colontmp__14075569 != null ? colontmp__14075569.length : 0) == l_14075572))) {
              F.line = 189;
              failed_assert_impl_1267680(makeNimstrLit("/usr/lib/nim/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while(false);
      } while(false);
      F.line = 714;
      if (result_11790038[result_11790038_Idx] != null) { result_11790038[result_11790038_Idx] = (result_11790038[result_11790038_Idx]).concat(makeNimstrLit("]")); } else { result_11790038[result_11790038_Idx] = makeNimstrLit("]"); };
      break;
    case 5:
      F.line = 716;
      if (result_11790038[result_11790038_Idx] != null) { result_11790038[result_11790038_Idx] = (result_11790038[result_11790038_Idx]).concat(makeNimstrLit("{")); } else { result_11790038[result_11790038_Idx] = makeNimstrLit("{"); };
      L5: do {
        F.line = 717;
        var key_11790057 = null;
        F.line = 717;
        var value_11790058 = null;
        F.line = 1650;
        var colontmp__14075575 = ({data: null, counter: 0, first: 0, last: 0});
        F.line = 717;
        var Tmp6 = node_11790039;
        if (ConstSet3[Tmp6.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
        nimCopy(colontmp__14075575, Tmp6.fields, NTI11426067);
        F.line = 1676;
        var l_14075577 = len_11605128(colontmp__14075575);
        if ((0 < colontmp__14075575.counter)) {
        F.line = 1255;
        var h_14075578 = colontmp__14075575.first;
        L7: do {
          F.line = 1256;
            L8: while (true) {
            if (!(0 <= h_14075578)) break L8;
              F.line = 1257;
              var nxt_14075580 = colontmp__14075575.data[chckIndx(h_14075578, 0, (colontmp__14075575.data != null ? colontmp__14075575.data.length : 0)+0-1)-0].Field1;
              if (is_filled_10902018(colontmp__14075575.data[chckIndx(h_14075578, 0, (colontmp__14075575.data != null ? colontmp__14075575.data.length : 0)+0-1)-0].Field0)) {
              F.line = 717;
              key_11790057 = colontmp__14075575.data[chckIndx(h_14075578, 0, (colontmp__14075575.data != null ? colontmp__14075575.data.length : 0)+0-1)-0].Field2;
              F.line = 1678;
              value_11790058 = colontmp__14075575.data[chckIndx(h_14075578, 0, (colontmp__14075575.data != null ? colontmp__14075575.data.length : 0)+0-1)-0].Field3;
              if (comma_11790040) {
              F.line = 718;
              if (result_11790038[result_11790038_Idx] != null) { result_11790038[result_11790038_Idx] = (result_11790038[result_11790038_Idx]).concat(makeNimstrLit(",")); } else { result_11790038[result_11790038_Idx] = makeNimstrLit(","); };
              }
              else {
                F.line = 719;
                comma_11790040 = true;
              }
              
              F.line = 720;
              escape_json_11771732(key_11790057, result_11790038, result_11790038_Idx);
              F.line = 721;
              if (result_11790038[result_11790038_Idx] != null) { result_11790038[result_11790038_Idx] = (result_11790038[result_11790038_Idx]).concat(makeNimstrLit(":")); } else { result_11790038[result_11790038_Idx] = makeNimstrLit(":"); };
              F.line = 722;
              to_ugly_11790035(result_11790038, result_11790038_Idx, value_11790058);
              if (!((len_11605128(colontmp__14075575) == l_14075577))) {
              F.line = 1679;
              failed_assert_impl_1267680(makeNimstrLit("/usr/lib/nim/pure/collections/tables.nim(1679, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 1260;
              h_14075578 = nxt_14075580;
            }
        } while(false);
        }
        
      } while(false);
      F.line = 723;
      if (result_11790038[result_11790038_Idx] != null) { result_11790038[result_11790038_Idx] = (result_11790038[result_11790038_Idx]).concat(makeNimstrLit("}")); } else { result_11790038[result_11790038_Idx] = makeNimstrLit("}"); };
      break;
    case 4:
      F.line = 725;
      var Tmp9 = node_11790039;
      if (ConstSet4[Tmp9.kind]===undefined) { raiseFieldError(makeNimstrLit("\'str\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
      escape_json_11771732(Tmp9.str, result_11790038, result_11790038_Idx);
      break;
    case 2:
      F.line = 727;
      var Tmp10 = node_11790039;
      if (ConstSet5[Tmp10.kind]===undefined) { raiseFieldError(makeNimstrLit("\'num\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
      if (result_11790038[result_11790038_Idx] != null) { result_11790038[result_11790038_Idx] = (result_11790038[result_11790038_Idx]).concat(cstrToNimstr((Tmp10.num)+"")); } else { result_11790038[result_11790038_Idx] = cstrToNimstr((Tmp10.num)+"").slice(); };
      break;
    case 3:
      F.line = 730;
      var Tmp11 = node_11790039;
      if (ConstSet6[Tmp11.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fnum\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
      if (result_11790038[result_11790038_Idx] != null) { result_11790038[result_11790038_Idx] = (result_11790038[result_11790038_Idx]).concat(cstrToNimstr((Tmp11.fnum)+"")); } else { result_11790038[result_11790038_Idx] = cstrToNimstr((Tmp11.fnum)+"").slice(); };
      break;
    case 1:
      F.line = 733;
        var Tmp13 = node_11790039;
        if (ConstSet7[Tmp13.kind]===undefined) { raiseFieldError(makeNimstrLit("\'bval\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
      if (Tmp13.bval) {
      Tmp12 = makeNimstrLit("true");
      }
      else {
      Tmp12 = makeNimstrLit("false");
      }
      
      if (result_11790038[result_11790038_Idx] != null) { result_11790038[result_11790038_Idx] = (result_11790038[result_11790038_Idx]).concat(Tmp12); } else { result_11790038[result_11790038_Idx] = Tmp12.slice(); };
      break;
    case 0:
      F.line = 735;
      if (result_11790038[result_11790038_Idx] != null) { result_11790038[result_11790038_Idx] = (result_11790038[result_11790038_Idx]).concat(makeNimstrLit("null")); } else { result_11790038[result_11790038_Idx] = makeNimstrLit("null"); };
      break;
    }
  framePtr = F.prev;

  
}
function new_jarray_11445657() {
  var result_11445659 = null;

  var F={procname:"json.newJArray",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 214;
    result_11445659 = {kind: 6, elems: [], str: null, num: 0, fnum: 0.0, bval: false, fields: ({data: null, counter: 0, first: 0, last: 0})};
  framePtr = F.prev;

  return result_11445659;

}
function add_11475020(father_11475022, child_11475023) {
    var Tmp1;
    var Tmp2;

  var F={procname:"json.add",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if (!((father_11475022.kind == 6))) {
    F.line = 272;
    failed_assert_impl_1267680(makeNimstrLit("/usr/lib/nim/pure/json.nim(272, 10) `father.kind == JArray` "));
    }
    
    F.line = 273;
    var Tmp1 = father_11475022;
    if (ConstSet8[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    if ((Tmp2 = Tmp1.elems, Tmp2) != null) { Tmp2.push(child_11475023); } else { Tmp2 = [child_11475023]; };
  framePtr = F.prev;

  
}
function init_ordered_table_11426240(initial_size_11426244) {
  var result_11426246 = ({data: null, counter: 0, first: 0, last: 0});

  var F={procname:"initOrderedTable.initOrderedTable",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (!(is_power_of_two_2245029(initial_size_11426244))) {
    F.line = 166;
    failed_assert_impl_1267680(makeNimstrLit("/usr/lib/nim/pure/collections/tableimpl.nim(166, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    F.line = 167;
    result_11426246.counter = 0;
    F.line = 168;
    result_11426246.data = new Array(chckRange(initial_size_11426244, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_11426244, 0, 2147483647);++i) {result_11426246.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    F.line = 170;
    result_11426246.first = -1;
    F.line = 171;
    result_11426246.last = -1;
  framePtr = F.prev;

  return result_11426246;

}
function raw_get_11520621(t_11520626, key_11520627, hc_11520628, hc_11520628_Idx) {
            var Tmp3;

  var result_11520629 = 0;

  var F={procname:"rawGet.rawGet",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 63;
    hc_11520628[hc_11520628_Idx] = hash_10880214(key_11520627);
    if ((hc_11520628[hc_11520628_Idx] == 0)) {
    F.line = 65;
    hc_11520628[hc_11520628_Idx] = 314159265;
    }
    
    if (((t_11520626.data != null ? t_11520626.data.length : 0) == 0)) {
    F.line = 47;
    result_11520629 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_11530138 = (hc_11520628[hc_11520628_Idx] & (t_11520626.data != null ? (t_11520626.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_10902018(t_11520626.data[chckIndx(h_11530138, 0, (t_11520626.data != null ? t_11520626.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_11520626.data[chckIndx(h_11530138, 0, (t_11520626.data != null ? t_11520626.data.length : 0)+0-1)-0].Field0 == hc_11520628[hc_11520628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_11520626.data[chckIndx(h_11530138, 0, (t_11520626.data != null ? t_11520626.data.length : 0)+0-1)-0].Field2, key_11520627);            }          if (Tmp3) {
          F.line = 55;
          result_11520629 = h_11530138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_11530138 = next_try_10905014(h_11530138, (t_11520626.data != null ? (t_11520626.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_11520629 = subInt(-1, h_11530138);
  } while (false);
  framePtr = F.prev;

  return result_11520629;

}
function must_rehash_11555601(t_11555604) {
  var result_11555605 = false;

  var F={procname:"mustRehash.mustRehash",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    if (!((t_11555604.counter < (t_11555604.data != null ? t_11555604.data.length : 0)))) {
    F.line = 33;
    failed_assert_impl_1267680(makeNimstrLit("/usr/lib/nim/pure/collections/hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 34;
    result_11555605 = ((mulInt((t_11555604.data != null ? t_11555604.data.length : 0), 2) < mulInt(t_11555604.counter, 3)) || (subInt((t_11555604.data != null ? t_11555604.data.length : 0), t_11555604.counter) < 4));
  framePtr = F.prev;

  return result_11555605;

}
function raw_insert_11581349(t_11581355, data_11581358, data_11581358_Idx, key_11581359, val_11581360, hc_11581361, h_11581362) {
  var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 22;
    data_11581358[data_11581358_Idx][chckIndx(h_11581362, 0, (data_11581358[data_11581358_Idx] != null ? data_11581358[data_11581358_Idx].length : 0)+0-1)-0].Field2 = nimCopy(null, key_11581359, NTI1163014);
    F.line = 23;
    data_11581358[data_11581358_Idx][chckIndx(h_11581362, 0, (data_11581358[data_11581358_Idx] != null ? data_11581358[data_11581358_Idx].length : 0)+0-1)-0].Field3 = val_11581360;
    F.line = 24;
    data_11581358[data_11581358_Idx][chckIndx(h_11581362, 0, (data_11581358[data_11581358_Idx] != null ? data_11581358[data_11581358_Idx].length : 0)+0-1)-0].Field0 = hc_11581361;
    F.line = 1231;
    data_11581358[data_11581358_Idx][chckIndx(h_11581362, 0, (data_11581358[data_11581358_Idx] != null ? data_11581358[data_11581358_Idx].length : 0)+0-1)-0].Field1 = -1;
    if ((t_11581355.first < 0)) {
    F.line = 1232;
    t_11581355.first = h_11581362;
    }
    
    if ((0 <= t_11581355.last)) {
    F.line = 1233;
    data_11581358[data_11581358_Idx][chckIndx(t_11581355.last, 0, (data_11581358[data_11581358_Idx] != null ? data_11581358[data_11581358_Idx].length : 0)+0-1)-0].Field1 = h_11581362;
    }
    
    F.line = 1234;
    t_11581355.last = h_11581362;
  framePtr = F.prev;

  
}
function enlarge_11580180(t_11580186) {
          var Tmp6;
          var Tmp7;

  var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 1237;
    var n_11580194 = null;
    F.line = 1238;
    n_11580194 = new Array(chckRange(mulInt((t_11580186.data != null ? t_11580186.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_11580186.data != null ? t_11580186.data.length : 0), 2), 0, 2147483647);++i) {n_11580194[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    F.line = 1239;
    var h_11580333 = t_11580186.first;
    F.line = 1240;
    t_11580186.first = -1;
    F.line = 1241;
    t_11580186.last = -1;
    F.line = 1242;
    var Tmp1 = t_11580186.data; t_11580186.data = n_11580194; n_11580194 = Tmp1;    L2: do {
      F.line = 1243;
        L3: while (true) {
        if (!(0 <= h_11580333)) break L3;
          F.line = 1244;
          var nxt_11580489 = n_11580194[chckIndx(h_11580333, 0, (n_11580194 != null ? n_11580194.length : 0)+0-1)-0].Field1;
          F.line = 1245;
          var eh_11580638 = n_11580194[chckIndx(h_11580333, 0, (n_11580194 != null ? n_11580194.length : 0)+0-1)-0].Field0;
          if (is_filled_10902018(eh_11580638)) {
          F.line = 1247;
          var j_11580645 = (eh_11580638 & (t_11580186.data != null ? (t_11580186.data.length-1) : -1));
          L4: do {
            F.line = 1248;
              L5: while (true) {
              if (!is_filled_10902018(t_11580186.data[chckIndx(j_11580645, 0, (t_11580186.data != null ? t_11580186.data.length : 0)+0-1)-0].Field0)) break L5;
                F.line = 1249;
                j_11580645 = next_try_10905014(j_11580645, (t_11580186.data != null ? (t_11580186.data.length-1) : -1));
              }
          } while(false);
          F.line = 1250;
          Tmp6 = n_11580194[chckIndx(h_11580333, 0, (n_11580194 != null ? n_11580194.length : 0)+0-1)-0].Field2;
          n_11580194[chckIndx(h_11580333, 0, (n_11580194 != null ? n_11580194.length : 0)+0-1)-0].Field2 = genericReset(n_11580194[chckIndx(h_11580333, 0, (n_11580194 != null ? n_11580194.length : 0)+0-1)-0].Field2, NTI1163014);
          Tmp7 = n_11580194[chckIndx(h_11580333, 0, (n_11580194 != null ? n_11580194.length : 0)+0-1)-0].Field3;
          n_11580194[chckIndx(h_11580333, 0, (n_11580194 != null ? n_11580194.length : 0)+0-1)-0].Field3 = genericReset(n_11580194[chckIndx(h_11580333, 0, (n_11580194 != null ? n_11580194.length : 0)+0-1)-0].Field3, NTI11426043);
          raw_insert_11581349(t_11580186, t_11580186, "data", Tmp6, Tmp7, n_11580194[chckIndx(h_11580333, 0, (n_11580194 != null ? n_11580194.length : 0)+0-1)-0].Field0, j_11580645);
          }
          
          F.line = 1251;
          h_11580333 = nxt_11580489;
        }
    } while(false);
  framePtr = F.prev;

  
}
function raw_get_known_hc_11582149(t_11582154, key_11582155, hc_11582156) {
  var result_11582157 = 0;

  var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((t_11582154.data != null ? t_11582154.data.length : 0) == 0)) {
    F.line = 47;
    result_11582157 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_11585138 = (hc_11582156 & (t_11582154.data != null ? (t_11582154.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_10902018(t_11582154.data[chckIndx(h_11585138, 0, (t_11582154.data != null ? t_11582154.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_11582154.data[chckIndx(h_11585138, 0, (t_11582154.data != null ? t_11582154.data.length : 0)+0-1)-0].Field0 == hc_11582156) && eqStrings(t_11582154.data[chckIndx(h_11585138, 0, (t_11582154.data != null ? t_11582154.data.length : 0)+0-1)-0].Field2, key_11582155))) {
          F.line = 55;
          result_11582157 = h_11585138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_11585138 = next_try_10905014(h_11585138, (t_11582154.data != null ? (t_11582154.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_11582157 = subInt(-1, h_11585138);
  } while (false);
  framePtr = F.prev;

  return result_11582157;

}
function HEX5BHEX5DHEX3D_11495311(t_11495317, key_11495318, val_11495319) {
  var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (((t_11495317.data != null ? t_11495317.data.length : 0) == 0)) {
    if (!(is_power_of_two_2245029(64))) {
    F.line = 166;
    failed_assert_impl_1267680(makeNimstrLit("/usr/lib/nim/pure/collections/tableimpl.nim(166, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    F.line = 167;
    t_11495317.counter = 0;
    F.line = 168;
    t_11495317.data = new Array(64); for (var i=0;i<64;++i) {t_11495317.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    F.line = 170;
    t_11495317.first = -1;
    F.line = 171;
    t_11495317.last = -1;
    }
    
    F.line = 57;
    var hc_11520601 = [0];
    F.line = 58;
    var index_11530620 = raw_get_11520621(t_11495317, key_11495318, hc_11520601, 0);
    if ((0 <= index_11530620)) {
    F.line = 59;
    t_11495317.data[chckIndx(index_11530620, 0, (t_11495317.data != null ? t_11495317.data.length : 0)+0-1)-0].Field3 = val_11495319;
    }
    else {
      if (((t_11495317.data != null ? t_11495317.data.length : 0) == 0)) {
      if (!(is_power_of_two_2245029(64))) {
      F.line = 166;
      failed_assert_impl_1267680(makeNimstrLit("/usr/lib/nim/pure/collections/tableimpl.nim(166, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      F.line = 167;
      t_11495317.counter = 0;
      F.line = 168;
      t_11495317.data = new Array(64); for (var i=0;i<64;++i) {t_11495317.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}      F.line = 170;
      t_11495317.first = -1;
      F.line = 171;
      t_11495317.last = -1;
      }
      
      if (must_rehash_11555601(t_11495317)) {
      F.line = 49;
      enlarge_11580180(t_11495317);
      F.line = 50;
      index_11530620 = raw_get_known_hc_11582149(t_11495317, key_11495318, hc_11520601[0]);
      }
      
      F.line = 51;
      index_11530620 = subInt(-1, index_11530620);
      F.line = 52;
      raw_insert_11581349(t_11495317, t_11495317, "data", key_11495318, val_11495319, hc_11520601[0], index_11530620);
      F.line = 60;
      t_11495317.counter = addInt(t_11495317.counter, 1);
    }
    
  framePtr = F.prev;

  
}
function HEX25_11585683(s_11585685) {
  var result_11585686 = null;

  var F={procname:"json.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 282;
    result_11585686 = {kind: 4, str: nimCopy(null, s_11585685, NTI1163014), num: 0, fnum: 0.0, bval: false, fields: ({data: null, counter: 0, first: 0, last: 0}), elems: null};
  framePtr = F.prev;

  return result_11585686;

}
function HEX25_13015478(elements_13015482) {
  var result_13015483 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 318;
    result_13015483 = new_jarray_11445657();
    L1: do {
      F.line = 319;
      var elem_13015489 = null;
      F.line = 3;
      var i_14075605 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_14075605 < (elements_13015482 != null ? elements_13015482.length : 0))) break L3;
            F.line = 319;
            elem_13015489 = elements_13015482[chckIndx(i_14075605, 0, (elements_13015482 != null ? elements_13015482.length : 0)+0-1)-0];
            F.line = 319;
            add_11475020(result_13015483, HEX25_11585683(elem_13015489));
            F.line = 6;
            i_14075605 = addInt(i_14075605, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_13015483;

}
function HEX25_11585768(n_11585770) {
  var result_11585771 = null;

  var F={procname:"json.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 302;
    result_11585771 = {kind: 3, fnum: n_11585770, str: null, num: 0, bval: false, fields: ({data: null, counter: 0, first: 0, last: 0}), elems: null};
  framePtr = F.prev;

  return result_11585771;

}
function HEX25_12825116(elements_12825120) {
  var result_12825121 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 318;
    result_12825121 = new_jarray_11445657();
    L1: do {
      F.line = 319;
      var elem_12825152 = 0.0;
      F.line = 3;
      var i_14075610 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_14075610 < (elements_12825120 != null ? elements_12825120.length : 0))) break L3;
            F.line = 319;
            elem_12825152 = elements_12825120[chckIndx(i_14075610, 0, (elements_12825120 != null ? elements_12825120.length : 0)+0-1)-0];
            F.line = 319;
            add_11475020(result_12825121, HEX25_11585768(elem_12825152));
            F.line = 6;
            i_14075610 = addInt(i_14075610, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_12825121;

}
function is_undefined_1480483(x_1480486) {
  var result_1480487 = false;

  var F={procname:"isUndefined.isUndefined",prev:framePtr,filename:"reprjs.nim",line:0};
  framePtr = F;
    F.line = 34;
    result_1480487 = x_1480486 === undefined;
  framePtr = F.prev;

  return result_1480487;

}
function HEX25_13016248(o_13016251) {
  var result_13016252 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 364;
    result_13016252 = HEX25_11585683(reprEnum(o_13016251, NTI12661054));
  framePtr = F.prev;

  return result_13016252;

}
function HEX25_13016398(elements_13016402) {
  var result_13016403 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 318;
    result_13016403 = new_jarray_11445657();
    L1: do {
      F.line = 319;
      var elem_13016434 = null;
      F.line = 3;
      var i_14075615 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_14075615 < (elements_13016402 != null ? elements_13016402.length : 0))) break L3;
            F.line = 319;
            elem_13016434 = elements_13016402[chckIndx(i_14075615, 0, (elements_13016402 != null ? elements_13016402.length : 0)+0-1)-0];
            F.line = 319;
            add_11475020(result_13016403, HEX25_12825116(elem_13016434));
            F.line = 6;
            i_14075615 = addInt(i_14075615, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_13016403;

}
function HEX25_12710144(elements_12710148) {
  var result_12710149 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 318;
    result_12710149 = new_jarray_11445657();
    L1: do {
      F.line = 319;
      var elem_12710155 = null;
      F.line = 3;
      var i_14075626 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_14075626 < (elements_12710148 != null ? elements_12710148.length : 0))) break L3;
            F.line = 319;
            elem_12710155 = elements_12710148[chckIndx(i_14075626, 0, (elements_12710148 != null ? elements_12710148.length : 0)+0-1)-0];
            F.line = 319;
            add_11475020(result_12710149, elem_12710155);
            F.line = 6;
            i_14075626 = addInt(i_14075626, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_12710149;

}
function parse_saturated_natural_1900017(s_1900019, b_1900021, b_1900021_Idx, start_1900022) {
      var Tmp1;
          var Tmp4;

  var result_1900024 = 0;

  var F={procname:"parseutils.parseSaturatedNatural",prev:framePtr,filename:"parseutils.nim",line:0};
  framePtr = F;
    F.line = 476;
    var i_1900025 = start_1900022;
    if (((i_1900025 < (s_1900019 != null ? s_1900019.length : 0)) && (s_1900019[chckIndx(i_1900025, 0, (s_1900019 != null ? s_1900019.length : 0)+0-1)-0] == 43))) {
    F.line = 477;
    i_1900025 = addInt(i_1900025, 1);
    }
    
      if (!(i_1900025 < (s_1900019 != null ? s_1900019.length : 0))) Tmp1 = false; else {        Tmp1 = (ConstSet13[s_1900019[chckIndx(i_1900025, 0, (s_1900019 != null ? s_1900019.length : 0)+0-1)-0]] != undefined);      }    if (Tmp1) {
    F.line = 479;
    b_1900021[b_1900021_Idx] = 0;
    L2: do {
      F.line = 480;
        L3: while (true) {
          if (!(i_1900025 < (s_1900019 != null ? s_1900019.length : 0))) Tmp4 = false; else {            Tmp4 = (ConstSet14[s_1900019[chckIndx(i_1900025, 0, (s_1900019 != null ? s_1900019.length : 0)+0-1)-0]] != undefined);          }        if (!Tmp4) break L3;
          F.line = 481;
          var c_1910016 = subInt(s_1900019[chckIndx(i_1900025, 0, (s_1900019 != null ? s_1900019.length : 0)+0-1)-0], 48);
          if ((b_1900021[b_1900021_Idx] <= divInt(subInt(2147483647, c_1910016), 10))) {
          F.line = 483;
          b_1900021[b_1900021_Idx] = addInt(mulInt(b_1900021[b_1900021_Idx], 10), c_1910016);
          }
          else {
            F.line = 485;
            b_1900021[b_1900021_Idx] = 2147483647;
          }
          
          F.line = 486;
          i_1900025 = addInt(i_1900025, 1);
          L5: do {
            F.line = 487;
              L6: while (true) {
              if (!((i_1900025 < (s_1900019 != null ? s_1900019.length : 0)) && (s_1900019[chckIndx(i_1900025, 0, (s_1900019 != null ? s_1900019.length : 0)+0-1)-0] == 95))) break L6;
                F.line = 487;
                i_1900025 = addInt(i_1900025, 1);
              }
          } while(false);
        }
    } while(false);
    F.line = 488;
    result_1900024 = subInt(i_1900025, start_1900022);
    }
    
  framePtr = F.prev;

  return result_1900024;

}
function HEX5BHEX5D_5620068(s_5620072, x_5620074) {
  var result_5620075 = null;

  var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2436;
    var a_5620201 = x_5620074.a;
    F.line = 2437;
    var l_5620401 = addInt(subInt(subInt((s_5620072 != null ? s_5620072.length : 0), x_5620074.b), a_5620201), 1);
    F.line = 2438;
    result_5620075 = nimCopy(null, mnewString(chckRange(l_5620401, 0, 2147483647)), NTI1163014);
    L1: do {
      F.line = 2439;
      var i_5620409 = 0;
      F.line = 106;
      var i_14075642 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_14075642 < l_5620401)) break L3;
            F.line = 2439;
            i_5620409 = i_14075642;
            F.line = 2439;
            result_5620075[chckIndx(i_5620409, 0, (result_5620075 != null ? result_5620075.length : 0)+0-1)-0] = s_5620072[chckIndx(addInt(i_5620409, a_5620201), 0, (s_5620072 != null ? s_5620072.length : 0)+0-1)-0];
            F.line = 109;
            i_14075642 = addInt(i_14075642, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_5620075;

}
function HEX2EHEX2E_5620001(a_5620006, b_5620008) {
  var result_5620014 = ({a: 0, b: 0});

  var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 469;
    nimCopy(result_5620014, {a: a_5620006, b: b_5620008}, NTI5620011);
  framePtr = F.prev;

  return result_5620014;

}
function parse_standard_format_specifier_12555322(s_12555324, start_12555325, ignore_unknown_suffix_12555327) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_12555328 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

  var F={procname:"strformat.parseStandardFormatSpecifier",prev:framePtr,filename:"strformat.nim",line:0};
  framePtr = F;
    F.line = 379;
    result_12555328.fill = 32;
    F.line = 380;
    result_12555328.align = 0;
    F.line = 381;
    result_12555328.sign = 45;
    F.line = 382;
    var i_12555331 = start_12555325;
    if (((addInt(i_12555331, 1) < (s_12555324 != null ? s_12555324.length : 0)) && (ConstSet9[s_12555324[chckIndx(addInt(i_12555331, 1), 0, (s_12555324 != null ? s_12555324.length : 0)+0-1)-0]] != undefined))) {
    F.line = 384;
    result_12555328.fill = s_12555324[chckIndx(i_12555331, 0, (s_12555324 != null ? s_12555324.length : 0)+0-1)-0];
    F.line = 385;
    result_12555328.align = s_12555324[chckIndx(addInt(i_12555331, 1), 0, (s_12555324 != null ? s_12555324.length : 0)+0-1)-0];
    F.line = 386;
    i_12555331 = addInt(i_12555331, 2);
    }
    else {
    if (((i_12555331 < (s_12555324 != null ? s_12555324.length : 0)) && (ConstSet10[s_12555324[chckIndx(i_12555331, 0, (s_12555324 != null ? s_12555324.length : 0)+0-1)-0]] != undefined))) {
    F.line = 388;
    result_12555328.align = s_12555324[chckIndx(i_12555331, 0, (s_12555324 != null ? s_12555324.length : 0)+0-1)-0];
    F.line = 389;
    i_12555331 = addInt(i_12555331, 1);
    }
    }
    if (((i_12555331 < (s_12555324 != null ? s_12555324.length : 0)) && (ConstSet11[s_12555324[chckIndx(i_12555331, 0, (s_12555324 != null ? s_12555324.length : 0)+0-1)-0]] != undefined))) {
    F.line = 392;
    result_12555328.sign = s_12555324[chckIndx(i_12555331, 0, (s_12555324 != null ? s_12555324.length : 0)+0-1)-0];
    F.line = 393;
    i_12555331 = addInt(i_12555331, 1);
    }
    
    if (((i_12555331 < (s_12555324 != null ? s_12555324.length : 0)) && (s_12555324[chckIndx(i_12555331, 0, (s_12555324 != null ? s_12555324.length : 0)+0-1)-0] == 35))) {
    F.line = 396;
    result_12555328.alternateForm = true;
    F.line = 397;
    i_12555331 = addInt(i_12555331, 1);
    }
    
      if (!((addInt(i_12555331, 1) < (s_12555324 != null ? s_12555324.length : 0)) && (s_12555324[chckIndx(i_12555331, 0, (s_12555324 != null ? s_12555324.length : 0)+0-1)-0] == 48))) Tmp1 = false; else {        Tmp1 = (ConstSet12[s_12555324[chckIndx(addInt(i_12555331, 1), 0, (s_12555324 != null ? s_12555324.length : 0)+0-1)-0]] != undefined);      }    if (Tmp1) {
    F.line = 400;
    result_12555328.padWithZero = true;
    F.line = 401;
    i_12555331 = addInt(i_12555331, 1);
    }
    
    F.line = 403;
    var parsed_length_12575015 = parse_saturated_natural_1900017(s_12555324, result_12555328, "minimumWidth", i_12555331);
    F.line = 404;
    i_12555331 = addInt(i_12555331, parsed_length_12575015);
    if (((i_12555331 < (s_12555324 != null ? s_12555324.length : 0)) && (s_12555324[chckIndx(i_12555331, 0, (s_12555324 != null ? s_12555324.length : 0)+0-1)-0] == 46))) {
    F.line = 406;
    i_12555331 = addInt(i_12555331, 1);
    F.line = 407;
    var parsed_length_b_12575029 = parse_saturated_natural_1900017(s_12555324, result_12555328, "precision", i_12555331);
    F.line = 408;
    i_12555331 = addInt(i_12555331, parsed_length_b_12575029);
    }
    else {
      F.line = 410;
      result_12555328.precision = -1;
    }
    
      if (!(i_12555331 < (s_12555324 != null ? s_12555324.length : 0))) Tmp2 = false; else {        Tmp2 = (ConstSet15[s_12555324[chckIndx(i_12555331, 0, (s_12555324 != null ? s_12555324.length : 0)+0-1)-0]] != undefined);      }    if (Tmp2) {
    F.line = 413;
    result_12555328.typ = s_12555324[chckIndx(i_12555331, 0, (s_12555324 != null ? s_12555324.length : 0)+0-1)-0];
    F.line = 414;
    i_12555331 = addInt(i_12555331, 1);
    }
    
    F.line = 415;
    result_12555328.endPosition = i_12555331;
      if (!!((i_12555331 == (s_12555324 != null ? s_12555324.length : 0)))) Tmp3 = false; else {        Tmp3 = !(ignore_unknown_suffix_12555327);      }    if (Tmp3) {
    F.line = 417;
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_5620068(s_12555324, HEX2EHEX2E_5620001(i_12555331, 1)) || []), parent: null, m_type: NTI1169043, name: null, trace: null, up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_12555328;

}
function nsuformatBiggestFloat(f_10675221, format_10675222, precision_10675227, decimal_sep_10675228) {
  var result_10675229 = null;

  var F={procname:"strutils.formatBiggestFloat",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 2310;
    var precision_10675401 = precision_10675227;
    if ((precision_10675401 == -1)) {
    F.line = 2313;
    precision_10675401 = 6;
    }
    
    F.line = 2314;
    var res_10675402 = null;
    F.line = 2315;
    switch (format_10675222) {
    case 0:
      F.line = 2317;
      res_10675402 = f_10675221.toString();
      break;
    case 1:
      F.line = 2319;
      res_10675402 = f_10675221.toFixed(precision_10675401);
      break;
    case 2:
      F.line = 2321;
      res_10675402 = f_10675221.toExponential(precision_10675401);
      break;
    }
    F.line = 2322;
    result_10675229 = nimCopy(null, cstrToNimstr(res_10675402), NTI1163014);
    if (((1.0000000000000000e+00 / f_10675221) == -Infinity)) {
    F.line = 2325;
    result_10675229 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_10675402) || []), NTI1163014);
    }
    
    L1: do {
      F.line = 2326;
      var i_10675410 = 0;
      F.line = 104;
      var colontmp__14075647 = 0;
      F.line = 2326;
      colontmp__14075647 = (result_10675229 != null ? result_10675229.length : 0);
      F.line = 106;
      var i_14075648 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_14075648 < colontmp__14075647)) break L3;
            F.line = 2326;
            i_10675410 = i_14075648;
            if ((ConstSet16[result_10675229[chckIndx(i_10675410, 0, (result_10675229 != null ? result_10675229.length : 0)+0-1)-0]] != undefined)) {
            F.line = 2329;
            result_10675229[chckIndx(i_10675410, 0, (result_10675229 != null ? result_10675229.length : 0)+0-1)-0] = decimal_sep_10675228;
            }
            
            F.line = 109;
            i_14075648 = addInt(i_14075648, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_10675229;

}
function insert_1500401(x_1500404, x_1500404_Idx, item_1500405, i_1500406) {
  var F={procname:"system.insert",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2706;
    var xl_1500407 = (x_1500404[x_1500404_Idx] != null ? x_1500404[x_1500404_Idx].length : 0);
    F.line = 2707;
    (x_1500404[x_1500404_Idx] == null ? x_1500404[x_1500404_Idx] = mnewString(chckRange(addInt(xl_1500407, (item_1500405 != null ? item_1500405.length : 0)), 0, 2147483647)) : x_1500404[x_1500404_Idx].length = chckRange(addInt(xl_1500407, (item_1500405 != null ? item_1500405.length : 0)), 0, 2147483647));
    F.line = 2708;
    var j_1500408 = subInt(xl_1500407, 1);
    L1: do {
      F.line = 2709;
        L2: while (true) {
        if (!(i_1500406 <= j_1500408)) break L2;
          F.line = 2710;
          x_1500404[x_1500404_Idx][chckIndx(addInt(j_1500408, (item_1500405 != null ? item_1500405.length : 0)), 0, (x_1500404[x_1500404_Idx] != null ? x_1500404[x_1500404_Idx].length : 0)+0-1)-0] = x_1500404[x_1500404_Idx][chckIndx(j_1500408, 0, (x_1500404[x_1500404_Idx] != null ? x_1500404[x_1500404_Idx].length : 0)+0-1)-0];
          F.line = 2711;
          j_1500408 = subInt(j_1500408, 1);
        }
    } while(false);
    F.line = 2712;
    j_1500408 = 0;
    L3: do {
      F.line = 2713;
        L4: while (true) {
        if (!(j_1500408 < (item_1500405 != null ? item_1500405.length : 0))) break L4;
          F.line = 2714;
          x_1500404[x_1500404_Idx][chckIndx(addInt(j_1500408, i_1500406), 0, (x_1500404[x_1500404_Idx] != null ? x_1500404[x_1500404_Idx].length : 0)+0-1)-0] = item_1500405[chckIndx(j_1500408, 0, (item_1500405 != null ? item_1500405.length : 0)+0-1)-0];
          F.line = 2715;
          j_1500408 = addInt(j_1500408, 1);
        }
    } while(false);
  framePtr = F.prev;

  
}
function nsuRepeatChar(c_10390048, count_10390049) {
  var result_10390050 = null;

  var F={procname:"strutils.repeat",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 1282;
    result_10390050 = nimCopy(null, mnewString(count_10390049), NTI1163014);
    L1: do {
      F.line = 1283;
      var i_10390059 = 0;
      F.line = 66;
      var colontmp__14075653 = 0;
      F.line = 1283;
      colontmp__14075653 = subInt(count_10390049, 1);
      F.line = 77;
      var res_14075654 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_14075654 <= colontmp__14075653)) break L3;
            F.line = 1283;
            i_10390059 = res_14075654;
            F.line = 1283;
            result_10390050[chckIndx(i_10390059, 0, (result_10390050 != null ? result_10390050.length : 0)+0-1)-0] = c_10390048;
            F.line = 80;
            res_14075654 = addInt(res_14075654, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_10390050;

}
function validate_utf8_2535229(s_2535231) {
            var Tmp3;
            var Tmp4;
            var Tmp5;
            var Tmp6;
            var Tmp7;
            var Tmp8;

  var result_2535232 = 0;

  var F={procname:"unicode.validateUtf8",prev:framePtr,filename:"unicode.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 172;
    var i_2535234 = 0;
    F.line = 173;
    var l_2535235 = (s_2535231 != null ? s_2535231.length : 0);
    L1: do {
      F.line = 174;
        L2: while (true) {
        if (!(i_2535234 < l_2535235)) break L2;
          if ((s_2535231[chckIndx(i_2535234, 0, (s_2535231 != null ? s_2535231.length : 0)+0-1)-0] <= 127)) {
          F.line = 176;
          i_2535234 = addInt(i_2535234, 1);
          }
          else {
          if ((((s_2535231[chckIndx(i_2535234, 0, (s_2535231 != null ? s_2535231.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
          if ((s_2535231[chckIndx(i_2535234, 0, (s_2535231 != null ? s_2535231.length : 0)+0-1)-0] < 194)) {
          F.line = 178;
          result_2535232 = i_2535234;
          break BeforeRet;
          }
          
            if (!(addInt(i_2535234, 1) < l_2535235)) Tmp3 = false; else {              Tmp3 = (((s_2535231[chckIndx(addInt(i_2535234, 1), 0, (s_2535231 != null ? s_2535231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }          if (Tmp3) {
          F.line = 179;
          i_2535234 = addInt(i_2535234, 2);
          }
          else {
            F.line = 180;
            result_2535232 = i_2535234;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_2535231[chckIndx(i_2535234, 0, (s_2535231 != null ? s_2535231.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
            if (!(addInt(i_2535234, 2) < l_2535235)) Tmp5 = false; else {              Tmp5 = (((s_2535231[chckIndx(addInt(i_2535234, 1), 0, (s_2535231 != null ? s_2535231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }            if (!Tmp5) Tmp4 = false; else {              Tmp4 = (((s_2535231[chckIndx(addInt(i_2535234, 2), 0, (s_2535231 != null ? s_2535231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }          if (Tmp4) {
          F.line = 183;
          i_2535234 = addInt(i_2535234, 3);
          }
          else {
            F.line = 184;
            result_2535232 = i_2535234;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_2535231[chckIndx(i_2535234, 0, (s_2535231 != null ? s_2535231.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
            if (!(addInt(i_2535234, 3) < l_2535235)) Tmp8 = false; else {              Tmp8 = (((s_2535231[chckIndx(addInt(i_2535234, 1), 0, (s_2535231 != null ? s_2535231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }            if (!Tmp8) Tmp7 = false; else {              Tmp7 = (((s_2535231[chckIndx(addInt(i_2535234, 2), 0, (s_2535231 != null ? s_2535231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }            if (!Tmp7) Tmp6 = false; else {              Tmp6 = (((s_2535231[chckIndx(addInt(i_2535234, 3), 0, (s_2535231 != null ? s_2535231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }          if (Tmp6) {
          F.line = 189;
          i_2535234 = addInt(i_2535234, 4);
          }
          else {
            F.line = 190;
            result_2535232 = i_2535234;
            break BeforeRet;
          }
          
          }
          else {
            F.line = 192;
            result_2535232 = i_2535234;
            break BeforeRet;
          }
          }}}
        }
    } while(false);
    F.line = 193;
    result_2535232 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_2535232;

}
function nucruneLen(s_2293829) {
  var result_2293830 = 0;

  var F={procname:"unicode.runeLen",prev:framePtr,filename:"unicode.nim",line:0};
  framePtr = F;
    F.line = 41;
    var i_2293832 = 0;
    L1: do {
      F.line = 42;
        L2: while (true) {
        if (!(i_2293832 < (s_2293829 != null ? s_2293829.length : 0))) break L2;
          if ((s_2293829[chckIndx(i_2293832, 0, (s_2293829 != null ? s_2293829.length : 0)+0-1)-0] <= 127)) {
          F.line = 43;
          i_2293832 = addInt(i_2293832, 1);
          }
          else {
          if ((((s_2293829[chckIndx(i_2293832, 0, (s_2293829 != null ? s_2293829.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
          F.line = 44;
          i_2293832 = addInt(i_2293832, 2);
          }
          else {
          if ((((s_2293829[chckIndx(i_2293832, 0, (s_2293829 != null ? s_2293829.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
          F.line = 45;
          i_2293832 = addInt(i_2293832, 3);
          }
          else {
          if ((((s_2293829[chckIndx(i_2293832, 0, (s_2293829 != null ? s_2293829.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
          F.line = 46;
          i_2293832 = addInt(i_2293832, 4);
          }
          else {
          if ((((s_2293829[chckIndx(i_2293832, 0, (s_2293829 != null ? s_2293829.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
          F.line = 47;
          i_2293832 = addInt(i_2293832, 5);
          }
          else {
          if ((((s_2293829[chckIndx(i_2293832, 0, (s_2293829 != null ? s_2293829.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
          F.line = 48;
          i_2293832 = addInt(i_2293832, 6);
          }
          else {
            F.line = 49;
          i_2293832 = addInt(i_2293832, 1);
          }
          }}}}}
          F.line = 50;
          result_2293830 = addInt(result_2293830, 1);
        }
    } while(false);
  framePtr = F.prev;

  return result_2293830;

}
function align_string_12555222(s_12555224, minimum_width_12555225, align_12555226, fill_12555227) {
      var Tmp1;

  var result_12555228 = null;

  var F={procname:"strformat.alignString",prev:framePtr,filename:"strformat.nim",line:0};
  framePtr = F;
    if ((minimum_width_12555225 == 0)) {
    F.line = 282;
    result_12555228 = nimCopy(null, s_12555224, NTI1163014);
    }
    else {
      F.line = 284;
      if ((validate_utf8_2535229(s_12555224) == -1)) {
      Tmp1 = nucruneLen(s_12555224);
      }
      else {
      Tmp1 = (s_12555224 != null ? s_12555224.length : 0);
      }
      
      var s_rune_len_12555229 = Tmp1;
      F.line = 285;
      var to_fill_12555230 = subInt(minimum_width_12555225, s_rune_len_12555229);
      if ((to_fill_12555230 <= 0)) {
      F.line = 287;
      result_12555228 = nimCopy(null, s_12555224, NTI1163014);
      }
      else {
      if (((align_12555226 == 60) || (align_12555226 == 0))) {
      F.line = 289;
      result_12555228 = nimCopy(null, (s_12555224 || []).concat(nsuRepeatChar(fill_12555227, chckRange(to_fill_12555230, 0, 2147483647)) || []), NTI1163014);
      }
      else {
      if ((align_12555226 == 94)) {
      F.line = 291;
      var half_12555231 = divInt(to_fill_12555230, 2);
      F.line = 292;
      result_12555228 = nimCopy(null, (nsuRepeatChar(fill_12555227, chckRange(half_12555231, 0, 2147483647)) || []).concat(s_12555224 || [],nsuRepeatChar(fill_12555227, chckRange(subInt(to_fill_12555230, half_12555231), 0, 2147483647)) || []), NTI1163014);
      }
      else {
        F.line = 294;
        result_12555228 = nimCopy(null, (nsuRepeatChar(fill_12555227, chckRange(to_fill_12555230, 0, 2147483647)) || []).concat(s_12555224 || []), NTI1163014);
      }
      }}
    }
    
  framePtr = F.prev;

  return result_12555228;

}
function nsuToUpperAsciiChar(c_9905016) {
  var result_9905017 = 0;

  var F={procname:"strutils.toUpperAscii",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    if ((ConstSet18[c_9905016] != undefined)) {
    F.line = 248;
    result_9905017 = chckRange(subInt(c_9905016, 32), 0, 255);
    }
    else {
      F.line = 250;
      result_9905017 = c_9905016;
    }
    
  framePtr = F.prev;

  return result_9905017;

}
function nsuToUpperAsciiStr(s_9910037) {
  var result_9910038 = null;

  var F={procname:"strutils.toUpperAscii",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 214;
    result_9910038 = nimCopy(null, mnewString(chckRange((s_9910037 != null ? s_9910037.length : 0), 0, 2147483647)), NTI1163014);
    L1: do {
      F.line = 215;
      var iHEX60gensym9910039_9915009 = 0;
      F.line = 66;
      var colontmp__14075679 = 0;
      F.line = 215;
      colontmp__14075679 = subInt((s_9910037 != null ? s_9910037.length : 0), 1);
      F.line = 77;
      var res_14075680 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_14075680 <= colontmp__14075679)) break L3;
            F.line = 264;
            iHEX60gensym9910039_9915009 = res_14075680;
            F.line = 216;
            result_9910038[chckIndx(iHEX60gensym9910039_9915009, 0, (result_9910038 != null ? result_9910038.length : 0)+0-1)-0] = nsuToUpperAsciiChar(s_9910037[chckIndx(iHEX60gensym9910039_9915009, 0, (s_9910037 != null ? s_9910037.length : 0)+0-1)-0]);
            F.line = 80;
            res_14075680 = addInt(res_14075680, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_9910038;

}
function format_value_12695002(result_12695005, result_12695005_Idx, value_12695006, specifier_12695007) {
    var Tmp1;

  var F={procname:"formatValue.formatValue",prev:framePtr,filename:"strformat.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((specifier_12695007 != null ? specifier_12695007.length : 0) == 0)) {
    F.line = 446;
    if (result_12695005[result_12695005_Idx] != null) { result_12695005[result_12695005_Idx] = (result_12695005[result_12695005_Idx]).concat(cstrToNimstr((value_12695006)+"")); } else { result_12695005[result_12695005_Idx] = cstrToNimstr((value_12695006)+"").slice(); };
    F.line = 447;
    break BeforeRet;
    }
    
    F.line = 448;
    var spec_12695008 = parse_standard_format_specifier_12555322(specifier_12695007, 0, false);
    F.line = 450;
    var fmode_12695009 = 0;
    F.line = 451;
    switch (spec_12695008.typ) {
    case 101:
    case 69:
      F.line = 453;
      fmode_12695009 = 2;
      break;
    case 102:
    case 70:
      F.line = 455;
      fmode_12695009 = 1;
      break;
    case 103:
    case 71:
      F.line = 457;
      fmode_12695009 = 0;
      break;
    case 0:
      break;
    default: 
      F.line = 460;
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_12695008.typ]), parent: null, m_type: NTI1169043, name: null, trace: null, up: null}, "ValueError");
      break;
    }
    F.line = 464;
    var f_12700002 = [nsuformatBiggestFloat(value_12695006, fmode_12695009, chckRange(spec_12695008.precision, -1, 32), 46)];
    F.line = 465;
    var sign_12700003 = false;
    if ((0.0 <= value_12695006)) {
    if (!((spec_12695008.sign == 45))) {
    F.line = 468;
    sign_12700003 = true;
    if ((value_12695006 == 0.0)) {
    if (((1.0000000000000000e+00 / value_12695006) == Infinity)) {
    F.line = 472;
    insert_1500401(f_12700002, 0, nimCharToStr(spec_12695008.sign), 0);
    }
    
    }
    else {
      F.line = 474;
    insert_1500401(f_12700002, 0, nimCharToStr(spec_12695008.sign), 0);
    }
    
    }
    
    }
    else {
      F.line = 476;
      sign_12700003 = true;
    }
    
    if (spec_12695008.padWithZero) {
    F.line = 479;
    var sign_str_12700006 = [];
    if (sign_12700003) {
    F.line = 481;
    sign_str_12700006 = nimCopy(null, nimCharToStr(f_12700002[0][chckIndx(0, 0, (f_12700002[0] != null ? f_12700002[0].length : 0)+0-1)-0]), NTI1163014);
    F.line = 482;
    f_12700002[0] = nimCopy(null, HEX5BHEX5D_5620068(f_12700002[0], HEX2EHEX2E_5620001(1, 1)), NTI1163014);
    }
    
    F.line = 484;
    var to_fill_12710040 = subInt(subInt(spec_12695008.minimumWidth, (f_12700002[0] != null ? f_12700002[0].length : 0)), (sign_12700003 ? 1:0));
    if ((0 < to_fill_12710040)) {
    F.line = 486;
    f_12700002[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(to_fill_12710040, 0, 2147483647)) || []).concat(f_12700002[0] || []), NTI1163014);
    }
    
    if (sign_12700003) {
    F.line = 488;
    f_12700002[0] = nimCopy(null, (sign_str_12700006 || []).concat(f_12700002[0] || []), NTI1163014);
    }
    
    }
    
    F.line = 491;
    if ((spec_12695008.align == 0)) {
    Tmp1 = 62;
    }
    else {
    Tmp1 = spec_12695008.align;
    }
    
    var align_12710041 = Tmp1;
    F.line = 492;
    var res_12710042 = align_string_12555222(f_12700002[0], spec_12695008.minimumWidth, align_12710041, spec_12695008.fill);
    if ((ConstSet17[spec_12695008.typ] != undefined)) {
    F.line = 494;
    if (result_12695005[result_12695005_Idx] != null) { result_12695005[result_12695005_Idx] = (result_12695005[result_12695005_Idx]).concat(nsuToUpperAsciiStr(res_12710042)); } else { result_12695005[result_12695005_Idx] = nsuToUpperAsciiStr(res_12710042).slice(); };
    }
    else {
      F.line = 496;
    if (result_12695005[result_12695005_Idx] != null) { result_12695005[result_12695005_Idx] = (result_12695005[result_12695005_Idx]).concat(res_12710042); } else { result_12695005[result_12695005_Idx] = res_12710042.slice(); };
    }
    
  } while (false);
  framePtr = F.prev;

  
}
function make_plotly_custom_map_12680533(map_12680535) {
  var result_12680536 = null;

  var F={procname:"color.makePlotlyCustomMap",prev:framePtr,filename:"color.nim",line:0};
  framePtr = F;
    F.line = 35;
    result_12680536 = new_jarray_11445657();
    L1: do {
      F.line = 36;
      var i_12690229 = 0;
      F.line = 36;
      var row_12690230 = {Field0: 0.0, Field1: 0.0, Field2: 0.0};
      F.line = 117;
      var i_14075621 = 0;
      F.line = 118;
      var l_14075622 = (map_12680535.rawColors != null ? map_12680535.rawColors.length : 0);
      L2: do {
        F.line = 119;
          L3: while (true) {
          if (!(i_14075621 < l_14075622)) break L3;
            F.line = 36;
            i_12690229 = i_14075621;
            F.line = 120;
            nimCopy(row_12690230, map_12680535.rawColors[chckIndx(i_14075621, 0, (map_12680535.rawColors != null ? map_12680535.rawColors.length : 0)+0-1)-0], NTI12661187);
            F.line = 37;
            F.line = 38;
            var fmt_res_12690240 = [mnewString(0)];
            F.line = 38;
            if (fmt_res_12690240[0] != null) { fmt_res_12690240[0] = (fmt_res_12690240[0]).concat(makeNimstrLit("rgb(")); } else { fmt_res_12690240[0] = makeNimstrLit("rgb("); };
            F.line = 38;
            format_value_12695002(fmt_res_12690240, 0, (row_12690230["Field0"] * 2.5600000000000000e+02), []);
            F.line = 38;
            if (fmt_res_12690240[0] != null) { fmt_res_12690240[0] = (fmt_res_12690240[0]).concat(makeNimstrLit(", ")); } else { fmt_res_12690240[0] = makeNimstrLit(", "); };
            F.line = 38;
            format_value_12695002(fmt_res_12690240, 0, (row_12690230["Field1"] * 2.5600000000000000e+02), []);
            F.line = 38;
            if (fmt_res_12690240[0] != null) { fmt_res_12690240[0] = (fmt_res_12690240[0]).concat(makeNimstrLit(", ")); } else { fmt_res_12690240[0] = makeNimstrLit(", "); };
            F.line = 38;
            format_value_12695002(fmt_res_12690240, 0, (row_12690230["Field2"] * 2.5600000000000000e+02), []);
            F.line = 38;
            if (fmt_res_12690240[0] != null) { fmt_res_12690240[0] = (fmt_res_12690240[0]).concat(makeNimstrLit(")")); } else { fmt_res_12690240[0] = makeNimstrLit(")"); };
            var row_jarray_12715014 = HEX25_12710144([HEX25_11585768((i_12690229 / subInt((map_12680535.rawColors != null ? map_12680535.rawColors.length : 0), 1))), HEX25_11585683(fmt_res_12690240[0])]);
            F.line = 39;
            add_11475020(result_12680536, row_jarray_12715014);
            F.line = 121;
            i_14075621 = addInt(i_14075621, 1);
            if (!(((map_12680535.rawColors != null ? map_12680535.rawColors.length : 0) == l_14075622))) {
            F.line = 122;
            failed_assert_impl_1267680(makeNimstrLit("/usr/lib/nim/system/iterators.nim(122, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_12680536;

}
function serialize_colormap_12792198(cmap_12792200, custom_color_map_12792201) {
  var result_12792202 = null;

  var F={procname:"api.serializeColormap",prev:framePtr,filename:"api.nim",line:0};
  framePtr = F;
    F.line = 115;
    switch (cmap_12792200) {
    case 1:
      if (!(!((custom_color_map_12792201 == null)))) {
      F.line = 117;
      failed_assert_impl_1267680(makeNimstrLit("/home/ritzo/.nimble/pkgs/plotly-0.2.1/plotly/api.nim(117, 5) `not customColorMap.isNil` CustomColorMap must not be nil if a custom map is desired!"));
      }
      
      F.line = 119;
      result_12792202 = make_plotly_custom_map_12680533(custom_color_map_12792201);
      break;
    default: 
      F.line = 121;
      result_12792202 = HEX25_11585683(reprEnum(cmap_12792200, NTI12661068));
      break;
    }
  framePtr = F.prev;

  return result_12792202;

}
function HEX25_11585785(b_11585787) {
  var result_11585788 = null;

  var F={procname:"json.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 306;
    result_11585788 = {kind: 1, bval: b_11585787, str: null, num: 0, fnum: 0.0, fields: ({data: null, counter: 0, first: 0, last: 0}), elems: null};
  framePtr = F.prev;

  return result_11585788;

}
function new_jobject_11426235() {
  var result_11426237 = null;

  var F={procname:"json.newJObject",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 210;
    result_11426237 = {kind: 5, fields: init_ordered_table_11426240(4), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
  framePtr = F.prev;

  return result_11426237;

}
function HEX25_11585802(key_vals_11585808) {
            var Tmp4;

  var result_11585809 = null;

  var F={procname:"json.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((key_vals_11585808 != null ? key_vals_11585808.length : 0) == 0)) {
    F.line = 310;
    result_11585809 = new_jarray_11445657();
    break BeforeRet;
    }
    
    F.line = 311;
    result_11585809 = new_jobject_11426235();
    L1: do {
      F.line = 312;
      var key_11585859 = null;
      F.line = 312;
      var val_11585860 = null;
      F.line = 3;
      var i_14075688 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_14075688 < (key_vals_11585808 != null ? key_vals_11585808.length : 0))) break L3;
            F.line = 312;
            key_11585859 = key_vals_11585808[chckIndx(i_14075688, 0, (key_vals_11585808 != null ? key_vals_11585808.length : 0)+0-1)-0]["Field0"];
            F.line = 5;
            val_11585860 = key_vals_11585808[chckIndx(i_14075688, 0, (key_vals_11585808 != null ? key_vals_11585808.length : 0)+0-1)-0]["Field1"];
            F.line = 312;
            var Tmp4 = result_11585809;
            if (ConstSet29[Tmp4.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
            HEX5BHEX5DHEX3D_11495311(Tmp4.fields, key_11585859, val_11585860);
            F.line = 6;
            i_14075688 = addInt(i_14075688, 1);
          }
      } while(false);
    } while(false);
  } while (false);
  framePtr = F.prev;

  return result_11585809;

}
function HEX5BHEX5DHEX3D_11586214(obj_11586216, key_11586217, val_11586218) {
    var Tmp1;

  var F={procname:"json.[]=",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if (!((obj_11586216.kind == 5))) {
    F.line = 346;
    failed_assert_impl_1267680(makeNimstrLit("/usr/lib/nim/pure/json.nim(346, 9) `obj.kind == JObject` "));
    }
    
    F.line = 347;
    var Tmp1 = obj_11586216;
    if (ConstSet34[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    HEX5BHEX5DHEX3D_11495311(Tmp1.fields, key_11586217, val_11586218);
  framePtr = F.prev;

  
}
function raw_get_11620157(t_11620161, key_11620162, hc_11620163, hc_11620163_Idx) {
            var Tmp3;

  var result_11620164 = 0;

  var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 63;
    hc_11620163[hc_11620163_Idx] = hash_10880214(key_11620162);
    if ((hc_11620163[hc_11620163_Idx] == 0)) {
    F.line = 65;
    hc_11620163[hc_11620163_Idx] = 314159265;
    }
    
    if (((t_11620161.data != null ? t_11620161.data.length : 0) == 0)) {
    F.line = 47;
    result_11620164 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_11630138 = (hc_11620163[hc_11620163_Idx] & (t_11620161.data != null ? (t_11620161.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_10902018(t_11620161.data[chckIndx(h_11630138, 0, (t_11620161.data != null ? t_11620161.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_11620161.data[chckIndx(h_11630138, 0, (t_11620161.data != null ? t_11620161.data.length : 0)+0-1)-0].Field0 == hc_11620163[hc_11620163_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_11620161.data[chckIndx(h_11630138, 0, (t_11620161.data != null ? t_11620161.data.length : 0)+0-1)-0].Field2, key_11620162);            }          if (Tmp3) {
          F.line = 55;
          result_11620164 = h_11630138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_11630138 = next_try_10905014(h_11630138, (t_11620161.data != null ? (t_11620161.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_11620164 = subInt(-1, h_11630138);
  } while (false);
  framePtr = F.prev;

  return result_11620164;

}
function HEX5BHEX5D_11620146(t_11620152, key_11620153) {
  var result_11620155 = null;
  var result_11620155_Idx = 0;

  var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 257;
    var hcHEX60gensym10920595_11620156 = [0];
    F.line = 258;
    var indexHEX60gensym10920596_11630605 = raw_get_11620157(t_11620152, key_11620153, hcHEX60gensym10920595_11620156, 0);
    if ((0 <= indexHEX60gensym10920596_11630605)) {
    F.line = 259;
    result_11620155 = t_11620152.data[chckIndx(indexHEX60gensym10920596_11630605, 0, (t_11620152.data != null ? t_11620152.data.length : 0)+0-1)-0]; result_11620155_Idx = "Field3";
    }
    else {
      F.line = 262;
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_11620153 || []), parent: null, m_type: NTI1169045, name: null, trace: null, up: null}, "KeyError");
    }
    
  framePtr = F.prev;

  return [result_11620155, result_11620155_Idx];

}
function HEX25_13040170(o_13040173) {
  var result_13040174 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 364;
    result_13040174 = HEX25_11585683(reprEnum(o_13040173, NTI12661050));
  framePtr = F.prev;

  return result_13040174;

}
function HEX25_13040312(o_13040315) {
  var result_13040316 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 364;
    result_13040316 = HEX25_11585683(reprEnum(o_13040315, NTI12661052));
  framePtr = F.prev;

  return result_13040316;

}
function rune_len_at_2293931(s_2293933, i_2293934) {
  var result_2293935 = 0;

  var F={procname:"unicode.runeLenAt",prev:framePtr,filename:"unicode.nim",line:0};
  framePtr = F;
    if ((s_2293933[chckIndx(i_2293934, 0, (s_2293933 != null ? s_2293933.length : 0)+0-1)-0] <= 127)) {
    F.line = 62;
    result_2293935 = 1;
    }
    else {
    if ((((s_2293933[chckIndx(i_2293934, 0, (s_2293933 != null ? s_2293933.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
    F.line = 63;
    result_2293935 = 2;
    }
    else {
    if ((((s_2293933[chckIndx(i_2293934, 0, (s_2293933 != null ? s_2293933.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
    F.line = 64;
    result_2293935 = 3;
    }
    else {
    if ((((s_2293933[chckIndx(i_2293934, 0, (s_2293933 != null ? s_2293933.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
    F.line = 65;
    result_2293935 = 4;
    }
    else {
    if ((((s_2293933[chckIndx(i_2293934, 0, (s_2293933 != null ? s_2293933.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
    F.line = 66;
    result_2293935 = 5;
    }
    else {
    if ((((s_2293933[chckIndx(i_2293934, 0, (s_2293933 != null ? s_2293933.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
    F.line = 67;
    result_2293935 = 6;
    }
    else {
      F.line = 68;
      result_2293935 = 1;
    }
    }}}}}
  framePtr = F.prev;

  return result_2293935;

}
function rune_offset_2915244(s_2915246, pos_2915247, start_2915248) {
  var result_2915249 = 0;

  var F={procname:"unicode.runeOffset",prev:framePtr,filename:"unicode.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 319;
    var i_2915251 = 0;
    F.line = 320;
    var o_2915252 = start_2915248;
    L1: do {
      F.line = 321;
        L2: while (true) {
        if (!(i_2915251 < pos_2915247)) break L2;
          F.line = 322;
          o_2915252 = addInt(o_2915252, chckRange(rune_len_at_2293931(s_2915246, o_2915252), 0, 2147483647));
          if (((s_2915246 != null ? s_2915246.length : 0) <= o_2915252)) {
          F.line = 324;
          result_2915249 = -1;
          break BeforeRet;
          }
          
          F.line = 325;
          i_2915251 = addInt(i_2915251, 1);
        }
    } while(false);
    F.line = 326;
    result_2915249 = o_2915252;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_2915249;

}
function format_value_12600080(result_12600083, result_12600083_Idx, value_12600084, specifier_12600085) {
  var F={procname:"strformat.formatValue",prev:framePtr,filename:"strformat.nim",line:0};
  framePtr = F;
    F.line = 502;
    var spec_12600086 = parse_standard_format_specifier_12555322(specifier_12600085, 0, false);
    F.line = 503;
    var value_12600087 = nimCopy(null, value_12600084, NTI1163014);
    F.line = 504;
    switch (spec_12600086.typ) {
    case 115:
    case 0:
      break;
    default: 
      F.line = 507;
      raiseException({message: (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_12600086.typ]), parent: null, m_type: NTI1169043, name: null, trace: null, up: null}, "ValueError");
      break;
    }
    if (!((spec_12600086.precision == -1))) {
    if ((spec_12600086.precision < nucruneLen(value_12600087))) {
    F.line = 512;
    (value_12600087 == null ? value_12600087 = mnewString(chckRange(rune_offset_2915244(value_12600087, chckRange(spec_12600086.precision, 0, 2147483647), 0), 0, 2147483647)) : value_12600087.length = chckRange(rune_offset_2915244(value_12600087, chckRange(spec_12600086.precision, 0, 2147483647), 0), 0, 2147483647));
    }
    
    }
    
    F.line = 513;
    if (result_12600083[result_12600083_Idx] != null) { result_12600083[result_12600083_Idx] = (result_12600083[result_12600083_Idx]).concat(align_string_12555222(value_12600087, spec_12600086.minimumWidth, spec_12600086.align, spec_12600086.fill)); } else { result_12600083[result_12600083_Idx] = align_string_12555222(value_12600087, spec_12600086.minimumWidth, spec_12600086.align, spec_12600086.fill).slice(); };
  framePtr = F.prev;

  
}
function HEX25_11585717(n_11585719) {
  var result_11585720 = null;

  var F={procname:"json.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 290;
    result_11585720 = {kind: 2, num: n_11585719, str: null, fnum: 0.0, bval: false, fields: ({data: null, counter: 0, first: 0, last: 0}), elems: null};
  framePtr = F.prev;

  return result_11585720;

}
function parse_histogram_fields_13035690(fields_13035693, t_13035695) {
    var Tmp1;
    var Tmp2;
    var Tmp3;
      var Tmp4;
    var Tmp5;
      var Tmp6;
      var Tmp7;
    var Tmp8;
    var Tmp9;
    var Tmp10;

  var F={procname:"parseHistogramFields.parseHistogramFields",prev:framePtr,filename:"api.nim",line:0};
  framePtr = F;
    F.line = 21;
    var Tmp1 = t_13035695;
    if (ConstSet41[Tmp1.type]===undefined) { raiseFieldError(makeNimstrLit("\'cumulative\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    HEX5BHEX5DHEX3D_11495311(fields_13035693, makeNimstrLit("cumulative"), HEX25_11585802([nimCopy(null, {Field0: makeNimstrLit("enabled"), Field1: HEX25_11585785(Tmp1.cumulative)}, NTI13035806)]));
    F.line = 24;
    var Tmp2 = t_13035695;
    if (ConstSet42[Tmp2.type]===undefined) { raiseFieldError(makeNimstrLit("\'histFunc\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    HEX5BHEX5DHEX3D_11495311(fields_13035693, makeNimstrLit("histfunc"), HEX25_13040170(Tmp2.histFunc));
    F.line = 25;
    var Tmp3 = t_13035695;
    if (ConstSet43[Tmp3.type]===undefined) { raiseFieldError(makeNimstrLit("\'histNorm\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    HEX5BHEX5DHEX3D_11495311(fields_13035693, makeNimstrLit("histnorm"), HEX25_13040312(Tmp3.histNorm));
    F.line = 29;
    var bars_13040344 = makeNimstrLit("x");
    if (((t_13035695.xs != null ? t_13035695.xs.length : 0) == 0)) {
    F.line = 31;
    bars_13040344 = nimCopy(null, makeNimstrLit("y"), NTI1163014);
    }
    
      var Tmp4 = t_13035695;
      if (ConstSet44[Tmp4.type]===undefined) { raiseFieldError(makeNimstrLit("\'nBins\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    if ((0 < Tmp4.nBins)) {
    F.line = 34;
    F.line = 34;
    var fmt_res_13040460 = [mnewString(0)];
    F.line = 34;
    if (fmt_res_13040460[0] != null) { fmt_res_13040460[0] = (fmt_res_13040460[0]).concat(makeNimstrLit("nbins")); } else { fmt_res_13040460[0] = makeNimstrLit("nbins"); };
    F.line = 34;
    format_value_12600080(fmt_res_13040460, 0, bars_13040344, []);
    var Tmp5 = t_13035695;
    if (ConstSet45[Tmp5.type]===undefined) { raiseFieldError(makeNimstrLit("\'nBins\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    HEX5BHEX5DHEX3D_11495311(fields_13035693, fmt_res_13040460[0], HEX25_11585717(Tmp5.nBins));
    F.line = 37;
    F.line = 37;
    var fmt_res_13045121 = [mnewString(0)];
    F.line = 37;
    if (fmt_res_13045121[0] != null) { fmt_res_13045121[0] = (fmt_res_13045121[0]).concat(makeNimstrLit("autobin")); } else { fmt_res_13045121[0] = makeNimstrLit("autobin"); };
    F.line = 37;
    format_value_12600080(fmt_res_13045121, 0, bars_13040344, []);
    HEX5BHEX5DHEX3D_11495311(fields_13035693, fmt_res_13045121[0], HEX25_11585785(true));
    }
    else {
      var Tmp6 = t_13035695;
      if (ConstSet46[Tmp6.type]===undefined) { raiseFieldError(makeNimstrLit("\'bins\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      var Tmp7 = t_13035695;
      if (ConstSet47[Tmp7.type]===undefined) { raiseFieldError(makeNimstrLit("\'bins\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    if (!((Tmp6.bins.Field0 == Tmp7.bins.Field1))) {
    F.line = 40;
    F.line = 40;
    var fmt_res_13050122 = [mnewString(0)];
    F.line = 40;
    format_value_12600080(fmt_res_13050122, 0, bars_13040344, []);
    F.line = 40;
    if (fmt_res_13050122[0] != null) { fmt_res_13050122[0] = (fmt_res_13050122[0]).concat(makeNimstrLit("bins")); } else { fmt_res_13050122[0] = makeNimstrLit("bins"); };
    var Tmp8 = t_13035695;
    if (ConstSet48[Tmp8.type]===undefined) { raiseFieldError(makeNimstrLit("\'bins\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    var Tmp9 = t_13035695;
    if (ConstSet49[Tmp9.type]===undefined) { raiseFieldError(makeNimstrLit("\'bins\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    var Tmp10 = t_13035695;
    if (ConstSet50[Tmp10.type]===undefined) { raiseFieldError(makeNimstrLit("\'binSize\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    HEX5BHEX5DHEX3D_11495311(fields_13035693, fmt_res_13050122[0], HEX25_11585802([nimCopy(null, {Field0: makeNimstrLit("start"), Field1: HEX25_11585768(Tmp8.bins.Field0)}, NTI13055003), nimCopy(null, {Field0: makeNimstrLit("end"), Field1: HEX25_11585768(Tmp9.bins.Field1)}, NTI13055003), nimCopy(null, {Field0: makeNimstrLit("size"), Field1: HEX25_11585768(Tmp10.binSize)}, NTI13055003)]));
    F.line = 46;
    F.line = 46;
    var fmt_res_13070169 = [mnewString(0)];
    F.line = 46;
    if (fmt_res_13070169[0] != null) { fmt_res_13070169[0] = (fmt_res_13070169[0]).concat(makeNimstrLit("autobin")); } else { fmt_res_13070169[0] = makeNimstrLit("autobin"); };
    F.line = 46;
    format_value_12600080(fmt_res_13070169, 0, bars_13040344, []);
    HEX5BHEX5DHEX3D_11495311(fields_13035693, fmt_res_13070169[0], HEX25_11585785(false));
    }
    }
  framePtr = F.prev;

  
}
function new_seq_13075334(len_13075337) {
  var result_13075339 = null;

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 643;
    result_13075339 = new Array(len_13075337); for (var i=0;i<len_13075337;++i) {result_13075339[i]=0.0;}  framePtr = F.prev;

  return result_13075339;

}
function repeat_13075326(x_13075329, n_13075330) {
  var result_13075332 = null;

  var F={procname:"repeat.repeat",prev:framePtr,filename:"sequtils.nim",line:0};
  framePtr = F;
    F.line = 173;
    result_13075332 = nimCopy(null, new_seq_13075334(n_13075330), NTI13075338);
    L1: do {
      F.line = 174;
      var i_13075367 = 0;
      F.line = 104;
      var colontmp__14075712 = 0;
      F.line = 174;
      colontmp__14075712 = n_13075330;
      F.line = 106;
      var i_14075713 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_14075713 < colontmp__14075712)) break L3;
            F.line = 174;
            i_13075367 = i_14075713;
            F.line = 175;
            result_13075332[chckIndx(i_13075367, 0, (result_13075332 != null ? result_13075332.length : 0)+0-1)-0] = x_13075329;
            F.line = 109;
            i_14075713 = addInt(i_14075713, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_13075332;

}
function HEX5BHEX5DHEX3D_13085042(s_13085047, i_13085048, x_13085049) {
  var F={procname:"[]=.[]=",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2527;
    s_13085047[chckIndx(subInt((s_13085047 != null ? s_13085047.length : 0), i_13085048), 0, (s_13085047 != null ? s_13085047.length : 0)+0-1)-0] = x_13085049;
  framePtr = F.prev;

  
}
function HEX5BHEX5D_13085003(s_13085008, i_13085009) {
  var result_13085011 = null;
  var result_13085011_Idx = 0;

  var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2522;
    result_13085011 = s_13085008; result_13085011_Idx = chckIndx(subInt((s_13085008 != null ? s_13085008.length : 0), i_13085009), 0, (s_13085008 != null ? s_13085008.length : 0)+0-1)-0;
  framePtr = F.prev;

  return [result_13085011, result_13085011_Idx];

}
function calc_bin_width_13075313(t_13075317) {
      var Tmp1;
    var Tmp2;
      var Tmp3;
      var Tmp4;
    var Tmp5;
      var Tmp6;
      var Tmp7;
        var Tmp8;
    var Tmp12;

  var result_13075318 = null;

  var F={procname:"calcBinWidth.calcBinWidth",prev:framePtr,filename:"api.nim",line:0};
  framePtr = F;
      var Tmp1 = t_13075317;
      if (ConstSet51[Tmp1.type]===undefined) { raiseFieldError(makeNimstrLit("\'width\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    if ((0.0 < Tmp1.width)) {
    F.line = 55;
    var Tmp2 = t_13075317;
    if (ConstSet52[Tmp2.type]===undefined) { raiseFieldError(makeNimstrLit("\'width\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    result_13075318 = nimCopy(null, repeat_13075326(Tmp2.width, chckRange((t_13075317.ys != null ? t_13075317.ys.length : 0), 0, 2147483647)), NTI13075331);
    }
    else {
      var Tmp3 = t_13075317;
      if (ConstSet53[Tmp3.type]===undefined) { raiseFieldError(makeNimstrLit("\'widths\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    if ((0 < ((Tmp4 = Tmp3.widths, Tmp4) != null ? Tmp4.length : 0))) {
    F.line = 60;
    var Tmp5 = t_13075317;
    if (ConstSet54[Tmp5.type]===undefined) { raiseFieldError(makeNimstrLit("\'widths\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    result_13075318 = nimCopy(null, Tmp5.widths, NTI12996151);
    }
    else {
      var Tmp7 = t_13075317;
      if (ConstSet55[Tmp7.type]===undefined) { raiseFieldError(makeNimstrLit("\'align\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      if ((Tmp7.align == 1)) Tmp6 = true; else {        var Tmp8 = t_13075317;
        if (ConstSet56[Tmp8.type]===undefined) { raiseFieldError(makeNimstrLit("\'autoWidth\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
        Tmp6 = Tmp8.autoWidth;      }    if (Tmp6) {
    F.line = 63;
    result_13075318 = nimCopy(null, new_seq_13075334(chckRange((t_13075317.ys != null ? t_13075317.ys.length : 0), 0, 2147483647)), NTI13075338);
    L9: do {
      F.line = 64;
      var i_13075434 = 0;
      F.line = 104;
      var colontmp__14075706 = 0;
      F.line = 64;
      colontmp__14075706 = (t_13075317.xs != null ? (t_13075317.xs.length-1) : -1);
      F.line = 106;
      var i_14075707 = 0;
      L10: do {
        F.line = 107;
          L11: while (true) {
          if (!(i_14075707 < colontmp__14075706)) break L11;
            F.line = 64;
            i_13075434 = i_14075707;
            F.line = 65;
            result_13075318[chckIndx(i_13075434, 0, (result_13075318 != null ? result_13075318.length : 0)+0-1)-0] = (t_13075317.xs[chckIndx(addInt(i_13075434, 1), 0, (t_13075317.xs != null ? t_13075317.xs.length : 0)+0-1)-0] - t_13075317.xs[chckIndx(i_13075434, 0, (t_13075317.xs != null ? t_13075317.xs.length : 0)+0-1)-0]);
            F.line = 109;
            i_14075707 = addInt(i_14075707, 1);
          }
      } while(false);
    } while(false);
    if (((t_13075317.xs != null ? t_13075317.xs.length : 0) == (t_13075317.ys != null ? t_13075317.ys.length : 0))) {
    F.line = 68;
    HEX5BHEX5DHEX3D_13085042(result_13075318, 1, (Tmp12 = HEX5BHEX5D_13085003(result_13075318, 2), Tmp12)[0][Tmp12[1]]);
    }
    
    }
    }}
  framePtr = F.prev;

  return result_13075318;

}
function set_width_field_13085216(fields_13085219, t_13085221, widths_13085222) {
      var Tmp1;
    var Tmp2;
      var Tmp3;
      var Tmp4;
    var Tmp5;
      var Tmp6;

  var F={procname:"setWidthField.setWidthField",prev:framePtr,filename:"api.nim",line:0};
  framePtr = F;
      var Tmp1 = t_13085221;
      if (ConstSet57[Tmp1.type]===undefined) { raiseFieldError(makeNimstrLit("\'width\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    if ((0.0 < Tmp1.width)) {
    F.line = 78;
    var Tmp2 = t_13085221;
    if (ConstSet58[Tmp2.type]===undefined) { raiseFieldError(makeNimstrLit("\'width\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    HEX5BHEX5DHEX3D_11495311(fields_13085219, makeNimstrLit("width"), HEX25_11585768(Tmp2.width));
    }
    else {
      var Tmp3 = t_13085221;
      if (ConstSet59[Tmp3.type]===undefined) { raiseFieldError(makeNimstrLit("\'widths\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    if ((0 < ((Tmp4 = Tmp3.widths, Tmp4) != null ? Tmp4.length : 0))) {
    F.line = 80;
    var Tmp5 = t_13085221;
    if (ConstSet60[Tmp5.type]===undefined) { raiseFieldError(makeNimstrLit("\'widths\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    HEX5BHEX5DHEX3D_11495311(fields_13085219, makeNimstrLit("width"), HEX25_12825116(Tmp5.widths));
    }
    else {
      var Tmp6 = t_13085221;
      if (ConstSet61[Tmp6.type]===undefined) { raiseFieldError(makeNimstrLit("\'autoWidth\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    if (Tmp6.autoWidth) {
    F.line = 82;
    HEX5BHEX5DHEX3D_11495311(fields_13085219, makeNimstrLit("width"), HEX25_12825116(widths_13085222));
    }
    }}
  framePtr = F.prev;

  
}
function shift_to_left_edge_13085847(t_13085851, widths_13085852) {
  var result_13085853 = null;

  var F={procname:"shiftToLeftEdge.shiftToLeftEdge",prev:framePtr,filename:"api.nim",line:0};
  framePtr = F;
    F.line = 87;
    result_13085853 = nimCopy(null, new_seq_13075334(chckRange((t_13085851.ys != null ? t_13085851.ys.length : 0), 0, 2147483647)), NTI13075338);
    L1: do {
      F.line = 88;
      var i_13085879 = 0;
      F.line = 66;
      var colontmp__14075720 = 0;
      F.line = 88;
      colontmp__14075720 = (widths_13085852 != null ? (widths_13085852.length-1) : -1);
      F.line = 77;
      var res_14075721 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_14075721 <= colontmp__14075720)) break L3;
            F.line = 88;
            i_13085879 = res_14075721;
            F.line = 89;
            result_13085853[chckIndx(i_13085879, 0, (result_13085853 != null ? result_13085853.length : 0)+0-1)-0] = (t_13085851.xs[chckIndx(i_13085879, 0, (t_13085851.xs != null ? t_13085851.xs.length : 0)+0-1)-0] + (widths_13085852[chckIndx(i_13085879, 0, (widths_13085852 != null ? widths_13085852.length : 0)+0-1)-0] / 2.0000000000000000e+00));
            F.line = 80;
            res_14075721 = addInt(res_14075721, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_13085853;

}
function HEX25_12860231(o_12860234) {
  var result_12860235 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 364;
    result_12860235 = HEX25_11585683(reprEnum(o_12860234, NTI12661062));
  framePtr = F.prev;

  return result_12860235;

}
function parse_bar_fields_13075184(fields_13075187, t_13075189) {
    var Tmp1;
    var Tmp2;
      var Tmp3;

  var F={procname:"parseBarFields.parseBarFields",prev:framePtr,filename:"api.nim",line:0};
  framePtr = F;
    F.line = 94;
    var widths_13085092 = calc_bin_width_13075313(t_13075189);
    F.line = 95;
    set_width_field_13085216(fields_13075187, t_13075189, widths_13085092);
    F.line = 96;
    var Tmp1 = t_13075189;
    if (ConstSet62[Tmp1.type]===undefined) { raiseFieldError(makeNimstrLit("\'align\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    switch (Tmp1.align) {
    case 1:
      F.line = 99;
      HEX5BHEX5DHEX3D_11495311(fields_13075187, makeNimstrLit("x"), HEX25_12825116(shift_to_left_edge_13085847(t_13075189, widths_13085092)));
      break;
    case 2:
      F.line = 102;
      HEX5BHEX5DHEX3D_11495311(fields_13075187, makeNimstrLit("x"), HEX25_12825116(t_13075189.xs));
      break;
    default: 
      break;
    }
    F.line = 105;
    var Tmp2 = t_13075189;
    if (ConstSet63[Tmp2.type]===undefined) { raiseFieldError(makeNimstrLit("\'orientation\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
    switch (Tmp2.orientation) {
    case 1:
    case 2:
      F.line = 107;
      var Tmp3 = t_13075189;
      if (ConstSet64[Tmp3.type]===undefined) { raiseFieldError(makeNimstrLit("\'orientation\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13075187, makeNimstrLit("orientation"), HEX25_12860231(Tmp3.orientation));
      break;
    default: 
      break;
    }
  framePtr = F.prev;

  
}
function HEX3DHEX3D_12667045(x_12667048, y_12667049) {
  var result_12667050 = false;

  var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (!((x_12667048.r == y_12667049.r))) {
    F.line = 1791;
    result_12667050 = false;
    break BeforeRet;
    }
    
    if (!((x_12667048.g == y_12667049.g))) {
    F.line = 1791;
    result_12667050 = false;
    break BeforeRet;
    }
    
    if (!((x_12667048.b == y_12667049.b))) {
    F.line = 1791;
    result_12667050 = false;
    break BeforeRet;
    }
    
    if (!((x_12667048.a == y_12667049.a))) {
    F.line = 1791;
    result_12667050 = false;
    break BeforeRet;
    }
    
    F.line = 1792;
    result_12667050 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_12667050;

}
function empty_12667025() {
  var result_12667027 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  var F={procname:"color.empty",prev:framePtr,filename:"color.nim",line:0};
  framePtr = F;
    F.line = 18;
    nimCopy(result_12667027, {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, NTI12134003);
  framePtr = F.prev;

  return result_12667027;

}
function is_empty_12667041(c_12667043) {
  var result_12667044 = false;

  var F={procname:"color.isEmpty",prev:framePtr,filename:"color.nim",line:0};
  framePtr = F;
    F.line = 23;
    result_12667044 = HEX3DHEX3D_12667045(c_12667043, empty_12667025());
  framePtr = F.prev;

  return result_12667044;

}
function HEX5BHEX5D_12245068(s_12245072, x_12245074) {
  var result_12245075 = null;

  var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2436;
    var a_12245201 = subInt((s_12245072 != null ? s_12245072.length : 0), x_12245074.a);
    F.line = 2437;
    var l_12245401 = addInt(subInt(subInt((s_12245072 != null ? s_12245072.length : 0), x_12245074.b), a_12245201), 1);
    F.line = 2438;
    result_12245075 = nimCopy(null, mnewString(chckRange(l_12245401, 0, 2147483647)), NTI1163014);
    L1: do {
      F.line = 2439;
      var i_12245409 = 0;
      F.line = 106;
      var i_14075733 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_14075733 < l_12245401)) break L3;
            F.line = 2439;
            i_12245409 = i_14075733;
            F.line = 2439;
            result_12245075[chckIndx(i_12245409, 0, (result_12245075 != null ? result_12245075.length : 0)+0-1)-0] = s_12245072[chckIndx(addInt(i_12245409, a_12245201), 0, (s_12245072 != null ? s_12245072.length : 0)+0-1)-0];
            F.line = 109;
            i_14075733 = addInt(i_14075733, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_12245075;

}
function to_hex_12201063(x_12201066) {
  var result_12201067 = null;

  var F={procname:"toHex.toHex",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 945;
    result_12201067 = nimCopy(null, nsuToHex(x_12201066, 8), NTI1163014);
  framePtr = F.prev;

  return result_12201067;

}
function to_hex_12201059(a_12201061) {
  var result_12201062 = null;

  var F={procname:"chroma.toHex",prev:framePtr,filename:"chroma.nim",line:0};
  framePtr = F;
    F.line = 13;
    result_12201062 = nimCopy(null, to_hex_12201063(((a_12201061)|0)), NTI1163014);
  framePtr = F.prev;

  return result_12201062;

}
function HEX2EHEX2E_12245001(a_12245006, b_12245008) {
  var result_12245014 = ({a: 0, b: 0});

  var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 469;
    nimCopy(result_12245014, {a: a_12245006, b: b_12245008}, NTI12245011);
  framePtr = F.prev;

  return result_12245014;

}
function to_hex_12230217(c_12230219) {
    function pair_12230221(n_12230223) {
      var result_12230224 = null;

      var F={procname:"toHex.pair",prev:framePtr,filename:"chroma.nim",line:0};
      framePtr = F;
        F.line = 68;
        result_12230224 = nimCopy(null, HEX5BHEX5D_12245068(to_hex_12201059((n_12230223 * 2.5500000000000000e+02)), HEX2EHEX2E_12245001(2, 1)), NTI1163014);
      framePtr = F.prev;

      return result_12230224;

    }

  var result_12230220 = null;

  var F={procname:"chroma.toHex",prev:framePtr,filename:"chroma.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 69;
    result_12230220 = nimCopy(null, (pair_12230221(c_12230219.r) || []).concat(pair_12230221(c_12230219.g) || [],pair_12230221(c_12230219.b) || []), NTI1163014);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_12230220;

}
function to_html_hex_12300049(c_12300051) {
  var result_12300052 = null;

  var F={procname:"chroma.toHtmlHex",prev:framePtr,filename:"chroma.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 113;
    result_12300052 = nimCopy(null, [35].concat(to_hex_12230217(c_12300051) || []), NTI1163014);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_12300052;

}
function HEX25_13086523(b_13086526) {
      var Tmp1;
      var Tmp2;
      var Tmp3;
      var Tmp4;
      var Tmp5;
      var Tmp6;
      var Tmp7;
      var Tmp8;
      var Tmp9;

  var result_13086527 = null;

  var F={procname:"%.%",prev:framePtr,filename:"api.nim",line:0};
  framePtr = F;
    F.line = 238;
    var fields_13086536 = [init_ordered_table_11426240(4)];
    F.line = 239;
    HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("visible"), HEX25_11585785(b_13086526.visible));
    if (!(is_empty_12667041(b_13086526.color))) {
    F.line = 241;
    HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("color"), HEX25_11585683(to_html_hex_12300049(b_13086526.color)));
    }
    
    if ((0.0 < b_13086526.thickness)) {
    F.line = 243;
    HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("thickness"), HEX25_11585768(b_13086526.thickness));
    }
    
    if ((0.0 < b_13086526.width)) {
    F.line = 245;
    HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("width"), HEX25_11585768(b_13086526.width));
    }
    
    F.line = 246;
    switch (b_13086526.kind) {
    case 0:
      F.line = 248;
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("symmetric"), HEX25_11585785(true));
      F.line = 249;
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("type"), HEX25_11585683(makeNimstrLit("constant")));
      F.line = 250;
      var Tmp1 = b_13086526;
      if (ConstSet67[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'value\' is not accessible using discriminant \'kind\' of type \'ErrorBar\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("value"), HEX25_11585768(Tmp1.value));
      break;
    case 1:
      F.line = 252;
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("symmetric"), HEX25_11585785(false));
      F.line = 253;
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("type"), HEX25_11585683(makeNimstrLit("constant")));
      F.line = 254;
      var Tmp2 = b_13086526;
      if (ConstSet68[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("\'valueMinus\' is not accessible using discriminant \'kind\' of type \'ErrorBar\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("valueminus"), HEX25_11585768(Tmp2.valueMinus));
      F.line = 255;
      var Tmp3 = b_13086526;
      if (ConstSet69[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("\'valuePlus\' is not accessible using discriminant \'kind\' of type \'ErrorBar\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("value"), HEX25_11585768(Tmp3.valuePlus));
      break;
    case 2:
      F.line = 257;
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("symmetric"), HEX25_11585785(true));
      F.line = 258;
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("type"), HEX25_11585683(makeNimstrLit("percent")));
      F.line = 259;
      var Tmp4 = b_13086526;
      if (ConstSet70[Tmp4.kind]===undefined) { raiseFieldError(makeNimstrLit("\'percent\' is not accessible using discriminant \'kind\' of type \'ErrorBar\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("value"), HEX25_11585768(Tmp4.percent));
      break;
    case 3:
      F.line = 261;
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("symmetric"), HEX25_11585785(false));
      F.line = 262;
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("type"), HEX25_11585683(makeNimstrLit("percent")));
      F.line = 263;
      var Tmp5 = b_13086526;
      if (ConstSet71[Tmp5.kind]===undefined) { raiseFieldError(makeNimstrLit("\'percentMinus\' is not accessible using discriminant \'kind\' of type \'ErrorBar\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("valueminus"), HEX25_11585768(Tmp5.percentMinus));
      F.line = 264;
      var Tmp6 = b_13086526;
      if (ConstSet72[Tmp6.kind]===undefined) { raiseFieldError(makeNimstrLit("\'percentPlus\' is not accessible using discriminant \'kind\' of type \'ErrorBar\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("value"), HEX25_11585768(Tmp6.percentPlus));
      break;
    case 4:
      F.line = 266;
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("type"), HEX25_11585683(makeNimstrLit("sqrt")));
      break;
    case 5:
      F.line = 268;
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("symmetric"), HEX25_11585785(true));
      F.line = 269;
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("type"), HEX25_11585683(makeNimstrLit("data")));
      F.line = 270;
      var Tmp7 = b_13086526;
      if (ConstSet73[Tmp7.kind]===undefined) { raiseFieldError(makeNimstrLit("\'errors\' is not accessible using discriminant \'kind\' of type \'ErrorBar\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("array"), HEX25_12825116(Tmp7.errors));
      break;
    case 6:
      F.line = 272;
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("symmetric"), HEX25_11585785(false));
      F.line = 273;
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("type"), HEX25_11585683(makeNimstrLit("data")));
      F.line = 274;
      var Tmp8 = b_13086526;
      if (ConstSet74[Tmp8.kind]===undefined) { raiseFieldError(makeNimstrLit("\'errorsMinus\' is not accessible using discriminant \'kind\' of type \'ErrorBar\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("arrayminus"), HEX25_12825116(Tmp8.errorsMinus));
      F.line = 275;
      var Tmp9 = b_13086526;
      if (ConstSet75[Tmp9.kind]===undefined) { raiseFieldError(makeNimstrLit("\'errorsPlus\' is not accessible using discriminant \'kind\' of type \'ErrorBar\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13086536[0], makeNimstrLit("array"), HEX25_12825116(Tmp9.errorsPlus));
      break;
    }
    F.line = 276;
    result_13086527 = {kind: 5, fields: nimCopy(null, fields_13086536[0], NTI11426067), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
  framePtr = F.prev;

  return result_13086527;

}
function HEX25_13089977(o_13089980) {
  var result_13089981 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 364;
    result_13089981 = HEX25_11585683(reprEnum(o_13089980, NTI12661056));
  framePtr = F.prev;

  return result_13089981;

}
function HEX25_13090119(o_13090122) {
  var result_13090123 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 364;
    result_13090123 = HEX25_11585683(reprEnum(o_13090122, NTI12661048));
  framePtr = F.prev;

  return result_13090123;

}
function HEX25_12800219(c_12800221) {
  var result_12800222 = null;

  var F={procname:"api.%",prev:framePtr,filename:"api.nim",line:0};
  framePtr = F;
    F.line = 124;
    result_12800222 = HEX25_11585683(to_html_hex_12300049(c_12800221));
  framePtr = F.prev;

  return result_12800222;

}
function HEX25_13091082(elements_13091086) {
  var result_13091087 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 318;
    result_13091087 = new_jarray_11445657();
    L1: do {
      F.line = 319;
      var elem_13091118 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});
      F.line = 3;
      var i_14075742 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_14075742 < (elements_13091086 != null ? elements_13091086.length : 0))) break L3;
            F.line = 319;
            nimCopy(elem_13091118, elements_13091086[chckIndx(i_14075742, 0, (elements_13091086 != null ? elements_13091086.length : 0)+0-1)-0], NTI12134003);
            F.line = 319;
            add_11475020(result_13091087, HEX25_12800219(elem_13091118));
            F.line = 6;
            i_14075742 = addInt(i_14075742, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_13091087;

}
function HEX25_13090567(m_13090570) {
  var result_13090571 = null;

  var F={procname:"%.%",prev:framePtr,filename:"api.nim",line:0};
  framePtr = F;
    F.line = 367;
    var fields_13090580 = [init_ordered_table_11426240(8)];
    if ((0 < (m_13090570.size != null ? m_13090570.size.length : 0))) {
    if (((m_13090570.size != null ? m_13090570.size.length : 0) == 1)) {
    F.line = 370;
    HEX5BHEX5DHEX3D_11495311(fields_13090580[0], makeNimstrLit("size"), HEX25_11585768(m_13090570.size[chckIndx(0, 0, (m_13090570.size != null ? m_13090570.size.length : 0)+0-1)-0]));
    }
    else {
      F.line = 372;
    HEX5BHEX5DHEX3D_11495311(fields_13090580[0], makeNimstrLit("size"), HEX25_12825116(m_13090570.size));
    }
    
    }
    
    if ((0 < (m_13090570.color != null ? m_13090570.color.length : 0))) {
    if (((m_13090570.color != null ? m_13090570.color.length : 0) == 1)) {
    F.line = 375;
    HEX5BHEX5DHEX3D_11495311(fields_13090580[0], makeNimstrLit("color"), HEX25_12800219(m_13090570.color[chckIndx(0, 0, (m_13090570.color != null ? m_13090570.color.length : 0)+0-1)-0]));
    }
    else {
      F.line = 377;
    HEX5BHEX5DHEX3D_11495311(fields_13090580[0], makeNimstrLit("color"), HEX25_13091082(m_13090570.color));
    }
    
    }
    else {
    if ((0 < (m_13090570.colorVals != null ? m_13090570.colorVals.length : 0))) {
    F.line = 379;
    HEX5BHEX5DHEX3D_11495311(fields_13090580[0], makeNimstrLit("color"), HEX25_12825116(m_13090570.colorVals));
    F.line = 380;
    HEX5BHEX5DHEX3D_11495311(fields_13090580[0], makeNimstrLit("colorscale"), serialize_colormap_12792198(m_13090570.colormap, m_13090570.customColormap));
    F.line = 381;
    HEX5BHEX5DHEX3D_11495311(fields_13090580[0], makeNimstrLit("showscale"), HEX25_11585785(true));
    }
    }
    F.line = 383;
    result_13090571 = {kind: 5, fields: nimCopy(null, fields_13090580[0], NTI11426067), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
  framePtr = F.prev;

  return result_13090571;

}
function HEX25_13015338(t_13015341) {
      var Tmp1;
      var Tmp2;
      var Tmp3;
        var Tmp4;
        var Tmp5;
      var Tmp6;
      var Tmp7;
      var Tmp8;
      var Tmp9;
        var Tmp10;
        var Tmp11;
      var Tmp12;
      var Tmp13;
      var Tmp14;
        var Tmp15;
      var Tmp16;
        var Tmp17;
      var Tmp18;
      var Tmp19;
      var Tmp20;
      var Tmp21;
      var Tmp22;
        var Tmp23;
      var Tmp24;

  var result_13015342 = null;

  var F={procname:"%.%",prev:framePtr,filename:"api.nim",line:0};
  framePtr = F;
    F.line = 279;
    var fields_13015351 = [init_ordered_table_11426240(8)];
    if (((t_13015341.xs != null ? t_13015341.xs.length : 0) == 0)) {
      if (!(0 < (t_13015341.text != null ? t_13015341.text.length : 0))) Tmp1 = false; else {        Tmp1 = !((t_13015341.type == 3));      }    if (Tmp1) {
    F.line = 282;
    HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("x"), HEX25_13015478(t_13015341.text));
    }
    
    }
    else {
      F.line = 284;
    HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("x"), HEX25_12825116(t_13015341.xs));
    }
    
    if ((0 < (t_13015341.ys != null ? t_13015341.ys.length : 0))) {
    F.line = 287;
    HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("y"), HEX25_12825116(t_13015341.ys));
    }
    
    if (!(eqStrings(t_13015341.xaxis, []))) {
    F.line = 290;
    HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("xaxis"), HEX25_11585683(t_13015341.xaxis));
    }
    
    if (!(eqStrings(t_13015341.yaxis, []))) {
    F.line = 293;
    HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("yaxis"), HEX25_11585683(t_13015341.yaxis));
    }
    
    if (!((t_13015341.opacity == 0.0))) {
    F.line = 296;
    HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("opacity"), HEX25_11585768(t_13015341.opacity));
    }
    
    if (!(eqStrings(reprEnum(t_13015341.fill, NTI12661054), []))) {
    F.line = 299;
    HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("fill"), HEX25_13016248(t_13015341.fill));
    }
    
    F.line = 302;
    switch (t_13015341.type) {
    case 5:
    case 6:
      if ((0 < (t_13015341.zs != null ? t_13015341.zs.length : 0))) {
      F.line = 306;
      HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("z"), HEX25_13016398(t_13015341.zs));
      }
      
      F.line = 308;
      var Tmp2 = t_13015341;
      if (ConstSet19[Tmp2.type]===undefined) { raiseFieldError(makeNimstrLit("\'colormap\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      var Tmp3 = t_13015341;
      if (ConstSet20[Tmp3.type]===undefined) { raiseFieldError(makeNimstrLit("\'customColormap\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("colorscale"), serialize_colormap_12792198(Tmp2.colormap, Tmp3.customColormap));
        var Tmp4 = t_13015341;
        if (ConstSet21[Tmp4.type]===undefined) { raiseFieldError(makeNimstrLit("\'zmin\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
        var Tmp5 = t_13015341;
        if (ConstSet22[Tmp5.type]===undefined) { raiseFieldError(makeNimstrLit("\'zmax\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      if (!((Tmp4.zmin == Tmp5.zmax))) {
      F.line = 311;
      HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("zauto"), HEX25_11585785(false));
      F.line = 312;
      var Tmp6 = t_13015341;
      if (ConstSet23[Tmp6.type]===undefined) { raiseFieldError(makeNimstrLit("\'zmin\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("zmin"), HEX25_11585768(Tmp6.zmin));
      F.line = 313;
      var Tmp7 = t_13015341;
      if (ConstSet24[Tmp7.type]===undefined) { raiseFieldError(makeNimstrLit("\'zmax\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("zmax"), HEX25_11585768(Tmp7.zmax));
      }
      
      break;
    case 8:
      if ((0 < (t_13015341.zs != null ? t_13015341.zs.length : 0))) {
      F.line = 315;
      HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("z"), HEX25_13016398(t_13015341.zs));
      }
      
      F.line = 316;
      var Tmp8 = t_13015341;
      if (ConstSet25[Tmp8.type]===undefined) { raiseFieldError(makeNimstrLit("\'colorscale\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      var Tmp9 = t_13015341;
      if (ConstSet26[Tmp9.type]===undefined) { raiseFieldError(makeNimstrLit("\'customColorscale\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("colorscale"), serialize_colormap_12792198(Tmp8.colorscale, Tmp9.customColorscale));
        var Tmp10 = t_13015341;
        if (ConstSet27[Tmp10.type]===undefined) { raiseFieldError(makeNimstrLit("\'contours\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
        var Tmp11 = t_13015341;
        if (ConstSet28[Tmp11.type]===undefined) { raiseFieldError(makeNimstrLit("\'contours\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      if (!((Tmp10.contours.Field0 == Tmp11.contours.Field1))) {
      F.line = 318;
      HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("autocontour"), HEX25_11585785(false));
      F.line = 319;
      var Tmp12 = t_13015341;
      if (ConstSet30[Tmp12.type]===undefined) { raiseFieldError(makeNimstrLit("\'contours\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      var Tmp13 = t_13015341;
      if (ConstSet31[Tmp13.type]===undefined) { raiseFieldError(makeNimstrLit("\'contours\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      var Tmp14 = t_13015341;
      if (ConstSet32[Tmp14.type]===undefined) { raiseFieldError(makeNimstrLit("\'contours\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("contours"), HEX25_11585802([nimCopy(null, {Field0: makeNimstrLit("start"), Field1: HEX25_11585768(Tmp12.contours.Field0)}, NTI13017430), nimCopy(null, {Field0: makeNimstrLit("end"), Field1: HEX25_11585768(Tmp13.contours.Field1)}, NTI13017430), nimCopy(null, {Field0: makeNimstrLit("size"), Field1: HEX25_11585768(Tmp14.contours.Field2)}, NTI13017430)]));
      }
      else {
        F.line = 325;
        HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("autocontour"), HEX25_11585785(true));
        F.line = 326;
        HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("contours"), new_jobject_11426235());
      }
      
        var Tmp15 = t_13015341;
        if (ConstSet33[Tmp15.type]===undefined) { raiseFieldError(makeNimstrLit("\'heatmap\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      if (Tmp15.heatmap) {
      F.line = 328;
      HEX5BHEX5DHEX3D_11586214((Tmp16 = HEX5BHEX5D_11620146(fields_13015351[0], makeNimstrLit("contours")), Tmp16)[0][Tmp16[1]], makeNimstrLit("coloring"), HEX25_11585683(makeNimstrLit("heatmap")));
      }
      
        var Tmp17 = t_13015341;
        if (ConstSet35[Tmp17.type]===undefined) { raiseFieldError(makeNimstrLit("\'smoothing\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      if ((0.0 < Tmp17.smoothing)) {
      F.line = 330;
      var Tmp18 = t_13015341;
      if (ConstSet36[Tmp18.type]===undefined) { raiseFieldError(makeNimstrLit("\'smoothing\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("line"), HEX25_11585802([nimCopy(null, {Field0: makeNimstrLit("smoothing"), Field1: HEX25_11585768(Tmp18.smoothing)}, NTI13030566)]));
      }
      
      break;
    case 7:
      F.line = 334;
      var Tmp19 = t_13015341;
      if (ConstSet37[Tmp19.type]===undefined) { raiseFieldError(makeNimstrLit("\'open\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("open"), HEX25_12825116(Tmp19.open));
      F.line = 335;
      var Tmp20 = t_13015341;
      if (ConstSet38[Tmp20.type]===undefined) { raiseFieldError(makeNimstrLit("\'high\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("high"), HEX25_12825116(Tmp20.high));
      F.line = 336;
      var Tmp21 = t_13015341;
      if (ConstSet39[Tmp21.type]===undefined) { raiseFieldError(makeNimstrLit("\'low\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("low"), HEX25_12825116(Tmp21.low));
      F.line = 337;
      var Tmp22 = t_13015341;
      if (ConstSet40[Tmp22.type]===undefined) { raiseFieldError(makeNimstrLit("\'close\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("close"), HEX25_12825116(Tmp22.close));
      break;
    case 3:
      F.line = 339;
      parse_histogram_fields_13035690(fields_13015351[0], t_13015341);
      break;
    case 2:
      if ((0 < (t_13015341.xs != null ? t_13015341.xs.length : 0))) {
      F.line = 343;
      parse_bar_fields_13075184(fields_13015351[0], t_13015341);
      }
      
      break;
    case 0:
    case 1:
        var Tmp23 = t_13015341;
        if (ConstSet65[Tmp23.type]===undefined) { raiseFieldError(makeNimstrLit("\'lineWidth\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      if ((0 < Tmp23.lineWidth)) {
      F.line = 346;
      var Tmp24 = t_13015341;
      if (ConstSet66[Tmp24.type]===undefined) { raiseFieldError(makeNimstrLit("\'lineWidth\' is not accessible using discriminant \'type\' of type \'Trace\'")); }
      HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("line"), HEX25_11585802([nimCopy(null, {Field0: makeNimstrLit("width"), Field1: HEX25_11585717(Tmp24.lineWidth)}, NTI13086296)]));
      }
      
      break;
    default: 
      break;
    }
    if (!((t_13015341.xs_err == null))) {
    F.line = 351;
    HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("error_x"), HEX25_13086523(t_13015341.xs_err));
    }
    
    if (!((t_13015341.ys_err == null))) {
    F.line = 353;
    HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("error_y"), HEX25_13086523(t_13015341.ys_err));
    }
    
    F.line = 355;
    HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("mode"), HEX25_13089977(t_13015341.mode));
    F.line = 356;
    HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("type"), HEX25_13090119(t_13015341.type));
    if ((0 < (t_13015341.name != null ? t_13015341.name.length : 0))) {
    F.line = 358;
    HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("name"), HEX25_11585683(t_13015341.name));
    }
    
    if ((0 < (t_13015341.text != null ? t_13015341.text.length : 0))) {
    F.line = 360;
    HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("text"), HEX25_13015478(t_13015341.text));
    }
    
    if (!((t_13015341.marker == null))) {
    F.line = 362;
    HEX5BHEX5DHEX3D_11495311(fields_13015351[0], makeNimstrLit("marker"), HEX25_13090567(t_13015341.marker));
    }
    
    F.line = 364;
    result_13015342 = {kind: 5, fields: nimCopy(null, fields_13015351[0], NTI11426067), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
  framePtr = F.prev;

  return result_13015342;

}
function HEX25_13015252(elements_13015256) {
  var result_13015257 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 318;
    result_13015257 = new_jarray_11445657();
    L1: do {
      F.line = 319;
      var elem_13015288 = null;
      F.line = 3;
      var i_14075595 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_14075595 < (elements_13015256 != null ? elements_13015256.length : 0))) break L3;
            F.line = 319;
            elem_13015288 = elements_13015256[chckIndx(i_14075595, 0, (elements_13015256 != null ? elements_13015256.length : 0)+0-1)-0];
            F.line = 319;
            add_11475020(result_13015257, HEX25_13015338(elem_13015288));
            F.line = 6;
            i_14075595 = addInt(i_14075595, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_13015257;

}
function parse_traces_14062528(traces_14062533) {
  var result_14062534 = [null];

  var F={procname:"parseTraces.parseTraces",prev:framePtr,filename:"plotly_js.nim",line:0};
  framePtr = F;
    F.line = 25;
    to_ugly_11790035(result_14062534, 0, HEX25_13015252(traces_14062533));
  framePtr = F.prev;

  return result_14062534[0];

}
function len_11635341(n_11635343) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_11635344 = 0;

  var F={procname:"json.len",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 456;
    switch (n_11635343.kind) {
    case 6:
      F.line = 457;
      var Tmp1 = n_11635343;
      if (ConstSet76[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
      result_11635344 = ((Tmp2 = Tmp1.elems, Tmp2) != null ? Tmp2.length : 0);
      break;
    case 5:
      F.line = 458;
      var Tmp3 = n_11635343;
      if (ConstSet77[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
      result_11635344 = len_11605128(Tmp3.fields);
      break;
    default: 
      break;
    }
  framePtr = F.prev;

  return result_11635344;

}
function HEX24_11790416(node_11790418) {
  var result_11790419 = [null];

  var F={procname:"json.$",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 739;
    result_11790419[0] = nimCopy(null, mnewString(0), NTI1163014);
    F.line = 740;
    to_ugly_11790035(result_11790419, 0, node_11790418);
  framePtr = F.prev;

  return result_11790419[0];

}
function HEX25_12800237(f_12800239) {
  var result_12800240 = null;

  var F={procname:"api.%",prev:framePtr,filename:"api.nim",line:0};
  framePtr = F;
    F.line = 127;
    var fields_12800249 = [init_ordered_table_11426240(4)];
    if (!((f_12800239.size == 0))) {
    F.line = 129;
    HEX5BHEX5DHEX3D_11495311(fields_12800249[0], makeNimstrLit("size"), HEX25_11585717(f_12800239.size));
    }
    
    if (!(is_empty_12667041(f_12800239.color))) {
    F.line = 131;
    HEX5BHEX5DHEX3D_11495311(fields_12800249[0], makeNimstrLit("color"), HEX25_12800219(f_12800239.color));
    }
    
    if ((0 < (f_12800239.family != null ? f_12800239.family.length : 0))) {
    F.line = 133;
    HEX5BHEX5DHEX3D_11495311(fields_12800249[0], makeNimstrLit("family"), HEX25_11585683(f_12800239.family));
    }
    
    F.line = 134;
    result_12800240 = {kind: 5, fields: nimCopy(null, fields_12800249[0], NTI11426067), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
  framePtr = F.prev;

  return result_12800240;

}
function HEX25_12830116(o_12830119) {
  var result_12830120 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 364;
    result_12830120 = HEX25_11585683(reprEnum(o_12830119, NTI12661066));
  framePtr = F.prev;

  return result_12830120;

}
function HEX25_12835116(o_12835119) {
  var result_12835120 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 364;
    result_12835120 = HEX25_11585683(reprEnum(o_12835119, NTI12661074));
  framePtr = F.prev;

  return result_12835120;

}
function new_jnull_11426219() {
  var result_11426221 = null;

  var F={procname:"json.newJNull",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 206;
    result_11426221 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: ({data: null, counter: 0, first: 0, last: 0}), elems: null};
  framePtr = F.prev;

  return result_11426221;

}
function HEX25_12845129(o_12845132) {
  var result_12845133 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 351;
    result_12845133 = new_jobject_11426235();
    F.line = 352;
    HEX5BHEX5DHEX3D_11586214(result_12845133, makeNimstrLit("visible"), HEX25_11585785(o_12845132.visible));
  framePtr = F.prev;

  return result_12845133;

}
function HEX25_12845118(o_12845122) {
  var result_12845123 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if ((o_12845122 == null)) {
    F.line = 357;
    result_12845123 = new_jnull_11426219();
    }
    else {
      F.line = 359;
      result_12845123 = HEX25_12845129(o_12845122);
    }
    
  framePtr = F.prev;

  return result_12845123;

}
function HEX25_12810134(a_12810136) {
  var result_12810137 = null;

  var F={procname:"api.%",prev:framePtr,filename:"api.nim",line:0};
  framePtr = F;
    F.line = 137;
    var fields_12810146 = [init_ordered_table_11426240(4)];
    if ((0 < (a_12810136.title != null ? a_12810136.title.length : 0))) {
    F.line = 139;
    HEX5BHEX5DHEX3D_11495311(fields_12810146[0], makeNimstrLit("title"), HEX25_11585683(a_12810136.title));
    }
    
    if (!((a_12810136.font == null))) {
    F.line = 141;
    HEX5BHEX5DHEX3D_11495311(fields_12810146[0], makeNimstrLit("titlefont"), HEX25_12800237(a_12810136.font));
    }
    
    if ((0 < (a_12810136.domain != null ? a_12810136.domain.length : 0))) {
    F.line = 143;
    HEX5BHEX5DHEX3D_11495311(fields_12810146[0], makeNimstrLit("domain"), HEX25_12825116(a_12810136.domain));
    }
    
    if (!((a_12810136.side == 0))) {
    F.line = 145;
    HEX5BHEX5DHEX3D_11495311(fields_12810146[0], makeNimstrLit("side"), HEX25_12830116(a_12810136.side));
    F.line = 146;
    HEX5BHEX5DHEX3D_11495311(fields_12810146[0], makeNimstrLit("overlaying"), HEX25_11585683(makeNimstrLit("y")));
    }
    
    if (a_12810136.hideticklabels) {
    F.line = 148;
    HEX5BHEX5DHEX3D_11495311(fields_12810146[0], makeNimstrLit("showticklabels"), HEX25_11585785(false));
    }
    
    if (!((a_12810136.ty == 0))) {
    F.line = 150;
    HEX5BHEX5DHEX3D_11495311(fields_12810146[0], makeNimstrLit("type"), HEX25_12835116(a_12810136.ty));
    }
    
    if (!((a_12810136.range.Field0 == a_12810136.range.Field1))) {
    F.line = 153;
    HEX5BHEX5DHEX3D_11495311(fields_12810146[0], makeNimstrLit("autorange"), HEX25_11585785(false));
    F.line = 155;
    HEX5BHEX5DHEX3D_11495311(fields_12810146[0], makeNimstrLit("range"), HEX25_12825116([a_12810136.range.Field0, a_12810136.range.Field1]));
    }
    else {
      F.line = 157;
    HEX5BHEX5DHEX3D_11495311(fields_12810146[0], makeNimstrLit("autorange"), HEX25_11585785(true));
    }
    
    if (!((a_12810136.rangeslider == null))) {
    F.line = 160;
    HEX5BHEX5DHEX3D_11495311(fields_12810146[0], makeNimstrLit("rangeslider"), HEX25_12845118(a_12810136.rangeslider));
    }
    
    if (!(is_empty_12667041(a_12810136.gridColor))) {
    F.line = 163;
    HEX5BHEX5DHEX3D_11495311(fields_12810146[0], makeNimstrLit("gridcolor"), HEX25_12800219(a_12810136.gridColor));
    }
    
    if (!((a_12810136.gridWidth == 0))) {
    F.line = 165;
    HEX5BHEX5DHEX3D_11495311(fields_12810146[0], makeNimstrLit("gridwidth"), HEX25_11585717(a_12810136.gridWidth));
    }
    
    F.line = 167;
    result_12810137 = {kind: 5, fields: nimCopy(null, fields_12810146[0], NTI11426067), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
  framePtr = F.prev;

  return result_12810137;

}
function HEX25_12900116(o_12900119) {
  var result_12900120 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 364;
    result_12900120 = HEX25_11585683(reprEnum(o_12900119, NTI12661058));
  framePtr = F.prev;

  return result_12900120;

}
function HEX25_12850178(l_12850180) {
  var result_12850181 = null;

  var F={procname:"api.%",prev:framePtr,filename:"api.nim",line:0};
  framePtr = F;
    F.line = 170;
    var fields_12850190 = [init_ordered_table_11426240(4)];
    if (!((l_12850180.font == null))) {
    F.line = 172;
    HEX5BHEX5DHEX3D_11495311(fields_12850190[0], makeNimstrLit("font"), HEX25_12800237(l_12850180.font));
    }
    
    if (!(is_empty_12667041(l_12850180.backgroundColor))) {
    F.line = 174;
    HEX5BHEX5DHEX3D_11495311(fields_12850190[0], makeNimstrLit("bgcolor"), HEX25_12800219(l_12850180.backgroundColor));
    }
    
    if (!(is_empty_12667041(l_12850180.borderColor))) {
    F.line = 176;
    HEX5BHEX5DHEX3D_11495311(fields_12850190[0], makeNimstrLit("bordercolor"), HEX25_12800219(l_12850180.borderColor));
    }
    
    if (!((l_12850180.borderWidth == 0))) {
    F.line = 178;
    HEX5BHEX5DHEX3D_11495311(fields_12850190[0], makeNimstrLit("borderwidth"), HEX25_11585717(l_12850180.borderWidth));
    }
    
    F.line = 179;
    switch (l_12850180.orientation) {
    case 1:
    case 2:
      F.line = 181;
      HEX5BHEX5DHEX3D_11495311(fields_12850190[0], makeNimstrLit("orientation"), HEX25_12860231(l_12850180.orientation));
      break;
    default: 
      break;
    }
    F.line = 186;
    HEX5BHEX5DHEX3D_11495311(fields_12850190[0], makeNimstrLit("x"), HEX25_11585768(l_12850180.x));
    F.line = 187;
    HEX5BHEX5DHEX3D_11495311(fields_12850190[0], makeNimstrLit("y"), HEX25_11585768(l_12850180.y));
    F.line = 188;
    result_12850181 = {kind: 5, fields: nimCopy(null, fields_12850190[0], NTI11426067), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
  framePtr = F.prev;

  return result_12850181;

}
function HEX25_12910116(o_12910119) {
  var result_12910120 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 364;
    result_12910120 = HEX25_11585683(reprEnum(o_12910119, NTI12661064));
  framePtr = F.prev;

  return result_12910120;

}
function HEX25_12910313(o_12910316) {
  var result_12910317 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 351;
    result_12910317 = new_jobject_11426235();
    F.line = 352;
    HEX5BHEX5DHEX3D_11586214(result_12910317, makeNimstrLit("x"), HEX25_11585768(o_12910316.x));
    F.line = 352;
    HEX5BHEX5DHEX3D_11586214(result_12910317, makeNimstrLit("xshift"), HEX25_11585768(o_12910316.xshift));
    F.line = 352;
    HEX5BHEX5DHEX3D_11586214(result_12910317, makeNimstrLit("y"), HEX25_11585768(o_12910316.y));
    F.line = 352;
    HEX5BHEX5DHEX3D_11586214(result_12910317, makeNimstrLit("yshift"), HEX25_11585768(o_12910316.yshift));
    F.line = 352;
    HEX5BHEX5DHEX3D_11586214(result_12910317, makeNimstrLit("text"), HEX25_11585683(o_12910316.text));
    F.line = 352;
    HEX5BHEX5DHEX3D_11586214(result_12910317, makeNimstrLit("showarrow"), HEX25_11585785(o_12910316.showarrow));
  framePtr = F.prev;

  return result_12910317;

}
function HEX25_12910302(o_12910306) {
  var result_12910307 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if ((o_12910306 == null)) {
    F.line = 357;
    result_12910307 = new_jnull_11426219();
    }
    else {
      F.line = 359;
      result_12910307 = HEX25_12910313(o_12910306);
    }
    
  framePtr = F.prev;

  return result_12910307;

}
function HEX25_12910264(elements_12910268) {
  var result_12910269 = null;

  var F={procname:"%.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 318;
    result_12910269 = new_jarray_11445657();
    L1: do {
      F.line = 319;
      var elem_12910300 = null;
      F.line = 3;
      var i_14075752 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_14075752 < (elements_12910268 != null ? elements_12910268.length : 0))) break L3;
            F.line = 319;
            elem_12910300 = elements_12910268[chckIndx(i_14075752, 0, (elements_12910268 != null ? elements_12910268.length : 0)+0-1)-0];
            F.line = 319;
            add_11475020(result_12910269, HEX25_12910302(elem_12910300));
            F.line = 6;
            i_14075752 = addInt(i_14075752, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_12910269;

}
function HEX25_12860515(l_12860517) {
  var result_12860518 = null;

  var F={procname:"api.%",prev:framePtr,filename:"api.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 191;
    var fields_12860527 = [init_ordered_table_11426240(4)];
    if ((l_12860517 == null)) {
    F.line = 193;
    result_12860518 = {kind: 5, fields: nimCopy(null, fields_12860527[0], NTI11426067), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
    break BeforeRet;
    }
    
    if (!(eqStrings(l_12860517.title, []))) {
    F.line = 195;
    HEX5BHEX5DHEX3D_11495311(fields_12860527[0], makeNimstrLit("title"), HEX25_11585683(l_12860517.title));
    }
    
    if (!((l_12860517.width == 0))) {
    F.line = 197;
    HEX5BHEX5DHEX3D_11495311(fields_12860527[0], makeNimstrLit("width"), HEX25_11585717(l_12860517.width));
    }
    
    if (!((l_12860517.font == null))) {
    F.line = 199;
    HEX5BHEX5DHEX3D_11495311(fields_12860527[0], makeNimstrLit("font"), HEX25_12800237(l_12860517.font));
    }
    
    if (!((l_12860517.height == 0))) {
    F.line = 201;
    HEX5BHEX5DHEX3D_11495311(fields_12860527[0], makeNimstrLit("height"), HEX25_11585717(l_12860517.height));
    }
    
    if (!((l_12860517.xaxis == null))) {
    F.line = 203;
    HEX5BHEX5DHEX3D_11495311(fields_12860527[0], makeNimstrLit("xaxis"), HEX25_12810134(l_12860517.xaxis));
    }
    
    if (!((l_12860517.yaxis == null))) {
    F.line = 205;
    HEX5BHEX5DHEX3D_11495311(fields_12860527[0], makeNimstrLit("yaxis"), HEX25_12810134(l_12860517.yaxis));
    }
    
    if (!((l_12860517.yaxis2 == null))) {
    F.line = 207;
    HEX5BHEX5DHEX3D_11495311(fields_12860527[0], makeNimstrLit("yaxis2"), HEX25_12810134(l_12860517.yaxis2));
    }
    
    if (!(eqStrings(reprEnum(l_12860517.barmode, NTI12661058), []))) {
    F.line = 209;
    HEX5BHEX5DHEX3D_11495311(fields_12860527[0], makeNimstrLit("barmode"), HEX25_12900116(l_12860517.barmode));
    }
    
    if (!((l_12860517.legend == null))) {
    F.line = 211;
    HEX5BHEX5DHEX3D_11495311(fields_12860527[0], makeNimstrLit("legend"), HEX25_12850178(l_12860517.legend));
    F.line = 212;
    HEX5BHEX5DHEX3D_11495311(fields_12860527[0], makeNimstrLit("showlegend"), HEX25_11585785(l_12860517.showlegend));
    }
    
    F.line = 214;
    HEX5BHEX5DHEX3D_11495311(fields_12860527[0], makeNimstrLit("hovermode"), HEX25_11585683(makeNimstrLit("closest")));
    if (!(eqStrings(reprEnum(l_12860517.hovermode, NTI12661064), []))) {
    F.line = 216;
    HEX5BHEX5DHEX3D_11495311(fields_12860527[0], makeNimstrLit("hovermode"), HEX25_12910116(l_12860517.hovermode));
    }
    
    if ((0 < (l_12860517.annotations != null ? l_12860517.annotations.length : 0))) {
    F.line = 218;
    HEX5BHEX5DHEX3D_11495311(fields_12860527[0], makeNimstrLit("annotations"), HEX25_12910264(l_12860517.annotations));
    }
    
    if (!(is_empty_12667041(l_12860517.backgroundColor))) {
    F.line = 220;
    HEX5BHEX5DHEX3D_11495311(fields_12860527[0], makeNimstrLit("plot_bgcolor"), HEX25_12800219(l_12860517.backgroundColor));
    }
    
    if (!(is_empty_12667041(l_12860517.paperColor))) {
    F.line = 222;
    HEX5BHEX5DHEX3D_11495311(fields_12860527[0], makeNimstrLit("paper_bgcolor"), HEX25_12800219(l_12860517.paperColor));
    }
    
    F.line = 224;
    result_12860518 = {kind: 5, fields: nimCopy(null, fields_12860527[0], NTI11426067), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
  } while (false);
  framePtr = F.prev;

  return result_12860518;

}
function HEX2BHEX3D_10710021(x_10710025, x_10710025_Idx, y_10710026) {
  var F={procname:"+=.+=",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2589;
    x_10710025[x_10710025_Idx] = (x_10710025[x_10710025_Idx] + y_10710026);
  framePtr = F.prev;

  
}
function HEX2BHEX3D_14045001(aHEX60gensym14040055_14045004, bHEX60gensym14040056_14045005) {
  var F={procname:"basic3d.+=",prev:framePtr,filename:"basic3d.nim",line:0};
  framePtr = F;
    F.line = 129;
    HEX2BHEX3D_10710021(aHEX60gensym14040055_14045004, "x", bHEX60gensym14040056_14045005.x);
    F.line = 129;
    HEX2BHEX3D_10710021(aHEX60gensym14040055_14045004, "y", bHEX60gensym14040056_14045005.y);
    F.line = 129;
    HEX2BHEX3D_10710021(aHEX60gensym14040055_14045004, "z", bHEX60gensym14040056_14045005.z);
  framePtr = F.prev;

  
}
function HEX2A_14035019(aHEX60gensym14030057_14035021, bHEX60gensym14030058_14035022) {
  var result_14035023 = ({x: 0.0, y: 0.0, z: 0.0});

  var F={procname:"basic3d.*",prev:framePtr,filename:"basic3d.nim",line:0};
  framePtr = F;
    F.line = 123;
    nimCopy(result_14035023, vector3d_13987079((aHEX60gensym14030057_14035021.x * bHEX60gensym14030058_14035022), (aHEX60gensym14030057_14035021.y * bHEX60gensym14030058_14035022), (aHEX60gensym14030057_14035021.z * bHEX60gensym14030058_14035022)), NTI13987019);
  framePtr = F.prev;

  return result_14035023;

}
function next_lorenz_14062053() {
  var result_14062055 = ({x: 0.0, y: 0.0, z: 0.0});

  var F={procname:"lorenz.next_lorenz",prev:framePtr,filename:"lorenz.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 26;
    next_14062019[0].x = (a_14062014 * (current_14062018[0].y - current_14062018[0].x));
    F.line = 27;
    next_14062019[0].y = ((current_14062018[0].x * (b_14062015 - current_14062018[0].z)) - current_14062018[0].y);
    F.line = 28;
    next_14062019[0].z = ((current_14062018[0].x * current_14062018[0].y) - (c_14062016 * current_14062018[0].z));
    F.line = 29;
    HEX2BHEX3D_14045001(current_14062018[0], HEX2A_14035019(next_14062019[0], time_coefficient_14062021[0]));
    F.line = 30;
    nimCopy(result_14062055, current_14062018[0], NTI13987019);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14062055;

}
function euclidian_distance_14062035(a_14062037, b_14062038) {
  var result_14062039 = 0.0;

  var F={procname:"lorenz.euclidian_distance",prev:framePtr,filename:"lorenz.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 23;
    result_14062039 = Math.cbrt(((Math.pow((a_14062037.x - b_14062038.x), 2.0000000000000000e+00) + Math.pow((a_14062037.y - b_14062038.y), 2.0000000000000000e+00)) + Math.pow((a_14062037.z - b_14062038.z), 2.0000000000000000e+00)));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14062039;

}
function min_1245014(x_1245016, y_1245017) {
    var Tmp1;
      var Tmp2;

  var result_1245018 = 0.0;

      if ((x_1245016 <= y_1245017)) Tmp2 = true; else {        Tmp2 = !((y_1245017 == y_1245017));      }    if (Tmp2) {
    Tmp1 = x_1245016;
    }
    else {
    Tmp1 = y_1245017;
    }
    
    result_1245018 = Tmp1;

  return result_1245018;

}
function delete_14065005(x_14065010, x_14065010_Idx, i_14065011) {
  var F={procname:"delete.delete",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 1254;
    x_14065010[x_14065010_Idx].splice(i_14065011, 1);
  framePtr = F.prev;

  
}
function delete_14070431(x_14070436, x_14070436_Idx, i_14070437) {
  var F={procname:"delete.delete",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 1254;
    x_14070436[x_14070436_Idx].splice(i_14070437, 1);
  framePtr = F.prev;

  
}
function lorenz_animation_14062401(p_14062404) {
    function loop_14062558() {
      var F={procname:"lorenz_animation.loop",prev:framePtr,filename:"lorenz.nim",line:0};
      framePtr = F;
        F.line = 40;
        nimCopy(next_14062019[0], next_lorenz_14062053(), NTI13987019);
        L1: do {
          F.line = 41;
            L2: while (true) {
            if (!(euclidian_distance_14062035(last_14062020[0], next_14062019[0]) < min_distance_14062017)) break L2;
              F.line = 42;
              nimCopy(next_14062019[0], next_lorenz_14062053(), NTI13987019);
              F.line = 43;
              time_coefficient_14062021[0] = min_1245014(1.0000000000000000e-02, (time_coefficient_14062021[0] * 2.0000000000000000e+00));
            }
        } while(false);
        F.line = 44;
        if (p_14062404.traces[chckIndx(0, 0, (p_14062404.traces != null ? p_14062404.traces.length : 0)+0-1)-0].xs != null) { p_14062404.traces[chckIndx(0, 0, (p_14062404.traces != null ? p_14062404.traces.length : 0)+0-1)-0].xs.push(next_14062019[0].x); } else { p_14062404.traces[chckIndx(0, 0, (p_14062404.traces != null ? p_14062404.traces.length : 0)+0-1)-0].xs = [next_14062019[0].x]; };
        F.line = 45;
        if (p_14062404.traces[chckIndx(0, 0, (p_14062404.traces != null ? p_14062404.traces.length : 0)+0-1)-0].ys != null) { p_14062404.traces[chckIndx(0, 0, (p_14062404.traces != null ? p_14062404.traces.length : 0)+0-1)-0].ys.push(next_14062019[0].z); } else { p_14062404.traces[chckIndx(0, 0, (p_14062404.traces != null ? p_14062404.traces.length : 0)+0-1)-0].ys = [next_14062019[0].z]; };
        F.line = 48;
        var data_new_14062711 = JSON.parse(toJSStr(parse_traces_14062528(p_14062404.traces)));
        F.line = 49;
        plotly_14062557.react("lorenz", data_new_14062711, layout_14062556);
        F.line = 53;
        var max_size_14062714 = 1000;
        if ((max_size_14062714 < (p_14062404.traces[chckIndx(0, 0, (p_14062404.traces != null ? p_14062404.traces.length : 0)+0-1)-0].xs != null ? p_14062404.traces[chckIndx(0, 0, (p_14062404.traces != null ? p_14062404.traces.length : 0)+0-1)-0].xs.length : 0))) {
        F.line = 55;
        delete_14065005(p_14062404.traces[chckIndx(0, 0, (p_14062404.traces != null ? p_14062404.traces.length : 0)+0-1)-0], "xs", 0);
        F.line = 56;
        delete_14065005(p_14062404.traces[chckIndx(0, 0, (p_14062404.traces != null ? p_14062404.traces.length : 0)+0-1)-0], "ys", 0);
        F.line = 57;
        delete_14070431(p_14062404.traces[chckIndx(0, 0, (p_14062404.traces != null ? p_14062404.traces.length : 0)+0-1)-0], "zs", 0);
        }
        
        F.line = 58;
        time_coefficient_14062021[0] = 5.0000000000000001e-03;
        F.line = 59;
        nimCopy(last_14062020[0], next_14062019[0], NTI13987019);
      framePtr = F.prev;

      
    }

  var F={procname:"lorenz_animation.lorenz_animation",prev:framePtr,filename:"lorenz.nim",line:0};
  framePtr = F;
    F.line = 34;
    var data_14062555 = JSON.parse(toJSStr(parse_traces_14062528(p_14062404.traces)));
    F.line = 35;
    var layout_14062556 = JSON.parse(toJSStr(HEX24_11790416(HEX25_12860515(p_14062404.layout))));
    F.line = 36;
    var plotly_14062557 = function(){return (Plotly)}();
    F.line = 37;
    plotly_14062557.newPlot("lorenz", data_14062555, layout_14062556);
    F.line = 61;
    window.setInterval(loop_14062558, 100);
  framePtr = F.prev;

  
}
var d1_14062243 = {mode: 2, type: 0, name: makeNimstrLit("XZ-Pane"), xs: null, ys: null, zs: null, xs_err: null, ys_err: null, marker: null, text: null, opacity: 0.0, fill: 0, xaxis: null, yaxis: null, colormap: 0, customColormap: null, zmin: 0.0, zmax: 0.0, colorscale: 0, customColorscale: null, contours: {Field0: 0.0, Field1: 0.0, Field2: 0.0}, heatmap: false, smoothing: 0.0, open: null, high: null, low: null, close: null, histFunc: 0, histNorm: 0, cumulative: false, nBins: 0, bins: {Field0: 0.0, Field1: 0.0}, binSize: 0.0, width: 0.0, widths: null, autoWidth: false, align: 0, orientation: 0, lineWidth: 0};
d1_14062243.marker = {size: [1.0000000000000000e+00], color: [{r: 5.0000000000000000e-01, g: 5.0000000000000000e-01, b: 5.0000000000000000e-01, a: 0.0}], colorVals: null, colormap: 0, customColormap: null};
var layout_14062270 = {title: makeNimstrLit("Lorenz Attractor"), xaxis: {title: makeNimstrLit("X"), font: null, domain: null, side: 0, rangeslider: null, range: {Field0: 0.0, Field1: 0.0}, hideticklabels: false, gridColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), gridWidth: 0, ty: 0}, yaxis: {title: makeNimstrLit("Y"), font: null, domain: null, side: 0, rangeslider: null, range: {Field0: 0.0, Field1: 0.0}, hideticklabels: false, gridColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), gridWidth: 0, ty: 0}, autosize: false, width: 0, height: 0, hovermode: 0, annotations: null, showlegend: false, legend: null, font: null, yaxis2: null, barmode: 0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), paperColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
var p_14062286 = {layout: layout_14062270, traces: [d1_14062243]};
lorenz_animation_14062401(p_14062286);
function set_elements_13987244(t_13987247, ax_13987248, ay_13987249, az_13987250, aw_13987251, bx_13987252, by_13987253, bz_13987254, bw_13987255, cx_13987256, cy_13987257, cz_13987258, cw_13987259, tx_13987260, ty_13987261, tz_13987262, tw_13987263) {
  var F={procname:"basic3d.setElements",prev:framePtr,filename:"basic3d.nim",line:0};
  framePtr = F;
    F.line = 141;
    t_13987247.ax = ax_13987248;
    F.line = 142;
    t_13987247.ay = ay_13987249;
    F.line = 143;
    t_13987247.az = az_13987250;
    F.line = 144;
    t_13987247.aw = aw_13987251;
    F.line = 145;
    t_13987247.bx = bx_13987252;
    F.line = 146;
    t_13987247.by = by_13987253;
    F.line = 147;
    t_13987247.bz = bz_13987254;
    F.line = 148;
    t_13987247.bw = bw_13987255;
    F.line = 149;
    t_13987247.cx = cx_13987256;
    F.line = 150;
    t_13987247.cy = cy_13987257;
    F.line = 151;
    t_13987247.cz = cz_13987258;
    F.line = 152;
    t_13987247.cw = cw_13987259;
    F.line = 153;
    t_13987247.tx = tx_13987260;
    F.line = 154;
    t_13987247.ty = ty_13987261;
    F.line = 155;
    t_13987247.tz = tz_13987262;
    F.line = 156;
    t_13987247.tw = tw_13987263;
  framePtr = F.prev;

  
}
function matrix3d_13987061(ax_13987063, ay_13987064, az_13987065, aw_13987066, bx_13987067, by_13987068, bz_13987069, bw_13987070, cx_13987071, cy_13987072, cz_13987073, cw_13987074, tx_13987075, ty_13987076, tz_13987077, tw_13987078) {
  var result_13987295 = [({ax: 0.0, ay: 0.0, az: 0.0, aw: 0.0, bx: 0.0, by: 0.0, bz: 0.0, bw: 0.0, cx: 0.0, cy: 0.0, cz: 0.0, cw: 0.0, tx: 0.0, ty: 0.0, tz: 0.0, tw: 0.0})];

  var F={procname:"basic3d.matrix3d",prev:framePtr,filename:"basic3d.nim",line:0};
  framePtr = F;
    F.line = 159;
    set_elements_13987244(result_13987295[0], ax_13987063, ay_13987064, az_13987065, aw_13987066, bx_13987067, by_13987068, bz_13987069, bw_13987070, cx_13987071, cy_13987072, cz_13987073, cw_13987074, tx_13987075, ty_13987076, tz_13987077, tw_13987078);
  framePtr = F.prev;

  return result_13987295[0];

}
function point3d_13987084(x_13987086, y_13987087, z_13987088) {
  var result_14060208 = ({x: 0.0, y: 0.0, z: 0.0});

  var F={procname:"basic3d.point3d",prev:framePtr,filename:"basic3d.nim",line:0};
  framePtr = F;
    F.line = 857;
    result_14060208.x = x_13987086;
    F.line = 858;
    result_14060208.y = y_13987087;
    F.line = 859;
    result_14060208.z = z_13987088;
  framePtr = F.prev;

  return result_14060208;

}
